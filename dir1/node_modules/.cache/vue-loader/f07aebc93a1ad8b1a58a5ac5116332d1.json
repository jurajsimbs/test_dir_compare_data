{"remainingRequest":"C:\\work\\bi-admin-vue-new\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\work\\bi-admin-vue-new\\src\\components\\table\\simpleTable.vue?vue&type=style&index=0&id=f0a091ca&scoped=true&lang=css&","dependencies":[{"path":"C:\\work\\bi-admin-vue-new\\src\\components\\table\\simpleTable.vue","mtime":1552754725268},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.shrinkedFlexDiv {\n    flex: 0 0 auto;\n}\n",{"version":3,"sources":["simpleTable.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqNA;AACA;AACA","file":"simpleTable.vue","sourceRoot":"src/components/table","sourcesContent":["<template>\r\n    <div>\r\n        <v-card class=\"elevation-2\">\r\n            <v-layout row>\r\n                <v-spacer/>\r\n                <div class=\"shrinkedFlexDiv\">\r\n                    <v-btn flat icon @click=\"reload()\">\r\n                        <v-icon>autorenew</v-icon>\r\n                    </v-btn>\r\n                    <v-menu bottom left :disabled=\"!(pagination.totalItems>0)\">\r\n                        <v-btn icon slot=\"activator\">\r\n                            <v-icon>settings</v-icon>\r\n                        </v-btn>\r\n                        <v-list>\r\n                            <v-list-tile>\r\n                                <v-list-tile-action>\r\n                                    <v-icon>remove_red_eye</v-icon>\r\n                                </v-list-tile-action>\r\n                                <v-list-tile-content>\r\n                                    <v-list-tile-title>Visible columns</v-list-tile-title>\r\n                                </v-list-tile-content>\r\n                            </v-list-tile>\r\n                            <template v-if=\"optionalColumns && optionalColumns.length\">\r\n                                <v-divider/>\r\n                                <v-list-tile :key=\"index\"\r\n                                             @click=\"toggleColumnVisible(column.name)\"\r\n                                             v-for=\"(column, index) in optionalColumns\">\r\n                                    <v-list-tile-action>\r\n                                        <v-icon>{{hiddenColumns.indexOf(column.name) > -1 ? 'close' : 'check'}}</v-icon>\r\n                                    </v-list-tile-action>\r\n                                    <v-list-tile-content>\r\n                                        <v-list-tile-title>{{column.title}}</v-list-tile-title>\r\n                                    </v-list-tile-content>\r\n                                </v-list-tile>\r\n                            </template>\r\n                        </v-list>\r\n                    </v-menu>\r\n                </div>\r\n            </v-layout>\r\n            <v-data-table v-model=\"selected\"\r\n                          :headers=\"visibleColumns\"\r\n                          :items=\"rows\"\r\n                          :rowsPerPageItems=\"rowsPerPageItems\"\r\n                          :must-sort=\"true\"\r\n                          :disable-initial-sort=\"true\"\r\n                          :total-items=\"totalItems\"\r\n                          :select-all=\"selectable\"\r\n                          :loading=\"loading\"\r\n                          :pagination.sync=\"pagination\"\r\n                          @pagination=\"paginationUpdate\"\r\n            >\r\n                <template slot=\"items\" slot-scope=\"props\">\r\n                    <td v-if=\"selectable\">\r\n                        <v-checkbox\r\n                                primary\r\n                                hide-details\r\n                                v-model=\"selected\"\r\n                        ></v-checkbox>\r\n                    </td>\r\n                    <td v-for=\"(column, index) in visibleColumns\" v-if=\"column.value != 'actions'\">\r\n\r\n                        <component v-if=\"column.widget\"\r\n                                   :controller=\"controller\"\r\n                                   :is=\"column.widget\"\r\n                                   :column=\"column\"\r\n                                   :row=\"props.item\"\r\n                                   v-bind=\"column.options\"/>\r\n                        <SimpleTableCellTextWidget v-else\r\n                                                   :controller=\"controller\"\r\n                                                   :column=\"column\"\r\n                                                   :row=\"props.item\"\r\n                                                   v-bind=\"column.options\"/>\r\n                    </td>\r\n                    <td class=\"text-xs-center\">\r\n                        <slot name=\"actions\" :item=\"props.item\" v-if=\"props.item\">\r\n                            <v-btn v-if=\"detailPageName\" icon\r\n                                   :to=\"{name : detailPageName, params : {id : props.item.id}}\">\r\n                                <v-icon>info_outline</v-icon>\r\n                            </v-btn>\r\n                        </slot>\r\n                    </td>\r\n                </template>\r\n            </v-data-table>\r\n        </v-card>\r\n    </div>\r\n</template>\r\n<script>\r\n    import events from './../../table/events';\r\n    import SimpleTableSortOrder from './../../table/sortOrder';\r\n    import TableActions from './actions.vue';\r\n    import SimpleTableCellTextWidget from './cellWidget/text.vue';\r\n\r\n    const log = require('debug')('bi-admin-vue:simple-table');\r\n\r\n    export default {\r\n        components: {\r\n            TableActions, SimpleTableCellTextWidget\r\n        },\r\n        data() {\r\n            return {\r\n                hiddenColumns: [],\r\n                columns      : [],\r\n                totalItems   : 0,\r\n                rows         : [],\r\n                selectable   : false,\r\n                selected     : [],\r\n                multiSelect  : false,\r\n                pagination   : {},\r\n                loading      : false\r\n            }\r\n        },\r\n        computed  : {\r\n            visibleColumns() {\r\n\r\n                let visible = this.columns.filter((column) => {\r\n                    return this.hiddenColumns.indexOf(column.name) === -1;\r\n                })\r\n                    .map((column) => { //mapper from our format to vuetify column format\r\n                        column.text = column.title;\r\n                        column.value = column.name;\r\n                        return column;\r\n                    });\r\n\r\n                visible.push({\r\n                    text    : 'Actions',\r\n                    sortable: false,\r\n                    align   : 'center',\r\n                    value   : 'actions'\r\n                });\r\n\r\n                return visible;\r\n            },\r\n            optionalColumns() {\r\n                return this.columns.filter((column) => {\r\n                    return column.optional === true;\r\n                });\r\n            }\r\n        },\r\n        props     : {\r\n            rowsPerPageItems: {\r\n                type   : Array,\r\n                default: () => {\r\n                    return [5, 10, 25, {text: 'All', value: -1}]\r\n                }\r\n            },\r\n            detailPageName  : {\r\n                type: String\r\n            },\r\n            controller      : { //TODO\r\n                type   : Object,\r\n                default: () => null\r\n            }\r\n        },\r\n        watch     : {\r\n            pagination(pagination) {\r\n                this.controller.setPagination(pagination);\r\n            }\r\n        },\r\n        methods   : {\r\n            paginationUpdate(pagination) {\r\n\r\n            },\r\n            toggleColumnVisible(columnName) {\r\n                this.controller.toggleColumnVisible(columnName);\r\n            },\r\n            getVisibleColumns() {\r\n                return this.columns.filter((column) => {\r\n                    return this.hiddenColumns.indexOf(column.value === -1);\r\n                })\r\n            },\r\n            onDataLoading() {\r\n                this.loading = true;\r\n            },\r\n            onDataReceived(result) {\r\n                this.loading = false;\r\n                log('table data received', result);\r\n                this.rows = result.data.rows;\r\n                this.pagination.totalItems = result.data.count;\r\n                this.totalItems = result.data.count;\r\n            },\r\n            reload() {\r\n                this.controller.loadData();\r\n            },\r\n            onColumnVisibilityChnaged() {\r\n                this.hiddenColumns = this.controller.configuration.hiddenColumns;\r\n            }\r\n        },\r\n        mounted() {\r\n            if (!this.controller) {\r\n                log(`Table ${this.name} doesn't have a controller.`);\r\n                return;\r\n            }\r\n\r\n            this.pagination.rowsPerPage = this.controller.configuration.rowsPerPage;\r\n            this.pagination.sortBy = this.controller.configuration.sortBy;\r\n            this.pagination.descending = this.controller.configuration.sortOrder === SimpleTableSortOrder.DESCENDING;\r\n            this.selectable = this.controller.configuration.selectable;\r\n            this.multiSelect = this.controller.configuration.multiSelect;\r\n            this.columns = this.controller.configuration.columns;\r\n            this.hiddenColumns = this.controller.configuration.hiddenColumns;\r\n            this.controller.$on(events.DATA_LOADING, this.onDataLoading);\r\n            this.controller.$on(events.DATA_RECEIVED, this.onDataReceived);\r\n            this.controller.$on(events.COLUMN_VISIBILITY_CHANGED, this.onColumnVisibilityChnaged);\r\n            this.reload();\r\n        },\r\n        beforeDestroy() {\r\n            this.controller.$off(events.DATA_LOADING, this.onDataLoading);\r\n            this.controller.$off(events.DATA_RECEIVED, this.onDataReceived);\r\n            this.controller.$off(events.COLUMN_VISIBILITY_CHANGED, this.onColumnVisibilityChnaged);\r\n        }\r\n    }\r\n</script>\r\n<style scoped>\r\n    .shrinkedFlexDiv {\r\n        flex: 0 0 auto;\r\n    }\r\n</style>"]}]}