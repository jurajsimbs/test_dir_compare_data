{"remainingRequest":"C:\\work\\bi-admin-vue-new\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\work\\bi-admin-vue-new\\src\\demo\\page\\uploadImage.vue?vue&type=style&index=0&id=12199406&scoped=true&lang=css&","dependencies":[{"path":"C:\\work\\bi-admin-vue-new\\src\\demo\\page\\uploadImage.vue","mtime":1552754725282},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.img-preview {\n    background-size: contain;\n}\n",{"version":3,"sources":["uploadImage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmHA;AACA;AACA","file":"uploadImage.vue","sourceRoot":"src/demo/page","sourcesContent":["<template>\r\n    <SimplePage>\r\n        <div slot=\"content\">\r\n            <SimpleTable :controller=\"tableController\">\r\n                <template slot=\"actions\" slot-scope=\"props\">\r\n                    <v-btn title=\"Details\" @click=\"() => {openPreview(props.item.url)}\" icon>\r\n                        <v-icon>info_outline</v-icon>\r\n                    </v-btn>\r\n                </template>\r\n            </SimpleTable>\r\n            <v-dialog v-model=\"previewDialog\"\r\n                      max-width=\"900\"\r\n            >\r\n                <v-card>\r\n                    <v-card-media :contain=\"true\" class=\"img-preview\" :src=\"previewUrl\" height=\"500px\">\r\n                    </v-card-media>\r\n                    <v-card-actions>\r\n                        <v-btn flat @click=\"closePreview\">Close</v-btn>\r\n                    </v-card-actions>\r\n                </v-card>\r\n            </v-dialog>\r\n            <v-btn v-if=\"!uploadVisible\" color=\"success\" @click=\"enableUpload\">Upload</v-btn>\r\n            <file-pond v-if=\"uploadVisible\"\r\n                    name=\"file\"\r\n                    ref=\"pond\"\r\n                    label-idle=\"Drop files here...\"\r\n                    allow-multiple=\"false\"\r\n                    accepted-file-types=\"image/jpeg, image/png\"\r\n                    server=\"/upload/image\"\r\n                    @processfile=\"onFileUploaded\"/>\r\n        </div>\r\n    </SimplePage>\r\n</template>\r\n<script>\r\n    import FilePondPluginFileValidateType from 'filepond-plugin-file-validate-type';\r\n    import FilePondPluginImagePreview from 'filepond-plugin-image-preview';\r\n    import 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.min.css';\r\n    import 'filepond/dist/filepond.min.css';\r\n    import vueFilePond from 'vue-filepond';\r\n    import SimpleTableFilterTextFilter from './../../components/table/filter/SimpleTableFilterTextFilter';\r\n    import ImagePreviewTableCellWidget from './../../components/editor/imageBrowser/previewWidget';\r\n    import TableController from './../../table/controller';\r\n    import SimpleTableSortOrder from './../../table/sortOrder';\r\n    import ImagesResource from './../ImagesResource'\r\n\r\n    // Import FilePond plugins\r\n    // Please note that you need to install these plugins separately\r\n    const FilePond = vueFilePond(FilePondPluginFileValidateType, FilePondPluginImagePreview);\r\n\r\n    export default {\r\n        data() {\r\n            return {\r\n                previewDialog: false,\r\n                previewUrl   : null,\r\n                myFiles      : [],\r\n                uploadVisible: false,\r\n            }\r\n        },\r\n        computed  : {\r\n            tableController() {\r\n                return new TableController({\r\n                        identifier : 'tableDemo1',\r\n                        rowsPerPage: 5,\r\n                        sortBy     : 'name',\r\n                        sortOrder  : SimpleTableSortOrder.DESCENDING,\r\n                        columns    : [\r\n                            {\r\n                                name    : 'id',\r\n                                title   : 'ID',\r\n                                align   : 'left',\r\n                                sortable: false\r\n                            },\r\n                            {\r\n                                name    : 'code',\r\n                                title   : 'Preview',\r\n                                sortable: false,\r\n                                optional: true,\r\n                                widget  : ImagePreviewTableCellWidget\r\n                            }\r\n                        ],\r\n                    },\r\n                    ImagesResource\r\n                )\r\n            }\r\n        },\r\n        components: {\r\n            FilePond, TableController, SimpleTableSortOrder, SimpleTableFilterTextFilter\r\n        },\r\n        methods   : {\r\n            enableUpload() {\r\n                this.uploadVisible = true;\r\n            },\r\n            onFileUploaded(err, info) {\r\n                this.$broadcast('success', `File ${info.file.name} uploaded`);\r\n                this.tableController.loadData();\r\n                //and clear uploaded files list after a while\r\n                setTimeout(() => {\r\n                    this.myFiles = [];\r\n                    this.uploadVisible = false;\r\n                }, 2000)\r\n            },\r\n            deleteAsset(value) {\r\n\r\n            },\r\n            openPreview(url) {\r\n                this.previewUrl = url;\r\n                this.previewDialog = true;\r\n            },\r\n            closePreview() {\r\n                this.previewDialog = false;\r\n            }\r\n        }\r\n    }\r\n</script>\r\n<style scoped>\r\n    .img-preview {\r\n        background-size: contain;\r\n    }\r\n</style>"]}]}