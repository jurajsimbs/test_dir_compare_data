{"remainingRequest":"C:\\work\\bi-admin-vue-new\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\work\\bi-admin-vue-new\\src\\components\\editor\\preview.vue?vue&type=style&index=0&id=e8e55794&scoped=true&lang=css&","dependencies":[{"path":"C:\\work\\bi-admin-vue-new\\src\\components\\editor\\preview.vue","mtime":1552754725229},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.preview-frame {\n    width: 100%;\n    min-height: 200px;\n    border: 1px solid lightGray;\n}\n",{"version":3,"sources":["preview.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqIA;AACA;AACA;AACA;AACA","file":"preview.vue","sourceRoot":"src/components/editor","sourcesContent":["<template>\r\n    <iframe class=\"preview-frame\" ref=\"previewFrame\"\r\n            @load=\"previewReady\"></iframe>\r\n</template>\r\n<script>\r\n    import Vue from 'vue';\r\n\r\n    export default {\r\n        name   : 'ContentPreview',\r\n        data() {\r\n            return {\r\n                previewInstance: null\r\n            }\r\n        },\r\n        props  : {\r\n            cssFile: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            source : {\r\n                type: String,\r\n            },\r\n            plugins: {\r\n                type   : Array,\r\n                default: () => []\r\n            }\r\n        },\r\n        methods: {\r\n            getPreviewHtml() {\r\n                let temporaryDiv       = this.$refs.previewFrame.contentWindow.document.createElement('div');\r\n                temporaryDiv.innerHTML = this.source;\r\n                this.plugins.map((plugin) => {\r\n                    let widgets = temporaryDiv.querySelector('.' + plugin.name);\r\n                    if (!widgets) {\r\n                        return;\r\n                    }\r\n                    if (!Array.isArray(widgets)) {\r\n                        widgets = [widgets];\r\n                    }\r\n                    Vue.component(plugin.name, plugin.getComponent());\r\n                    widgets.map((widget) => {\r\n                        let widgetData      = JSON.parse(widget.dataset.data);\r\n                        let newWidget       = this.$refs.previewFrame.contentWindow.document.createElement('div');\r\n                        newWidget.innerHTML = plugin.getWidgetTemplate(widgetData);\r\n                        widget.parentNode.insertBefore(newWidget, widget);\r\n                        widget.parentNode.removeChild(widget);\r\n                    });\r\n                });\r\n//                this.plugins.map((plugin) => {\r\n//                    let widgets = temporaryDiv.querySelector('.' + plugin.name);\r\n//                    if (!widgets) {\r\n//                        return;\r\n//                    }\r\n//                    if (!Array.isArray(widgets)) {\r\n//                        widgets = [widgets];\r\n//                    }\r\n//                    console.log('Found ' + widgets.length + ' instances');\r\n//                    widgets.map((widget) => {\r\n//                        let newWidget       = document.createElement('div');\r\n//                        newWidget.innerHTML = plugin.getWidgetTemplate({title: 'aaaa', content: 'bbbb'});\r\n//                        widget.parentNode.insertBefore(newWidget, widget);\r\n//                        widget.parentNode.removeChild(widget);\r\n//                    });\r\n//                });\r\n                return '<div>' + temporaryDiv.innerHTML + '</div>';\r\n            },\r\n            attachStyles() {\r\n                if (!this.cssFile) {\r\n                    return\r\n                }\r\n                let styleLink  = this.$refs.previewFrame.contentWindow.document.createElement('link');\r\n                styleLink.rel  = \"stylesheet\";\r\n                styleLink.type = \"text/css\";\r\n                styleLink.href = this.cssFile;\r\n                this.$refs.previewFrame.contentWindow.document.getElementsByTagName(\"head\")[0].appendChild(styleLink);\r\n            },\r\n            previewReady() {\r\n                this.attachStyles();\r\n                let previewHtml = this.getPreviewHtml();\r\n\r\n                let container = this.$refs.previewFrame.contentWindow.document.createElement('div');\r\n                this.$refs.previewFrame.contentWindow.document.body.appendChild(container);\r\n                container.innerHTML = previewHtml;\r\n\r\n//                let previewDiv = this.$refs.previewFrame.contentWindow.document.createElement('div');\r\n//                this.$refs.previewFrame.contentWindow.document.body.appendChild(previewDiv);\r\n//\r\n//                if (this.previewInstance) {\r\n//                    this.previewInstance.$destroy();\r\n//                    previewDiv.innerHTML = '';\r\n//                }\r\n//                let container = document.createElement('div');\r\n//                previewDiv.appendChild(container);\r\n//                container.innerHTML = this.editorValue;\r\n//                this.plugins.map((plugin) => {\r\n//                    let widgets = container.querySelector('.' + plugin.name);\r\n//                    if (!widgets) {\r\n//                        return;\r\n//                    }\r\n//                    if (!Array.isArray(widgets)) {\r\n//                        widgets = [widgets];\r\n//                    }\r\n//                    Vue.component(plugin.name, plugin.getComponent());\r\n//                    console.log('Found ' + widgets.length + ' instances');\r\n//                    widgets.map((widget) => {\r\n//                        let widgetData      = JSON.parse(widget.dataset.data);\r\n//                        let newWidget       = document.createElement('div');\r\n//                        newWidget.innerHTML = plugin.getWidgetTemplate(widgetData);\r\n//                        widget.parentNode.insertBefore(newWidget, widget);\r\n//                        widget.parentNode.removeChild(widget);\r\n//                    });\r\n//                });\r\n//\r\n//                let template = '<preview-container>' + container.innerHTML + '</preview-container>';\r\n\r\n                this.previewInstance = new Vue({\r\n                    el  : container,\r\n                    data: {\r\n                        compiled: null\r\n                    },\r\n                    mounted() {\r\n                        setTimeout(() => {\r\n                            Vue.compile(previewHtml);\r\n                        }, 500)\r\n\r\n                    }\r\n                });\r\n\r\n            },\r\n        }\r\n    }\r\n</script>\r\n<style scoped>\r\n    .preview-frame {\r\n        width: 100%;\r\n        min-height: 200px;\r\n        border: 1px solid lightGray;\r\n    }\r\n</style>"]}]}