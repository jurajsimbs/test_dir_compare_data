{"remainingRequest":"C:\\work\\bi-admin-vue-new\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\work\\bi-admin-vue-new\\src\\components\\editor\\editor.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\work\\bi-admin-vue-new\\src\\components\\editor\\editor.vue","mtime":1552754725226},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\napp-comparsion,\napp-facebook,\napp-gallery,\napp-gallery-slide,\napp-giphy,\napp-imgur,\napp-instagram,\napp-picture,\napp-soundcloud,\napp-tweet,\napp-twitch,\napp-vimeo,\napp-youtube,\napp-author,\napp-back-to-contents {\n    display: block;\n}\n",{"version":3,"sources":["editor.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"editor.vue","sourceRoot":"src/components/editor","sourcesContent":["<template>\r\n    <div>\r\n        <v-tabs v-model=\"activeTab\" grow>\r\n            <v-tab ripple :key=\"modes.VISUAL\" :href=\"`#${modes.VISUAL}`\">\r\n                Visual\r\n            </v-tab>\r\n            <v-tab v-if=\"source\" ripple :key=\"modes.SOURCE\" :href=\"`#${modes.SOURCE}`\">\r\n                Source\r\n            </v-tab>\r\n            <v-tab v-if=\"preview\" ripple :key=\"modes.PREVIEW\" :href=\"`#${modes.PREVIEW}`\">\r\n                Preview\r\n            </v-tab>\r\n            <v-tab-item :key=\"modes.VISUAL\" :id=\"`${modes.VISUAL}`\">\r\n                <ContentEditor v-if=\"activeTab===modes.VISUAL\"\r\n                               :value=\"value\"\r\n                               @input=\"onValueChangeContent\"\r\n                               v-bind=\"contentOptions\"\r\n                               :editorOptions=\"editorOptions\"></ContentEditor>\r\n            </v-tab-item>\r\n            <v-tab-item v-if=\"source\" :id=\"`${modes.SOURCE}`\" :key=\"modes.SOURCE\">\r\n                <SourceEditor v-if=\"sourceEditor===sourceEditorTypes.MONACO && activeTab===modes.SOURCE\" v-bind=\"sourceOptions\"\r\n                              :value=\"value\"\r\n                              @input=\"onValueChangeSource\"\r\n                >\r\n                </SourceEditor>\r\n                <AlternateSourceEditor v-if=\"sourceEditor===sourceEditorTypes.ACE && activeTab===modes.SOURCE\" v-bind=\"sourceOptions\"\r\n                                       :value=\"value\"\r\n                                       @input=\"onValueChangeSource\"\r\n                >\r\n                </AlternateSourceEditor>\r\n            </v-tab-item>\r\n            <v-tab-item v-if=\"preview\" :key=\"modes.PREVIEW\" :id=\"`${modes.PREVIEW}`\">\r\n                <ContentPreview v-bind=\"Object.assign({}, previewOptions, contentOptions)\" :source=\"value\"/>\r\n            </v-tab-item>\r\n        </v-tabs>\r\n    </div>\r\n</template>\r\n<script>\r\n    import debug from 'debug';\r\n    import SOURCE_EDITOR from '../../const/sourceEditor'\r\n    import AlternateSourceEditor from './alternateSourceEditor';\r\n    import EditorComparsion from './widgets/comparsion/comparsion';\r\n    import EditorFacebook from './widgets/facebook/facebook';\r\n    import EditorGallery from './widgets/gallery/gallery';\r\n    import EditorGiphy from './widgets/giphy/giphy';\r\n    import EditorGallerySlide from './widgets/gallery/gallerySlide';\r\n    import EditorPicture from './widgets/picture/picture';\r\n    import EditorImgur from './widgets/imgur/imgur';\r\n    import EditorInstagram from './widgets/instagram/instagram';\r\n    import EditorMixer from './widgets/mixer/mixer';\r\n    import EditorSoundcloud from './widgets/soundcloud/soundcloud';\r\n    import EditorTweet from './widgets/tweet/tweet';\r\n    import EditorTwitch from './widgets/twitch/twitch';\r\n    import EditorVimeo from './widgets/vimeo/vimeo';\r\n    import EditorYoutube from './widgets/youtube/youtube';\r\n    import EditorAuthor from './widgets/author/author';\r\n    import EditorBackToContents from './widgets/backToContent/backToContent';\r\n    import documentUtil from './../../lib/util/document';\r\n\r\n    const MODES = {\r\n        VISUAL : 'visual',\r\n        SOURCE : 'source',\r\n        PREVIEW: 'preview'\r\n    }\r\n\r\n    const log = debug('bi-admin-vue:editor');\r\n\r\n    export default {\r\n        name      : 'Editor',\r\n        components: {AlternateSourceEditor},\r\n        props     : {\r\n            /**\r\n             * Editor value, part of the v-model directive\r\n             * @type {String}\r\n             */\r\n            value         : {\r\n                type: String\r\n            },\r\n            /**\r\n             * If true, source tab with source editor will be visible\r\n             * @type Boolean\r\n             */\r\n            source        : {\r\n                type   : Boolean,\r\n                default: false\r\n            },\r\n            /**\r\n             * Source editor type\r\n             * @see SourceEditorConst\r\n             * @type String\r\n             */\r\n            sourceEditor  : {\r\n                type   : String,\r\n                default: SOURCE_EDITOR.TYPES.MONACO\r\n            },\r\n            /**\r\n             * NOT READY YET!\r\n             * If true, preview tab with preview div will be visible\r\n             * @type Boolean\r\n             */\r\n            preview       : {\r\n                type   : Boolean,\r\n                default: false\r\n            },\r\n            /**\r\n             * Object of properties that will be applied to content editor component\r\n             * @type {Object}\r\n             */\r\n            contentOptions: {\r\n                type   : Object,\r\n                default: () => {\r\n                    return {};\r\n                }\r\n            },\r\n            /**\r\n             * Object of properties that will be applied to source editor component\r\n             * @type {Object}\r\n             */\r\n            sourceOptions : {\r\n                type   : Object,\r\n                default: () => {\r\n                    return {\r\n                        automaticLayout: true,\r\n                        height         : 600,\r\n                        language       : \"html\"\r\n                    }\r\n                }\r\n            },\r\n            /**\r\n             * Object of properties that will be applied to editor component\r\n             * @type {Object}\r\n             */\r\n            editorOptions : {\r\n                type: Object\r\n            },\r\n            /**\r\n             * NOT READY YET!\r\n             * Object of properties that will be applied to preview component\r\n             * @type {Object}\r\n             */\r\n            previewOptions: {\r\n                type   : Object,\r\n                default: () => {\r\n                    return {\r\n                        cssFile: null\r\n                    }\r\n                }\r\n            },\r\n            uploadUrl     : {\r\n                type: String\r\n            }\r\n        },\r\n        computed  : {\r\n            modes() {\r\n                return MODES;\r\n            },\r\n            sourceEditorTypes() {\r\n                return SOURCE_EDITOR.TYPES\r\n            }\r\n        },\r\n        data() {\r\n            return {\r\n                activeTab: MODES.VISUAL\r\n            }\r\n        },\r\n        mounted() {\r\n            log('Source options', this.sourceOptions);\r\n        },\r\n        watch     : {\r\n            value(newVal) {\r\n                log('Value was changed from outside');\r\n            }\r\n        },\r\n        methods   : {\r\n            onValueChangeSource(value) {\r\n                log('Value changed from source editor');\r\n                if (value !== this.value) {\r\n                    this.$emit('input', value);\r\n                }\r\n            },\r\n            onValueChangeContent(value) {\r\n                log('Value changed from content editor');\r\n                if (value !== this.value) {\r\n                    this.$emit('input', value);\r\n                }\r\n            },\r\n            handleTabChange(val) {\r\n                this.activeTab = MODES.VISUAL;\r\n            },\r\n        },\r\n        created() {\r\n            const store                   = this.getVue().getAppStore();\r\n            const beforeCreateVueInstance = function(RootComponentDefinition) {\r\n                //thos will allow to access store in html elements like this.$store\r\n                RootComponentDefinition.store = store;\r\n                return RootComponentDefinition;\r\n            };\r\n\r\n            //TODO: check if there is a global callback in vueCustomElements plugin!\r\n            this.getVue().customElement('app-comparsion', EditorComparsion, {shadow: true, beforeCreateVueInstance});\r\n            this.getVue().customElement('app-facebook', EditorFacebook, {shadow: true, beforeCreateVueInstance});\r\n            this.getVue().customElement('app-gallery', EditorGallery, {shadow: true, beforeCreateVueInstance});\r\n            this.getVue().customElement('app-gallery-slide', EditorGallerySlide, {shadow: true, beforeCreateVueInstance});\r\n            this.getVue().customElement('app-giphy', EditorGiphy, {shadow: true, beforeCreateVueInstance});\r\n            this.getVue().customElement('app-imgur', EditorImgur, {shadow: true, beforeCreateVueInstance});\r\n            this.getVue().customElement('app-instagram', EditorInstagram, {shadow: true, beforeCreateVueInstance});\r\n            this.getVue().customElement('app-mixer', EditorMixer, {shadow: true, beforeCreateVueInstance});\r\n            this.getVue().customElement('app-picture', EditorPicture, {shadow: true, beforeCreateVueInstance});\r\n            this.getVue().customElement('app-soundcloud', EditorSoundcloud, {shadow: true, beforeCreateVueInstance});\r\n            this.getVue().customElement('app-tweet', EditorTweet, {shadow: true, beforeCreateVueInstance});\r\n            this.getVue().customElement('app-twitch', EditorTwitch, {shadow: true, beforeCreateVueInstance});\r\n            this.getVue().customElement('app-vimeo', EditorVimeo, {shadow: true, beforeCreateVueInstance});\r\n            this.getVue().customElement('app-youtube', EditorYoutube, {shadow: true, beforeCreateVueInstance});\r\n\r\n            this.getVue().customElement('app-back-to-contents', EditorBackToContents, {shadow: true, beforeCreateVueInstance});\r\n            EditorAuthor.props.resource.default = () => this.contentOptions.authorsListResource;\r\n            this.getVue().customElement('app-author', EditorAuthor, {\r\n                shadow: true,\r\n                beforeCreateVueInstance\r\n            });\r\n        }\r\n    }\r\n</script>\r\n<style>\r\n    app-comparsion,\r\n    app-facebook,\r\n    app-gallery,\r\n    app-gallery-slide,\r\n    app-giphy,\r\n    app-imgur,\r\n    app-instagram,\r\n    app-picture,\r\n    app-soundcloud,\r\n    app-tweet,\r\n    app-twitch,\r\n    app-vimeo,\r\n    app-youtube,\r\n    app-author,\r\n    app-back-to-contents {\r\n        display: block;\r\n    }\r\n</style>"]}]}