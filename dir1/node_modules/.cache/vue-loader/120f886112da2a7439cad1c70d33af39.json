{"remainingRequest":"C:\\work\\bi-admin-vue-new\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\work\\bi-admin-vue-new\\src\\components\\table\\rowActionWidget\\icon.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\work\\bi-admin-vue-new\\src\\components\\table\\rowActionWidget\\icon.vue","mtime":1552754725266},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport debug from 'debug';\nimport Events from '../../../app/events';\n\nconst log = debug('bi-admin-vue:table:column-widget:icon');\n\nexport default {\n    name   : 'SimpleTableIconRowActionWidget',\n    data() {\n        return {\n            processing: false\n        }\n    },\n    mounted() {\n        if (!this.row) {\n            console.warn('Table icon widget is missing row object!');\n        }\n    },\n    methods: {\n        async doOnClick() {\n            if (this.async) {\n                this.processing = true;\n            }\n            try {\n                await this.onClick(this.row, this.controller);\n                if (this.successMessage) {\n                    this.appManager.$emit(Events.SUCCESS, this.successMessage);\n                }\n            } catch (e) {\n                console.error(e);\n                if (this.errorMessage) {\n                    this.appManager.$emit(Events.ERROR, this.errorMessage);\n                }\n            } finally {\n                if (this.async) {\n                    this.processing = false;\n                }\n            }\n        }\n    },\n    props  : {\n        controller    : {\n            type   : Object,\n            default: () => {\n                configuration: {\n                }\n            }\n        },\n        onClick       : {\n            type   : Function,\n            default: () => {\n                return () => {\n                    log('This icon does nothing');\n                }\n            }\n        },\n        title         : {\n            type   : String,\n            default: 'Action'\n        },\n        successMessage: {\n            type   : String,\n            default: null,\n        },\n        errorMessage  : {\n            type   : String,\n            default: null,\n        },\n        async         : {\n            type   : Boolean,\n            default: false\n        },\n        icon          : {\n            type   : String,\n            default: 'extension'\n        },\n        row           : {\n            type   : Object,\n            default: () => {\n                return {}\n            }\n        }\n    }\n}\n",{"version":3,"sources":["icon.vue"],"names":[],"mappings":";;;;;;;;;;;;;;AAcA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"icon.vue","sourceRoot":"src/components/table/rowActionWidget","sourcesContent":["<template>\r\n    <div v-if=\"row\">\r\n        <v-btn flat icon\r\n               :title=\"title\"\r\n                :loading=\"processing\"\r\n                @click=\"doOnClick\"\r\n                :disabled=\"processing\"\r\n                color=\"black\"\r\n        >\r\n            <v-icon>{{icon}}</v-icon>\r\n        </v-btn>\r\n    </div>\r\n</template>\r\n<script>\r\n    import debug from 'debug';\r\n    import Events from '../../../app/events';\r\n\r\n    const log = debug('bi-admin-vue:table:column-widget:icon');\r\n\r\n    export default {\r\n        name   : 'SimpleTableIconRowActionWidget',\r\n        data() {\r\n            return {\r\n                processing: false\r\n            }\r\n        },\r\n        mounted() {\r\n            if (!this.row) {\r\n                console.warn('Table icon widget is missing row object!');\r\n            }\r\n        },\r\n        methods: {\r\n            async doOnClick() {\r\n                if (this.async) {\r\n                    this.processing = true;\r\n                }\r\n                try {\r\n                    await this.onClick(this.row, this.controller);\r\n                    if (this.successMessage) {\r\n                        this.appManager.$emit(Events.SUCCESS, this.successMessage);\r\n                    }\r\n                } catch (e) {\r\n                    console.error(e);\r\n                    if (this.errorMessage) {\r\n                        this.appManager.$emit(Events.ERROR, this.errorMessage);\r\n                    }\r\n                } finally {\r\n                    if (this.async) {\r\n                        this.processing = false;\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        props  : {\r\n            controller    : {\r\n                type   : Object,\r\n                default: () => {\r\n                    configuration: {\r\n                    }\r\n                }\r\n            },\r\n            onClick       : {\r\n                type   : Function,\r\n                default: () => {\r\n                    return () => {\r\n                        log('This icon does nothing');\r\n                    }\r\n                }\r\n            },\r\n            title         : {\r\n                type   : String,\r\n                default: 'Action'\r\n            },\r\n            successMessage: {\r\n                type   : String,\r\n                default: null,\r\n            },\r\n            errorMessage  : {\r\n                type   : String,\r\n                default: null,\r\n            },\r\n            async         : {\r\n                type   : Boolean,\r\n                default: false\r\n            },\r\n            icon          : {\r\n                type   : String,\r\n                default: 'extension'\r\n            },\r\n            row           : {\r\n                type   : Object,\r\n                default: () => {\r\n                    return {}\r\n                }\r\n            }\r\n        }\r\n    }\r\n</script>"]}]}