{"remainingRequest":"C:\\work\\bi-admin-vue-new\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\work\\bi-admin-vue-new\\src\\components\\table\\rowActionWidget\\publish.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\work\\bi-admin-vue-new\\src\\components\\table\\rowActionWidget\\publish.vue","mtime":1552754725268},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport debug from 'debug';\nimport Events from './../../../app/events';\n\nconst log = debug('bi-admin-vue:table:column-widget:publish');\n\nexport default {\n    name   : 'SimpleTablePublishRowActionWidget',\n    data() {\n        return {\n            menuVisible : false,\n            publishing  : false,\n            unpublishing: false,\n        }\n    },\n    methods: {\n        async publish(value) {\n            this.menuVisible = false;\n\n            if (value) {\n                this.publishing = true;\n            } else {\n                this.unpublishing = true;\n            }\n\n            try {\n                await this.onVisibilityChange(this.row, value);\n                this.appManager.$emit(Events.SUCCESS, 'Visibility status changed');\n            } catch (e) {\n                this.appManager.$emit(Events.ERROR, 'Unable to change visibility status');\n                log('Unable to change visibility status', e);\n            } finally {\n                this.publishing   = false;\n                this.unpublishing = false;\n            }\n            await this.controller.loadData();\n        }\n    },\n    props  : {\n        controller        : {\n            type   : Object,\n            default: () => {\n                configuration: {\n                }\n            }\n        },\n        onVisibilityChange: {\n            type   : Function,\n            default: () => {\n                log('Warning: publish widget does not have onVisibilityChange prop defined!');\n                return () => {\n                    return Promise.reject();\n                }\n            }\n        },\n        fieldName         : {\n            type   : String,\n            default: 'published'\n        },\n        row               : {\n            type   : Object,\n            default: () => {\n            }\n        }\n    }\n}\n",{"version":3,"sources":["publish.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"publish.vue","sourceRoot":"src/components/table/rowActionWidget","sourcesContent":["<template>\r\n    <div v-if=\"row\">\r\n        <v-menu bottom left :close-on-content-click=\"false\">\r\n            <v-btn icon slot=\"activator\">\r\n                <v-icon>{{row[fieldName]?'visibility':'visibility_off'}}</v-icon>\r\n            </v-btn>\r\n            <v-list>\r\n                <v-list-tile>\r\n                    <v-btn\r\n                            :loading=\"publishing\"\r\n                            @click=\"publish(true)\"\r\n                            :disabled=\"publishing || unpublishing\"\r\n                            flat\r\n                    >\r\n                        Published\r\n                        <v-icon right dark>{{row[fieldName]?'check':''}}</v-icon>\r\n                    </v-btn>\r\n                </v-list-tile>\r\n                <v-list-tile>\r\n                    <v-btn\r\n                            :loading=\"unpublishing\"\r\n                            @click=\"publish(false)\"\r\n                            :disabled=\"publishing || unpublishing\"\r\n                            flat\r\n                    >\r\n                        Unpublished\r\n                        <v-icon right dark>{{!row[fieldName]?'check':''}}</v-icon>\r\n                    </v-btn>\r\n                </v-list-tile>\r\n            </v-list>\r\n        </v-menu>\r\n    </div>\r\n</template>\r\n<script>\r\n    import debug from 'debug';\r\n    import Events from './../../../app/events';\r\n\r\n    const log = debug('bi-admin-vue:table:column-widget:publish');\r\n\r\n    export default {\r\n        name   : 'SimpleTablePublishRowActionWidget',\r\n        data() {\r\n            return {\r\n                menuVisible : false,\r\n                publishing  : false,\r\n                unpublishing: false,\r\n            }\r\n        },\r\n        methods: {\r\n            async publish(value) {\r\n                this.menuVisible = false;\r\n\r\n                if (value) {\r\n                    this.publishing = true;\r\n                } else {\r\n                    this.unpublishing = true;\r\n                }\r\n\r\n                try {\r\n                    await this.onVisibilityChange(this.row, value);\r\n                    this.appManager.$emit(Events.SUCCESS, 'Visibility status changed');\r\n                } catch (e) {\r\n                    this.appManager.$emit(Events.ERROR, 'Unable to change visibility status');\r\n                    log('Unable to change visibility status', e);\r\n                } finally {\r\n                    this.publishing   = false;\r\n                    this.unpublishing = false;\r\n                }\r\n                await this.controller.loadData();\r\n            }\r\n        },\r\n        props  : {\r\n            controller        : {\r\n                type   : Object,\r\n                default: () => {\r\n                    configuration: {\r\n                    }\r\n                }\r\n            },\r\n            onVisibilityChange: {\r\n                type   : Function,\r\n                default: () => {\r\n                    log('Warning: publish widget does not have onVisibilityChange prop defined!');\r\n                    return () => {\r\n                        return Promise.reject();\r\n                    }\r\n                }\r\n            },\r\n            fieldName         : {\r\n                type   : String,\r\n                default: 'published'\r\n            },\r\n            row               : {\r\n                type   : Object,\r\n                default: () => {\r\n                }\r\n            }\r\n        }\r\n    }\r\n</script>"]}]}