{"remainingRequest":"C:\\work\\bi-admin-vue-new\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\work\\bi-admin-vue-new\\src\\components\\editor\\imageBrowser\\imageBrowserDialog.vue?vue&type=style&index=0&id=2352e7e5&scoped=true&lang=scss&","dependencies":[{"path":"C:\\work\\bi-admin-vue-new\\src\\components\\editor\\imageBrowser\\imageBrowserDialog.vue","mtime":1552754725227},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\sass-loader\\lib\\loader.js","mtime":1533139052000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.alert {\n    width: 100%;\n}\n\nli {\n    list-style-type: none;\n\n    .edit-icon, .remove-icon {\n        display: none;\n    }\n}\n\n.image-list-preview-card {\n    padding-left: 8px;\n    margin-bottom: 5px;\n\n    .image-list-preview {\n        //height: 350px;\n        margin: 15px;\n        overflow-x: auto;\n        overflow-y: hidden;\n        padding-bottom: 10px;\n\n        .list {\n            display: flex;\n        }\n\n        .image-preview {\n            //height: 300px;\n            display: inline-block;\n            margin-right: 15px;\n            position: relative;\n            cursor: pointer;\n            z-index: 10000;\n            border: 1px #3f97f6 solid;\n            padding: 10px;\n\n            img {\n                height: 150px;\n                display: inline-block;\n            }\n\n            .edit-icon, .remove-icon {\n                display: block;\n                color: #3f97f6;\n                font-size: 36px;\n                opacity: 1;\n                position: absolute;\n                top: 0;\n                right: 0;\n                margin: 10px;\n            }\n\n            .remove-icon {\n                top: 45px;\n            }\n\n            .title {\n                width: 100%;\n            }\n        }\n    }\n}\n",{"version":3,"sources":["imageBrowserDialog.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgXA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"imageBrowserDialog.vue","sourceRoot":"src/components/editor/imageBrowser","sourcesContent":["<template>\r\n    <div>\r\n        <v-dialog\r\n            ref=\"dialog\"\r\n            v-model=\"dialogVisible\"\r\n            content-class=\"image-picker\"\r\n            min-width=\"90vw\"\r\n            min-height=\"90vh\"\r\n            scrollable\r\n        >\r\n            <v-card>\r\n                <v-toolbar dark :color=\"color\">\r\n                    <v-toolbar-title>Image selector {{ type.toUpperCase() }}</v-toolbar-title>\r\n                    <v-spacer></v-spacer>\r\n                    <v-btn icon dark @click.native=\"closeDialog\">\r\n                        <v-icon>close</v-icon>\r\n                    </v-btn>\r\n                </v-toolbar>\r\n                <v-card-text>\r\n                    <v-card-actions style=\"display: inline-block\">\r\n                        <v-btn color=\"success\" @click=\"onShowUploaderDialogRequested\">Select or upload</v-btn>\r\n                    </v-card-actions>\r\n\r\n                    <v-card class=\"image-list-preview-card\">\r\n                        <v-card-title>Selected image{{ type == 'picture' ? '' : 's'}}</v-card-title>\r\n                        <v-card-text>\r\n                            <div class=\"image-list-preview\">\r\n                                <SortableList v-model=\"pickedImages\" axis=\"x\" lockAxis=\"x\" helperClass=\"dragDropImagePreview\">\r\n                                    <SortableItem v-for=\"(item, index) in pickedImages\" :index=\"index\" :key=\"index\">\r\n                                        <div class=\"image-preview\" :class=\"{ 'with-title' : (item.title.length > 0) }\">\r\n                                            <img style=\"max-height: 300px;\" :src=\"getThumbUrl(item.code, item.thumbSizes, item.thumbFormats)\" class=\"image\"/>\r\n                                            <v-icon @click=\"onShowPropertiesDialogRequested(item, getThumbUrl(item.code, item.thumbSizes, item.thumbFormats))\" class=\"edit-icon\">edit</v-icon>\r\n                                            <v-icon @click=\"removeImage(item)\" class=\"remove-icon\">delete</v-icon>\r\n                                            <div class=\"title\" v-if=\"item.title.length > 0\">{{ item.title }}</div>\r\n                                        </div>\r\n                                    </SortableItem>\r\n                                </SortableList>\r\n                            </div>\r\n                        </v-card-text>\r\n                    </v-card>\r\n\r\n                    <v-expansion-panel>\r\n                        <v-expansion-panel-content>\r\n                            <div slot=\"header\">Advanced settings</div>\r\n                            <v-card>\r\n                                <v-card-text>\r\n                                    <template v-if=\"type == 'gallery'\">\r\n                                        <v-text-field\r\n                                            :label=\"galleryTitle ? 'Gallery title' : ''\"\r\n                                            placeholder=\"Gallery title\"\r\n                                            v-model=\"galleryTitle\"\r\n                                        ></v-text-field>\r\n                                        <v-textarea\r\n                                            :label=\"galleryDescription ? 'Gallery description' : ''\"\r\n                                            placeholder=\"Gallery description\"\r\n                                            v-model=\"galleryDescription\"\r\n                                        ></v-textarea>\r\n                                        <v-text-field\r\n                                            :label=\"galleryPadding ? 'Padding' : ''\"\r\n                                            placeholder=\"Padding\"\r\n                                            v-model=\"galleryPadding\"\r\n                                            :rules=\"[() => validPadding || 'Must be a whole number']\"\r\n                                        ></v-text-field>\r\n                                        <v-switch\r\n                                            label=\"Carousel\"\r\n                                            v-model=\"galleryCarousel\"\r\n                                        ></v-switch>\r\n                                    </template>\r\n\r\n                                    <template v-if=\"type == 'comparsion'\">\r\n                                        <v-text-field\r\n                                            :label=\"galleryTitle ? 'Comparsion title' : ''\"\r\n                                            placeholder=\"Comparsion title\"\r\n                                            v-model=\"galleryTitle\"\r\n                                        ></v-text-field>\r\n                                        <v-textarea\r\n                                            :label=\"galleryDescription ? 'Comparsion description' : ''\"\r\n                                            placeholder=\"Comparsion description\"\r\n                                            v-model=\"galleryDescription\"\r\n                                        ></v-textarea>\r\n                                    </template>\r\n\r\n                                    <template v-if=\"(type == 'gallery') || (type == 'picture')\">\r\n                                        <v-switch\r\n                                            label=\"LightBox\"\r\n                                            v-model=\"lightbox\"\r\n                                        ></v-switch>\r\n                                    </template>\r\n                                </v-card-text>\r\n                            </v-card>\r\n                        </v-expansion-panel-content>\r\n                    </v-expansion-panel>\r\n                </v-card-text>\r\n\r\n                <v-alert\r\n                    :value=\"true\"\r\n                    type=\"error\"\r\n                    v-if=\"!validImageList\"\r\n                    class=\"alert\"\r\n                >\r\n                    At least one image is required\r\n                </v-alert>\r\n\r\n                <v-card-actions>\r\n                    <v-btn flat @click=\"closeDialog\">Cancel</v-btn>\r\n                    <v-btn color=\"blue darken-1\" flat @click=\"done\" v-if=\"validPadding && validImageList\">{{ newitem ? 'Add' : 'Save' }}</v-btn>\r\n                    <v-btn color=\"blue darken-1\" flat v-else disabled>{{ newitem ? 'Add' : 'Save' }}</v-btn>\r\n                </v-card-actions>\r\n            </v-card>\r\n        </v-dialog>\r\n        <ImageUploaderDialog\r\n            v-show=\"imageUploaderDialogVisible\"\r\n            :visible=\"imageUploaderDialogVisible\"\r\n            :images=\"pickedImages\"\r\n            :imagesListResource=\"imagesListResource\"\r\n            :uploadUrl=\"uploadUrl\"\r\n            :type=\"type\"\r\n            @close=\"onImageUploaderDialogClosed\"\r\n        />\r\n        <ImagePropertiesDialog\r\n            v-show=\"imagePropertiesDialogVisible\"\r\n            :visible=\"imagePropertiesDialogVisible\"\r\n            :url=\"imageParams.url\"\r\n            :title=\"imageParams.title\"\r\n            :description=\"imageParams.description\"\r\n            :alt=\"imageParams.alt\"\r\n            :code=\"imageParams.code\"\r\n            @close=\"onImagePropertiesDialogClosed\"\r\n        />\r\n    </div>\r\n</template>\r\n<script>\r\n    import ImageUploaderDialog from './imageUploaderDialog';\r\n    import ImagePropertiesDialog from './imagePropertiesDialog';\r\n\r\n    // Slicksort Plugins\r\n    import {ContainerMixin, ElementMixin} from 'vue-slicksort';\r\n    const SortableList = {\r\n        mixins  : [ContainerMixin],\r\n        template: `\r\n            <ul class=\"list\">\r\n            <slot />\r\n            </ul>\r\n        `,\r\n    };\r\n    const SortableItem = {\r\n        mixins  : [ElementMixin],\r\n        template: `\r\n            <li class=\"list-item\">\r\n                <slot />\r\n            </li>\r\n        `,\r\n    };\r\n\r\n    export default {\r\n        name        : 'ImageBrowserDialog',\r\n        components  : {\r\n            SortableItem,\r\n            SortableList,\r\n            ImageUploaderDialog,\r\n            ImagePropertiesDialog\r\n        },\r\n        props       : {\r\n            imagesListResource  : {\r\n                type    : Object,\r\n                default : () => {\r\n                    null\r\n                }\r\n            },\r\n            uploadUrl           : {\r\n                type    : String\r\n            },\r\n            imagesBasePath      : {\r\n                type    : String\r\n            },\r\n            visible             : {\r\n                type    : Boolean,\r\n                default : false\r\n            },\r\n            newitem : {\r\n                type   : Boolean,\r\n                default: false\r\n            },\r\n            type                : {\r\n                type    : String,\r\n                default : 'picture'\r\n            },\r\n            images              : {\r\n                type    : Array,\r\n                default : () => {\r\n                    return [];\r\n                }\r\n            },\r\n\r\n            carousel            : {\r\n                type    : Boolean,\r\n                default : false\r\n            },\r\n            title               : {\r\n                type    : String,\r\n                default : ''\r\n            },\r\n            description         : {\r\n                type    : String,\r\n                default : ''\r\n            },\r\n            padding             : {\r\n                type    : String,\r\n                default : '0'\r\n            }\r\n        },\r\n        data() {\r\n            return {\r\n                dialogVisible                   : this.visible,\r\n                galleryTitle                    : this.title,\r\n                galleryDescription              : this.description,\r\n                galleryPadding                  : this.padding,\r\n                galleryCarousel                 : this.carousel,\r\n                lightbox                        : false,\r\n                imagePropertiesDialogVisible    : false,\r\n                imageUploaderDialogVisible      : false,\r\n\r\n                imageParams: {\r\n                    url         : null,\r\n                    title       : null,\r\n                    description : null,\r\n                    alt         : null,\r\n                    code        : null\r\n                },\r\n\r\n                pickedImages    : []\r\n            }\r\n        },\r\n        watch: {\r\n            visible() {\r\n                this.dialogVisible = this.visible;\r\n            },\r\n            dialogVisible() {\r\n                if (this.dialogVisible) {\r\n                    this.resetImages(this.images);\r\n                    this.galleryTitle       = this.title;\r\n                    this.galleryDescription = this.description;\r\n                    this.galleryPadding     = this.padding;\r\n                    this.galleryCarousel    = this.carousel;\r\n                    this.lightbox           = this.images && (this.images.length > 0) && (this.images[0].lightbox == 'true');\r\n                } else {\r\n                    this.closeDialog();\r\n                }\r\n            },\r\n            lightbox() {\r\n                this.setLightbox(this.lightbox);\r\n            }\r\n        },\r\n        methods : {\r\n            // ImageUploaderDialog\r\n            onImageUploaderDialogClosed(images) {\r\n                this.imageUploaderDialogVisible = false;\r\n                this.$emit('image-uploader-dialog-closed', images);\r\n            },\r\n            onShowUploaderDialogRequested() {\r\n                this.imageUploaderDialogVisible = true;\r\n\r\n                let self = this;\r\n                return new Promise((resolve) => {\r\n                    this.$once('image-uploader-dialog-closed', (images) => {\r\n                        resolve(images);\r\n                        self.resetImages(images);\r\n                    });\r\n                })\r\n            },\r\n\r\n            // ImagePropertiesDialog\r\n            onImagePropertiesDialogClosed(image) {\r\n                this.imagePropertiesDialogVisible = false;\r\n                this.$emit('image-properties-dialog-closed', image);\r\n            },\r\n            onShowPropertiesDialogRequested(dialogData, url) {\r\n                for(var propertyName in this.imageParams) {\r\n                    this.imageParams[propertyName] = dialogData[propertyName];\r\n                }\r\n                this.imageParams.url = url;\r\n                this.imagePropertiesDialogVisible = true;\r\n\r\n                let self = this;\r\n                return new Promise((resolve) => {\r\n                    this.$once('image-properties-dialog-closed', (image) => {\r\n                        resolve(image);\r\n                        self.updateProperties(image);\r\n                    });\r\n                })\r\n            },\r\n\r\n            // ImageBrowserDialog\r\n            closeDialog() {\r\n                this.$emit('close', null);\r\n            },\r\n            done() {\r\n                this.$emit('close', {\r\n                    title       : this.galleryTitle,\r\n                    description : this.galleryDescription,\r\n                    padding     : this.galleryPadding,\r\n                    carousel    : this.galleryCarousel,\r\n                    images      : this.pickedImages\r\n                });\r\n            },\r\n\r\n            removeImage(image) {\r\n                if (this.type != 'picture') {\r\n                    for (let i = 0; i < this.pickedImages.length; i++) {\r\n                        if (image.code === this.pickedImages[i].code) {\r\n                            this.pickedImages.splice(i, 1);\r\n                        }\r\n                    }\r\n                } else {\r\n                    this.pickedImages.pop();\r\n                }\r\n            },\r\n            updateProperties(image) {\r\n                if (image != null) {\r\n                    this.pickedImages.forEach(element => {\r\n                        if (element.code == image.code) {\r\n                            element.title       = image.title;\r\n                            element.description = image.description;\r\n                            element.alt         = image.alt;\r\n                        }\r\n                    });\r\n                }\r\n            },\r\n            resetImages(images) {\r\n                this.pickedImages = [];\r\n                if (images && images.length > 0) {\r\n                    images.forEach(element => {\r\n                        this.pickedImages.push(element);\r\n                    });\r\n                }\r\n            },\r\n            setLightbox(lightbox) {\r\n                this.pickedImages.forEach(element => {\r\n                    element.lightbox = lightbox;\r\n                });\r\n            },\r\n\r\n            getThumbUrl(code, sizes, formats) {\r\n                return this.$store.getters['settings/settings'].imageBasePath.replace(/\\\\$/, '') + '/' +\r\n                    code + '_' + sizes[0] + '.' + formats[0];\r\n            }\r\n        },\r\n        computed: {\r\n            validPadding() {\r\n                return !(this.galleryPadding && (this.galleryPadding.length > 0)) || Number.isInteger(Number(this.galleryPadding));\r\n            },\r\n            validImageList() {\r\n                return (this.pickedImages.length > 0);\r\n            },\r\n            color() {\r\n                switch(this.type) {\r\n                    case 'comparsion':\r\n                        return '#4DD0E1';\r\n                    case 'gallery':\r\n                        return '#FFB74D';\r\n                    case 'image': default:\r\n                        return '#4DB6AC';\r\n                }   \r\n            }\r\n        }\r\n    }\r\n</script>\r\n<style scoped lang=\"scss\">\r\n    .alert {\r\n        width: 100%;\r\n    }\r\n\r\n    li {\r\n        list-style-type: none;\r\n\r\n        .edit-icon, .remove-icon {\r\n            display: none;\r\n        }\r\n    }\r\n\r\n    .image-list-preview-card {\r\n        padding-left: 8px;\r\n        margin-bottom: 5px;\r\n\r\n        .image-list-preview {\r\n            //height: 350px;\r\n            margin: 15px;\r\n            overflow-x: auto;\r\n            overflow-y: hidden;\r\n            padding-bottom: 10px;\r\n\r\n            .list {\r\n                display: flex;\r\n            }\r\n\r\n            .image-preview {\r\n                //height: 300px;\r\n                display: inline-block;\r\n                margin-right: 15px;\r\n                position: relative;\r\n                cursor: pointer;\r\n                z-index: 10000;\r\n                border: 1px #3f97f6 solid;\r\n                padding: 10px;\r\n\r\n                img {\r\n                    height: 150px;\r\n                    display: inline-block;\r\n                }\r\n\r\n                .edit-icon, .remove-icon {\r\n                    display: block;\r\n                    color: #3f97f6;\r\n                    font-size: 36px;\r\n                    opacity: 1;\r\n                    position: absolute;\r\n                    top: 0;\r\n                    right: 0;\r\n                    margin: 10px;\r\n                }\r\n\r\n                .remove-icon {\r\n                    top: 45px;\r\n                }\r\n\r\n                .title {\r\n                    width: 100%;\r\n                }\r\n            }\r\n        }\r\n    }\r\n</style>"]}]}