{"remainingRequest":"C:\\work\\bi-admin-vue-new\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\work\\bi-admin-vue-new\\src\\components\\editor\\widgets\\youtube\\youtubeDialog.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\work\\bi-admin-vue-new\\src\\components\\editor\\widgets\\youtube\\youtubeDialog.vue","mtime":1552754725256},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport documentUtil from './../../../../lib/util/document';\n\nconst pattern = /(https?:\\/\\/(?:www\\.|(?!www))[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|www\\.[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|https?:\\/\\/(?:www\\.|(?!www))[a-zA-Z0-9]\\.[^\\s]{2,}|www\\.[a-zA-Z0-9]\\.[^\\s]{2,})/i;\n\nexport default {\n    data() {\n        return {\n            dialogVisible   : this.visible,\n            youtubeVideourl : this.videourl,\n            youtubeControls : this.controls,\n            youtubeFs       : this.fs,\n            youtubeAutoplay : this.autoplay,\n            youtubeMute     : this.mute,\n            youtubeShowinfo : this.showinfo,\n            youtubeRel      : this.rel,\n            youtubeStart    : this.start,\n            youtubeEnd      : this.end,\n            youtubeLoop     : this.loop,\n            youtubePlaylist : this.playlist,\n            youtubeList     : this.list,\n            youtubeListtype : this.listtype,\n            endtype         : 'rel',\n            pattern\n        }\n    },\n    computed: {\n        valid() {\n            return this.youtubeVideourl && (this.youtubeVideourl.length > 0) && this.youtubeVideourl.match(pattern) &&\n            (!(this.youtubeStart && (this.youtubeStart.length > 0)) || (Number.isInteger(Number(this.youtubeStart)))) &&\n            (!(this.youtubeEnd && (this.youtubeEnd.length > 0)) || (Number.isInteger(Number(this.youtubeEnd)) && (Number(this.youtubeStart) < Number(this.youtubeEnd))));\n        }\n    },\n    methods: {\n        onClosed() {\n            this.$emit('close', 'youtube', null);\n        },\n        onSaved() {\n            this.$emit('close', 'youtube', {\n                videourl    : this.youtubeVideourl,\n                controls    : this.youtubeControls,\n                fs          : this.youtubeFs,\n                autoplay    : this.youtubeAutoplay,\n                mute        : this.youtubeMute,\n                showinfo    : this.youtubeShowinfo,\n                rel         : this.youtubeRel,\n                start       : (this.youtubeStart && (this.youtubeStart != 'null') ? this.youtubeStart : ''),\n                end         : (this.youtubeEnd && (this.youtubeEnd != 'null') ? this.youtubeEnd : ''),\n                loop        : this.youtubeLoop,\n                playlist    : this.youtubePlaylist,\n                list        : this.youtubeList,\n                listtype    : this.youtubeListtype\n            });\n        }\n    },\n    watch: {\n        visible() {\n            this.dialogVisible = this.visible;\n        },\n        dialogVisible() {\n            if (this.dialogVisible) {\n                this.youtubeVideourl = this.videourl;\n                this.youtubeControls = this.controls;\n                this.youtubeFs       = this.fs;\n                this.youtubeAutoplay = this.autoplay;\n                this.youtubeMute     = this.mute;\n                this.youtubeShowinfo = this.showinfo;\n                this.youtubeRel      = this.rel;\n                this.youtubeStart    = (this.start && (this.start != 'null') ? this.start : '');\n                this.youtubeEnd      = (this.end && (this.end != 'null') ? this.end : '');\n                this.youtubeLoop     = this.loop;\n                this.youtubePlaylist = this.playlist;\n                this.youtubeList     = this.list;\n                this.youtubeListtype = this.listtype;\n            } else {\n                this.onClosed();\n            }\n        },\n        youtubeAutoplay() {\n            if (this.youtubeAutoplay) {\n                //this.youtubeMute = true;\n            }\n        },\n        youtubeMute() {\n            if (!this.youtubeMute) {\n                //this.youtubeAutoplay = false;\n            }\n        },\n        endtype() {\n            switch(this.endtype) {\n                case 'rel':\n                    this.youtubeRel = true;\n                    this.youtubeLoop = false;\n                    this.youtubeListtype = null;\n                    this.youtubeList = null;\n                    this.youtubePlaylist = null;\n                    break;\n                case 'loop':\n                    this.youtubeLoop = true;\n                    this.youtubeRel = false;\n                    this.youtubeListtype = null;\n                    this.youtubeList = null;\n                    this.youtubePlaylist = null;\n                    break;\n                case 'playlist':\n                    this.youtubeLoop = false;\n                    this.youtubeRel = false;\n                    this.youtubeListtype = null;\n                    this.youtubeList = null;\n                    this.youtubePlaylist = null;\n                    break;\n                case 'playlistID':\n                case 'search':\n                case 'user_uploads':\n                default:\n                    this.youtubeListtype = this.endtype;\n                    this.youtubeLoop = false;\n                    this.youtubeRel = false;\n                    this.youtubeList = null;\n                    this.youtubePlaylist = null;\n            }\n        }\n    },\n    props: {\n        visible     : {\n            type    : Boolean,\n            default : false\n        },\n        newitem     : {\n            type    : Boolean,\n            default : false\n        },\n        videourl    : {\n            type    : String,\n            default : null\n        },\n        controls    : {\n            type    : Boolean,\n            default : true\n        },\n        fs          : {\n            type    : Boolean,\n            default : false\n        },\n        autoplay    : {\n            type    : Boolean,\n            default : false\n        },\n        mute        : {\n            type    : Boolean,\n            default : false\n        },\n        showinfo    : {\n            type    : Boolean,\n            default : false\n        },\n        rel         : {\n            type    : Boolean,\n            default : true\n        },\n        start       : {\n            type    : String,\n            default : null\n        },\n        end         : {\n            type    : String,\n            default : null\n        },\n        loop        : {\n            type    : Boolean,\n            default : false\n        },\n        playlist    : {\n            type    : String,\n            default : null\n        },\n        list        : {\n            type    : String,\n            default : null\n        },\n        listtype    : {\n            type    : String,\n            default : null\n        }\n    }\n}\n",{"version":3,"sources":["youtubeDialog.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmfile":"youtubeDialog.vue","sourceRoot":"src/components/editor/widgets/youtube","sourcesContent":["<template>\r\n    <div>\r\n        <v-dialog v-model=\"dialogVisible\" max-width=\"590\">\r\n            <v-card>\r\n                <v-card-title>\r\n                    <span class=\"headline\">Youtube</span>\r\n                </v-card-title>\r\n                <v-card-text>\r\n                    <v-text-field\r\n                        :label=\"youtubeVideourl ? 'Video URL' : ''\"\r\n                        placeholder=\"Video URL\"\r\n                        v-model=\"youtubeVideourl\"\r\n                        required\r\n                        :rules=\"[() => \r\n                            (\r\n                                youtubeVideourl && \r\n                                (youtubeVideourl.length > 0) && \r\n                                (youtubeVideourl.match(pattern) != null)\r\n                            ) || 'Required field, needs to be correct url format']\"\r\n                    ></v-text-field>\r\n                    <v-expansion-panel>\r\n                        <v-expansion-panel-content>\r\n                            <div slot=\"header\">Advanced Settings</div>\r\n                            <v-card>\r\n                                <v-card-text>\r\n                                    <v-switch\r\n                                        label=\"Show controls\"\r\n                                        v-model=\"youtubeControls\"\r\n                                    ></v-switch>\r\n                                    <v-switch\r\n                                        label=\"Enable fullscreen\"\r\n                                        v-model=\"youtubeFs\"\r\n                                    ></v-switch>\r\n\r\n                                    <v-alert\r\n                                        :value=\"true\"\r\n                                        type=\"info\"\r\n                                        class=\"alert\"\r\n                                    >\r\n                                        Autoplay works in Chrome only if the video is also muted.\r\n                                    </v-alert>\r\n                                    <v-switch\r\n                                        label=\"Autoplay\"\r\n                                        v-model=\"youtubeAutoplay\"\r\n                                    ></v-switch>\r\n                                    <v-switch\r\n                                        label=\"Mute\"\r\n                                        v-model=\"youtubeMute\"\r\n                                    ></v-switch>\r\n                                    <v-switch\r\n                                        label=\"Show info\"\r\n                                        v-model=\"youtubeShowinfo\"\r\n                                    ></v-switch>\r\n                                    <v-text-field\r\n                                        :label=\"youtubeStart ? 'Start - number of seconds from the beginning' : ''\"\r\n                                        placeholder=\"Start - number of seconds from the beginning\"\r\n                                        v-model=\"youtubeStart\"\r\n                                        :rules=\"[() => (!(youtubeStart && (youtubeStart.length > 0)) || (Number.isInteger(Number(youtubeStart)) && (!youtubeEnd || Number(youtubeStart) < Number(youtubeEnd)))) || 'Must be a whole number smaller than end']\"\r\n                                    ></v-text-field>\r\n                                    <v-text-field\r\n                                        :label=\"youtubeEnd ? 'End - number of seconds from the beginning' : ''\"\r\n                                        placeholder=\"End - number of seconds from the beginning\"\r\n                                        v-model=\"youtubeEnd\"\r\n                                        :rules=\"[() => (!(youtubeEnd && (youtubeEnd.length > 0)) || (Number.isInteger(Number(youtubeEnd)) && (!youtubeStart || Number(youtubeStart) < Number(youtubeEnd)))) || 'Has to be a whole number bigger than start']\"\r\n                                    ></v-text-field>\r\n                                </v-card-text>\r\n                            </v-card>\r\n                        </v-expansion-panel-content>\r\n                    </v-expansion-panel>\r\n                    <br />\r\n                    <v-expansion-panel>\r\n                        <v-expansion-panel-content>\r\n                            <div slot=\"header\">Video Ending</div>\r\n                            <v-card>\r\n                                <v-card-text>\r\n                                    <v-radio-group v-model=\"endtype\">\r\n                                        <v-radio\r\n                                            label=\"Show automatic related videos after the end\"\r\n                                            value=\"rel\"\r\n                                        ></v-radio>\r\n                                        <v-radio\r\n                                            label=\"Loop\"\r\n                                            value=\"loop\"\r\n                                        ></v-radio>\r\n                                        <v-radio\r\n                                            label=\"Playlist - comma separated list of video ids to play next\"\r\n                                            value=\"playlist\"\r\n                                        ></v-radio>\r\n                                        <v-radio\r\n                                            label=\"Playlist - ID of an already existing playlist\"\r\n                                            value=\"playlistID\"\r\n                                        ></v-radio>\r\n                                        <v-radio\r\n                                            label=\"Search query\"\r\n                                            value=\"search\"\r\n                                        ></v-radio>\r\n                                        <v-radio\r\n                                            label=\"Channel ID\"\r\n                                            value=\"user_uploads\"\r\n                                        ></v-radio>\r\n                                    </v-radio-group>\r\n\r\n                                    <v-text-field\r\n                                        v-if=\"endtype == 'playlist'\"\r\n                                        :label=\"youtubePlaylist ? 'Video ending value' : ''\"\r\n                                        placeholder=\"Video ending value\"\r\n                                        v-model=\"youtubePlaylist\"\r\n                                        required\r\n                                    ></v-text-field>\r\n                                    <v-text-field\r\n                                        v-if=\"(endtype == 'playlistID') || (endtype == 'search') || (endtype == 'user_uploads')\"\r\n                                        :label=\"youtubeList ? 'Video ending value' : ''\"\r\n                                        placeholder=\"Video ending value\"\r\n                                        v-model=\"youtubeList\"\r\n                                    ></v-text-field>\r\n                                </v-card-text>\r\n                            </v-card>\r\n                        </v-expansion-panel-content>\r\n                    </v-expansion-panel>\r\n                </v-card-text>\r\n                <v-card-actions>\r\n                    <v-spacer></v-spacer>\r\n                    <v-btn color=\"blue darken-1\" flat @click.native=\"onClosed\">Close</v-btn>\r\n                    <v-btn color=\"blue darken-1\" flat @click.native=\"onSaved\" v-if=\"valid\">{{ newitem ? 'Add' : 'Save' }}</v-btn>\r\n                    <v-btn color=\"blue darken-1\" flat @click.native=\"onSaved\" v-else disabled>{{ newitem ? 'Add' : 'Save' }}</v-btn>\r\n                </v-card-actions>\r\n            </v-card>\r\n        </v-dialog>\r\n    </div>\r\n</template>\r\n<script>\r\n    import documentUtil from './../../../../lib/util/document';\r\n\r\n    const pattern = /(https?:\\/\\/(?:www\\.|(?!www))[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|www\\.[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|https?:\\/\\/(?:www\\.|(?!www))[a-zA-Z0-9]\\.[^\\s]{2,}|www\\.[a-zA-Z0-9]\\.[^\\s]{2,})/i;\r\n\r\n    export default {\r\n        data() {\r\n            return {\r\n                dialogVisible   : this.visible,\r\n                youtubeVideourl : this.videourl,\r\n                youtubeControls : this.controls,\r\n                youtubeFs       : this.fs,\r\n                youtubeAutoplay : this.autoplay,\r\n                youtubeMute     : this.mute,\r\n                youtubeShowinfo : this.showinfo,\r\n                youtubeRel      : this.rel,\r\n                youtubeStart    : this.start,\r\n                youtubeEnd      : this.end,\r\n                youtubeLoop     : this.loop,\r\n                youtubePlaylist : this.playlist,\r\n                youtubeList     : this.list,\r\n                youtubeListtype : this.listtype,\r\n                endtype         : 'rel',\r\n                pattern\r\n            }\r\n        },\r\n        computed: {\r\n            valid() {\r\n                return this.youtubeVideourl && (this.youtubeVideourl.length > 0) && this.youtubeVideourl.match(pattern) &&\r\n                (!(this.youtubeStart && (this.youtubeStart.length > 0)) || (Number.isInteger(Number(this.youtubeStart)))) &&\r\n                (!(this.youtubeEnd && (this.youtubeEnd.length > 0)) || (Number.isInteger(Number(this.youtubeEnd)) && (Number(this.youtubeStart) < Number(this.youtubeEnd))));\r\n            }\r\n        },\r\n        methods: {\r\n            onClosed() {\r\n                this.$emit('close', 'youtube', null);\r\n            },\r\n            onSaved() {\r\n                this.$emit('close', 'youtube', {\r\n                    videourl    : this.youtubeVideourl,\r\n                    controls    : this.youtubeControls,\r\n                    fs          : this.youtubeFs,\r\n                    autoplay    : this.youtubeAutoplay,\r\n                    mute        : this.youtubeMute,\r\n                    showinfo    : this.youtubeShowinfo,\r\n                    rel         : this.youtubeRel,\r\n                    start       : (this.youtubeStart && (this.youtubeStart != 'null') ? this.youtubeStart : ''),\r\n                    end         : (this.youtubeEnd && (this.youtubeEnd != 'null') ? this.youtubeEnd : ''),\r\n                    loop        : this.youtubeLoop,\r\n                    playlist    : this.youtubePlaylist,\r\n                    list        : this.youtubeList,\r\n                    listtype    : this.youtubeListtype\r\n                });\r\n            }\r\n        },\r\n        watch: {\r\n            visible() {\r\n                this.dialogVisible = this.visible;\r\n            },\r\n            dialogVisible() {\r\n                if (this.dialogVisible) {\r\n                    this.youtubeVideourl = this.videourl;\r\n                    this.youtubeControls = this.controls;\r\n                    this.youtubeFs       = this.fs;\r\n                    this.youtubeAutoplay = this.autoplay;\r\n                    this.youtubeMute     = this.mute;\r\n                    this.youtubeShowinfo = this.showinfo;\r\n                    this.youtubeRel      = this.rel;\r\n                    this.youtubeStart    = (this.start && (this.start != 'null') ? this.start : '');\r\n                    this.youtubeEnd      = (this.end && (this.end != 'null') ? this.end : '');\r\n                    this.youtubeLoop     = this.loop;\r\n                    this.youtubePlaylist = this.playlist;\r\n                    this.youtubeList     = this.list;\r\n                    this.youtubeListtype = this.listtype;\r\n                } else {\r\n                    this.onClosed();\r\n                }\r\n            },\r\n            youtubeAutoplay() {\r\n                if (this.youtubeAutoplay) {\r\n                    //this.youtubeMute = true;\r\n                }\r\n            },\r\n            youtubeMute() {\r\n                if (!this.youtubeMute) {\r\n                    //this.youtubeAutoplay = false;\r\n                }\r\n            },\r\n            endtype() {\r\n                switch(this.endtype) {\r\n                    case 'rel':\r\n                        this.youtubeRel = true;\r\n                        this.youtubeLoop = false;\r\n                        this.youtubeListtype = null;\r\n                        this.youtubeList = null;\r\n                        this.youtubePlaylist = null;\r\n                        break;\r\n                    case 'loop':\r\n                        this.youtubeLoop = true;\r\n                        this.youtubeRel = false;\r\n                        this.youtubeListtype = null;\r\n                        this.youtubeList = null;\r\n                        this.youtubePlaylist = null;\r\n                        break;\r\n                    case 'playlist':\r\n                        this.youtubeLoop = false;\r\n                        this.youtubeRel = false;\r\n                        this.youtubeListtype = null;\r\n                        this.youtubeList = null;\r\n                        this.youtubePlaylist = null;\r\n                        break;\r\n                    case 'playlistID':\r\n                    case 'search':\r\n                    case 'user_uploads':\r\n                    default:\r\n                        this.youtubeListtype = this.endtype;\r\n                        this.youtubeLoop = false;\r\n                        this.youtubeRel = false;\r\n                        this.youtubeList = null;\r\n                        this.youtubePlaylist = null;\r\n                }\r\n            }\r\n        },\r\n        props: {\r\n            visible     : {\r\n                type    : Boolean,\r\n                default : false\r\n            },\r\n            newitem     : {\r\n                type    : Boolean,\r\n                default : false\r\n            },\r\n            videourl    : {\r\n                type    : String,\r\n                default : null\r\n            },\r\n            controls    : {\r\n                type    : Boolean,\r\n                default : true\r\n            },\r\n            fs          : {\r\n                type    : Boolean,\r\n                default : false\r\n            },\r\n            autoplay    : {\r\n                type    : Boolean,\r\n                default : false\r\n            },\r\n            mute        : {\r\n                type    : Boolean,\r\n                default : false\r\n            },\r\n            showinfo    : {\r\n                type    : Boolean,\r\n                default : false\r\n            },\r\n            rel         : {\r\n                type    : Boolean,\r\n                default : true\r\n            },\r\n            start       : {\r\n                type    : String,\r\n                default : null\r\n            },\r\n            end         : {\r\n                type    : String,\r\n                default : null\r\n            },\r\n            loop        : {\r\n                type    : Boolean,\r\n                default : false\r\n            },\r\n            playlist    : {\r\n                type    : String,\r\n                default : null\r\n            },\r\n            list        : {\r\n                type    : String,\r\n                default : null\r\n            },\r\n            listtype    : {\r\n                type    : String,\r\n                default : null\r\n            }\r\n        }\r\n    }\r\n</script>"]}]}