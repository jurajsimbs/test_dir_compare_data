{"remainingRequest":"C:\\work\\bi-admin-vue-new\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\work\\bi-admin-vue-new\\src\\components\\editor\\imageBrowser\\imageUploaderDialog.vue?vue&type=template&id=b67ef45e&scoped=true&","dependencies":[{"path":"C:\\work\\bi-admin-vue-new\\src\\components\\editor\\imageBrowser\\imageUploaderDialog.vue","mtime":1552754725228},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n<v-dialog\n    ref=\"dialog\"\n    v-model=\"dialogVisible\"\n    content-class=\"image-uploader\"\n    min-width=\"90vw\"\n    min-height=\"90vh\"\n    scrollable\n>\n    <v-card>\n        <v-toolbar dark color=\"primary\">\n            <v-toolbar-title>Image uploader {{ type.toUpperCase() }}</v-toolbar-title>\n            <v-spacer></v-spacer>\n            <v-btn icon dark @click.native=\"closeDialog\">\n                <v-icon>close</v-icon>\n            </v-btn>\n        </v-toolbar>\n        <v-card-text>\n            <v-btn v-if=\"!uploadVisible\" color=\"success\" @click=\"enableUpload\">Upload</v-btn>\n            <file-pond\n                v-if=\"uploadVisible\"\n                name=\"file\"\n                ref=\"pond\"\n                label-idle=\"Drop files here...\"\n                allow-multiple=\"false\"\n                accepted-file-types=\"image/jpeg, image/png\"\n                :server=\"uploadUrl\"\n                @processfile=\"onFileUploaded\"\n            />\n            <SimpleTable :controller=\"tableController\">\n                <template slot=\"actions\" slot-scope=\"props\">\n                    <v-btn\n                        :color=\"isSelected(props.item) ? 'error' : 'success'\" title=\"Pick\"\n                        @click=\"() => { \n                            isSelected(props.item) ? removeImage(props.item) : addImage(props.item)\n                        }\">\n                        {{ isSelected(props.item) ? 'Remove' : 'Add' }}\n                    </v-btn>\n                </template>\n            </SimpleTable>\n        </v-card-text>\n\n        <v-alert\n            :value=\"true\"\n            type=\"error\"\n            v-if=\"!valid\"\n            class=\"alert\"\n        >\n            At least one image is required\n        </v-alert>\n\n        <v-card-actions>\n            <v-btn flat @click=\"closeDialog\">Cancel</v-btn>\n            <v-btn color=\"blue darken-1\" flat @click=\"done\" v-if=\"valid\">Finish picking</v-btn>\n            <v-btn color=\"blue darken-1\" flat v-else disabled>Finish picking</v-btn>\n        </v-card-actions>\n    </v-card>\n</v-dialog>\n",null]}