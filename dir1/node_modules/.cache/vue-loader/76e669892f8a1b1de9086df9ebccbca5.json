{"remainingRequest":"C:\\work\\bi-admin-vue-new\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\work\\bi-admin-vue-new\\src\\components\\table\\rowActionWidget\\moveItem.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\work\\bi-admin-vue-new\\src\\components\\table\\rowActionWidget\\moveItem.vue","mtime":1552754725267},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport debug from 'debug';\nimport Events from './../../../app/events';\n\nconst log = debug('bi-admin-vue:table:column-widget:moveItem');\nexport default {\n    components: {},\n    name      : 'SimpleTableMoveItemRowActionWidget',\n    data() {\n        return {\n            moveTo       : null,\n            dialogVisible: false,\n            processing   : false\n        }\n    },\n    methods   : {\n        async move() {\n            this.processing = true;\n            try {\n                log(`Moving item ${this.row.id} to position ${this.moveTo}`);\n                await this.onMoveItemRequested(this.row, this.moveTo);\n\n                this.appManager.$emit(Events.SUCCESS, 'Item moved');\n\n                this.dialogVisible = false;\n            } catch (e) {\n\n                this.appManager.$emit(Events.ERROR, 'Unable to move item');\n\n                log('Unable to move item', e);\n            } finally {\n                this.processing = false;\n            }\n            await this.controller.loadData();\n        },\n        openMoveDialog() {\n            this.dialogVisible = true;\n        },\n        closeDialog() {\n            this.dialogVisible = false;\n        }\n    },\n    props     : {\n        controller         : {\n            type   : Object,\n            default: () => {\n                configuration: {\n                }\n            }\n        },\n        onMoveItemRequested: {\n            type   : Function,\n            default: () => {\n                return (value) => {\n                    log('Warning: move item widget does not have onMoveItemRequested prop defined!');\n                }\n            }\n        },\n        fieldName          : {\n            type   : String,\n            default: 'position'\n        },\n        row                : {\n            type   : Object,\n            default: () => {\n            }\n        }\n    }\n}\n",{"version":3,"sources":["moveItem.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"moveItem.vue","sourceRoot":"src/components/table/rowActionWidget","sourcesContent":["<template>\r\n    <div v-if=\"row\">\r\n        <v-btn\r\n                @click=\"openMoveDialog\"\r\n                color=\"primary\"\r\n        >\r\n            Move item to position\r\n            <v-icon right dark>reorder</v-icon>\r\n        </v-btn>\r\n        <v-dialog :open=\"dialogVisible\" title=\"Move item\" @close=\"closeDialog\">\r\n            <v-card>\r\n                <v-card-text>\r\n                    <v-text-field type=\"number\" v-model=\"moveTo\" label=\"Move to position [1-count]\" labelFloat fullWidth/>\r\n                </v-card-text>\r\n                <v-card-actions>\r\n                    <v-btn flat\r\n                           @click=\"closeDialog\"\r\n                           :disabled=\"processing\"\r\n                           color=\"primary\"\r\n                    >\r\n                        Cancel\r\n                    </v-btn>\r\n                    <v-btn\r\n                            :loading=\"processing\"\r\n                            @click=\"move\"\r\n                            :disabled=\"processing\"\r\n                            color=\"primary\"\r\n                    >\r\n                        Move\r\n                    </v-btn>\r\n                </v-card-actions>\r\n            </v-card>\r\n        </v-dialog>\r\n    </div>\r\n</template>\r\n<script>\r\n    import debug from 'debug';\r\n    import Events from './../../../app/events';\r\n\r\n    const log = debug('bi-admin-vue:table:column-widget:moveItem');\r\n    export default {\r\n        components: {},\r\n        name      : 'SimpleTableMoveItemRowActionWidget',\r\n        data() {\r\n            return {\r\n                moveTo       : null,\r\n                dialogVisible: false,\r\n                processing   : false\r\n            }\r\n        },\r\n        methods   : {\r\n            async move() {\r\n                this.processing = true;\r\n                try {\r\n                    log(`Moving item ${this.row.id} to position ${this.moveTo}`);\r\n                    await this.onMoveItemRequested(this.row, this.moveTo);\r\n\r\n                    this.appManager.$emit(Events.SUCCESS, 'Item moved');\r\n\r\n                    this.dialogVisible = false;\r\n                } catch (e) {\r\n\r\n                    this.appManager.$emit(Events.ERROR, 'Unable to move item');\r\n\r\n                    log('Unable to move item', e);\r\n                } finally {\r\n                    this.processing = false;\r\n                }\r\n                await this.controller.loadData();\r\n            },\r\n            openMoveDialog() {\r\n                this.dialogVisible = true;\r\n            },\r\n            closeDialog() {\r\n                this.dialogVisible = false;\r\n            }\r\n        },\r\n        props     : {\r\n            controller         : {\r\n                type   : Object,\r\n                default: () => {\r\n                    configuration: {\r\n                    }\r\n                }\r\n            },\r\n            onMoveItemRequested: {\r\n                type   : Function,\r\n                default: () => {\r\n                    return (value) => {\r\n                        log('Warning: move item widget does not have onMoveItemRequested prop defined!');\r\n                    }\r\n                }\r\n            },\r\n            fieldName          : {\r\n                type   : String,\r\n                default: 'position'\r\n            },\r\n            row                : {\r\n                type   : Object,\r\n                default: () => {\r\n                }\r\n            }\r\n        }\r\n    }\r\n</script>"]}]}