{"remainingRequest":"C:\\work\\bi-admin-vue-new\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\work\\bi-admin-vue-new\\src\\components\\editor\\widgets\\author\\author.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\work\\bi-admin-vue-new\\src\\components\\editor\\widgets\\author\\author.vue","mtime":1552754725232},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nimport TagLine from './../other/tagLine';\n\nexport default {\n    components: {TagLine},\n    props     : {\n        id      : {\n            type    : [String, Number],\n            required: true\n        },\n        resource: {}\n    },\n    data() {\n        return {\n            author : null,\n            loading: false\n        }\n    },\n    methods   : {\n        async fetchData() {\n            try {\n                const response = await this.resource.get({\n                    id: this.id\n                });\n                this.author    = response.body;\n            } catch (e) {\n\n            }\n        }\n    },\n    async mounted() {\n        await this.fetchData();\n    }\n}\n",{"version":3,"sources":["author.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAkBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"author.vue","sourceRoot":"src/components/editor/widgets/author","sourcesContent":["<template>\r\n    <div style=\"border: 1px silver solid; padding: 10px; cursor: pointer; position: relative;padding-bottom: 40px\" v-if=\"author\">\r\n        <template v-if=\"loading\">\r\n            Loading...\r\n        </template>\r\n        <template v-else>\r\n            <template v-if=\"author\">\r\n                {{author.name}}\r\n            </template>\r\n            <template v-else>\r\n                Author not found\r\n            </template>\r\n        </template>\r\n        <TagLine :tags=\"['author']\"/>\r\n    </div>\r\n</template>\r\n<script>\r\n\r\n    import TagLine from './../other/tagLine';\r\n\r\n    export default {\r\n        components: {TagLine},\r\n        props     : {\r\n            id      : {\r\n                type    : [String, Number],\r\n                required: true\r\n            },\r\n            resource: {}\r\n        },\r\n        data() {\r\n            return {\r\n                author : null,\r\n                loading: false\r\n            }\r\n        },\r\n        methods   : {\r\n            async fetchData() {\r\n                try {\r\n                    const response = await this.resource.get({\r\n                        id: this.id\r\n                    });\r\n                    this.author    = response.body;\r\n                } catch (e) {\r\n\r\n                }\r\n            }\r\n        },\r\n        async mounted() {\r\n            await this.fetchData();\r\n        }\r\n    }\r\n</script>"]}]}