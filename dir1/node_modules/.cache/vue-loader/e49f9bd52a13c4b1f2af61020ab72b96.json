{"remainingRequest":"C:\\work\\bi-admin-vue-new\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\work\\bi-admin-vue-new\\src\\components\\editor\\preview.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\work\\bi-admin-vue-new\\src\\components\\editor\\preview.vue","mtime":1552754725229},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n\n    import Vue from 'vue';\n\n    export default {\n        name   : 'ContentPreview',\n        data() {\n            return {\n                previewInstance: null\n            }\n        },\n        props  : {\n            cssFile: {\n                type: String,\n                default: null\n            },\n            source : {\n                type: String,\n            },\n            plugins: {\n                type   : Array,\n                default: () => []\n            }\n        },\n        methods: {\n            getPreviewHtml() {\n                let temporaryDiv       = this.$refs.previewFrame.contentWindow.document.createElement('div');\n                temporaryDiv.innerHTML = this.source;\n                this.plugins.map((plugin) => {\n                    let widgets = temporaryDiv.querySelector('.' + plugin.name);\n                    if (!widgets) {\n                        return;\n                    }\n                    if (!Array.isArray(widgets)) {\n                        widgets = [widgets];\n                    }\n                    Vue.component(plugin.name, plugin.getComponent());\n                    widgets.map((widget) => {\n                        let widgetData      = JSON.parse(widget.dataset.data);\n                        let newWidget       = this.$refs.previewFrame.contentWindow.document.createElement('div');\n                        newWidget.innerHTML = plugin.getWidgetTemplate(widgetData);\n                        widget.parentNode.insertBefore(newWidget, widget);\n                        widget.parentNode.removeChild(widget);\n                    });\n                });\n//                this.plugins.map((plugin) => {\n//                    let widgets = temporaryDiv.querySelector('.' + plugin.name);\n//                    if (!widgets) {\n//                        return;\n//                    }\n//                    if (!Array.isArray(widgets)) {\n//                        widgets = [widgets];\n//                    }\n//                    console.log('Found ' + widgets.length + ' instances');\n//                    widgets.map((widget) => {\n//                        let newWidget       = document.createElement('div');\n//                        newWidget.innerHTML = plugin.getWidgetTemplate({title: 'aaaa', content: 'bbbb'});\n//                        widget.parentNode.insertBefore(newWidget, widget);\n//                        widget.parentNode.removeChild(widget);\n//                    });\n//                });\n                return '<div>' + temporaryDiv.innerHTML + '</div>';\n            },\n            attachStyles() {\n                if (!this.cssFile) {\n                    return\n                }\n                let styleLink  = this.$refs.previewFrame.contentWindow.document.createElement('link');\n                styleLink.rel  = \"stylesheet\";\n                styleLink.type = \"text/css\";\n                styleLink.href = this.cssFile;\n                this.$refs.previewFrame.contentWindow.document.getElementsByTagName(\"head\")[0].appendChild(styleLink);\n            },\n            previewReady() {\n                this.attachStyles();\n                let previewHtml = this.getPreviewHtml();\n\n                let container = this.$refs.previewFrame.contentWindow.document.createElement('div');\n                this.$refs.previewFrame.contentWindow.document.body.appendChild(container);\n                container.innerHTML = previewHtml;\n\n//                let previewDiv = this.$refs.previewFrame.contentWindow.document.createElement('div');\n//                this.$refs.previewFrame.contentWindow.document.body.appendChild(previewDiv);\n//\n//                if (this.previewInstance) {\n//                    this.previewInstance.$destroy();\n//                    previewDiv.innerHTML = '';\n//                }\n//                let container = document.createElement('div');\n//                previewDiv.appendChild(container);\n//                container.innerHTML = this.editorValue;\n//                this.plugins.map((plugin) => {\n//                    let widgets = container.querySelector('.' + plugin.name);\n//                    if (!widgets) {\n//                        return;\n//                    }\n//                    if (!Array.isArray(widgets)) {\n//                        widgets = [widgets];\n//                    }\n//                    Vue.component(plugin.name, plugin.getComponent());\n//                    console.log('Found ' + widgets.length + ' instances');\n//                    widgets.map((widget) => {\n//                        let widgetData      = JSON.parse(widget.dataset.data);\n//                        let newWidget       = document.createElement('div');\n//                        newWidget.innerHTML = plugin.getWidgetTemplate(widgetData);\n//                        widget.parentNode.insertBefore(newWidget, widget);\n//                        widget.parentNode.removeChild(widget);\n//                    });\n//                });\n//\n//                let template = '<preview-container>' + container.innerHTML + '</preview-container>';\n\n                this.previewInstance = new Vue({\n                    el  : container,\n                    data: {\n                        compiled: null\n                    },\n                    mounted() {\n                        setTimeout(() => {\n                            Vue.compile(previewHtml);\n                        }, 500)\n\n                    }\n                });\n\n            },\n        }\n    }\n",{"version":3,"sources":["preview.vue"],"names":[],"mappings":";;;;;AAKA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA","file":"preview.vue","sourceRoot":"src/components/editor","sourcesContent":["<template>\r\n    <iframe class=\"preview-frame\" ref=\"previewFrame\"\r\n            @load=\"previewReady\"></iframe>\r\n</template>\r\n<script>\r\n    import Vue from 'vue';\r\n\r\n    export default {\r\n        name   : 'ContentPreview',\r\n        data() {\r\n            return {\r\n                previewInstance: null\r\n            }\r\n        },\r\n        props  : {\r\n            cssFile: {\r\n                type: String,\r\n                default: null\r\n            },\r\n            source : {\r\n                type: String,\r\n            },\r\n            plugins: {\r\n                type   : Array,\r\n                default: () => []\r\n            }\r\n        },\r\n        methods: {\r\n            getPreviewHtml() {\r\n                let temporaryDiv       = this.$refs.previewFrame.contentWindow.document.createElement('div');\r\n                temporaryDiv.innerHTML = this.source;\r\n                this.plugins.map((plugin) => {\r\n                    let widgets = temporaryDiv.querySelector('.' + plugin.name);\r\n                    if (!widgets) {\r\n                        return;\r\n                    }\r\n                    if (!Array.isArray(widgets)) {\r\n                        widgets = [widgets];\r\n                    }\r\n                    Vue.component(plugin.name, plugin.getComponent());\r\n                    widgets.map((widget) => {\r\n                        let widgetData      = JSON.parse(widget.dataset.data);\r\n                        let newWidget       = this.$refs.previewFrame.contentWindow.document.createElement('div');\r\n                        newWidget.innerHTML = plugin.getWidgetTemplate(widgetData);\r\n                        widget.parentNode.insertBefore(newWidget, widget);\r\n                        widget.parentNode.removeChild(widget);\r\n                    });\r\n                });\r\n//                this.plugins.map((plugin) => {\r\n//                    let widgets = temporaryDiv.querySelector('.' + plugin.name);\r\n//                    if (!widgets) {\r\n//                        return;\r\n//                    }\r\n//                    if (!Array.isArray(widgets)) {\r\n//                        widgets = [widgets];\r\n//                    }\r\n//                    console.log('Found ' + widgets.length + ' instances');\r\n//                    widgets.map((widget) => {\r\n//                        let newWidget       = document.createElement('div');\r\n//                        newWidget.innerHTML = plugin.getWidgetTemplate({title: 'aaaa', content: 'bbbb'});\r\n//                        widget.parentNode.insertBefore(newWidget, widget);\r\n//                        widget.parentNode.removeChild(widget);\r\n//                    });\r\n//                });\r\n                return '<div>' + temporaryDiv.innerHTML + '</div>';\r\n            },\r\n            attachStyles() {\r\n                if (!this.cssFile) {\r\n                    return\r\n                }\r\n                let styleLink  = this.$refs.previewFrame.contentWindow.document.createElement('link');\r\n                styleLink.rel  = \"stylesheet\";\r\n                styleLink.type = \"text/css\";\r\n                styleLink.href = this.cssFile;\r\n                this.$refs.previewFrame.contentWindow.document.getElementsByTagName(\"head\")[0].appendChild(styleLink);\r\n            },\r\n            previewReady() {\r\n                this.attachStyles();\r\n                let previewHtml = this.getPreviewHtml();\r\n\r\n                let container = this.$refs.previewFrame.contentWindow.document.createElement('div');\r\n                this.$refs.previewFrame.contentWindow.document.body.appendChild(container);\r\n                container.innerHTML = previewHtml;\r\n\r\n//                let previewDiv = this.$refs.previewFrame.contentWindow.document.createElement('div');\r\n//                this.$refs.previewFrame.contentWindow.document.body.appendChild(previewDiv);\r\n//\r\n//                if (this.previewInstance) {\r\n//                    this.previewInstance.$destroy();\r\n//                    previewDiv.innerHTML = '';\r\n//                }\r\n//                let container = document.createElement('div');\r\n//                previewDiv.appendChild(container);\r\n//                container.innerHTML = this.editorValue;\r\n//                this.plugins.map((plugin) => {\r\n//                    let widgets = container.querySelector('.' + plugin.name);\r\n//                    if (!widgets) {\r\n//                        return;\r\n//                    }\r\n//                    if (!Array.isArray(widgets)) {\r\n//                        widgets = [widgets];\r\n//                    }\r\n//                    Vue.component(plugin.name, plugin.getComponent());\r\n//                    console.log('Found ' + widgets.length + ' instances');\r\n//                    widgets.map((widget) => {\r\n//                        let widgetData      = JSON.parse(widget.dataset.data);\r\n//                        let newWidget       = document.createElement('div');\r\n//                        newWidget.innerHTML = plugin.getWidgetTemplate(widgetData);\r\n//                        widget.parentNode.insertBefore(newWidget, widget);\r\n//                        widget.parentNode.removeChild(widget);\r\n//                    });\r\n//                });\r\n//\r\n//                let template = '<preview-container>' + container.innerHTML + '</preview-container>';\r\n\r\n                this.previewInstance = new Vue({\r\n                    el  : container,\r\n                    data: {\r\n                        compiled: null\r\n                    },\r\n                    mounted() {\r\n                        setTimeout(() => {\r\n                            Vue.compile(previewHtml);\r\n                        }, 500)\r\n\r\n                    }\r\n                });\r\n\r\n            },\r\n        }\r\n    }\r\n</script>\r\n<style scoped>\r\n    .preview-frame {\r\n        width: 100%;\r\n        min-height: 200px;\r\n        border: 1px solid lightGray;\r\n    }\r\n</style>"]}]}