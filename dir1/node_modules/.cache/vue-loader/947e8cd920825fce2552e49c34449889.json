{"remainingRequest":"C:\\work\\bi-admin-vue-new\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\work\\bi-admin-vue-new\\src\\components\\editor\\widgets\\other\\tagLine.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\work\\bi-admin-vue-new\\src\\components\\editor\\widgets\\other\\tagLine.vue","mtime":1552754725247},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n\nexport default {\n    props  : {\n        tags: {\n            type   : Array,\n            default: () => {\n                return [];\n            }\n        },\n        valign: {\n            type: String,\n            default: 'bottom'\n        }\n    },\n    methods: {\n        getTagColor(name) {\n            if (name.toLowerCase() === 'picture') {\n                return '#4DB6AC';\n            }\n            if (name.toLowerCase() === 'lightbox') {\n                return 'bisque';\n            }\n            if (name.toLowerCase() === 'comparsion') {\n                return '#4DD0E1';\n            }\n            if (name.toLocaleString() === 'gallery') {\n                return '#FFB74D';\n            }\n            return 'gray';\n        }\n    }\n}\n",{"version":3,"sources":["tagLine.vue"],"names":[],"mappings":";;;;;;;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"tagLine.vue","sourceRoot":"src/components/editor/widgets/other","sourcesContent":["<template>\r\n    <div :style=\"`position: absolute; ${valign==='bottom'?'bottom:0':'top:0'}; left: 0; display: flex;`\">\r\n        <div :style=\"`background-color: ${getTagColor(tagName)}; padding: .5em; border-radius: 2em;box-shadow: 2px 2px 8px 0px #464646a6;`\"\r\n             v-for=\"tagName in tags\"><span style=\"text-transform: capitalize;\">{{tagName}}</span>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\n    export default {\r\n        props  : {\r\n            tags: {\r\n                type   : Array,\r\n                default: () => {\r\n                    return [];\r\n                }\r\n            },\r\n            valign: {\r\n                type: String,\r\n                default: 'bottom'\r\n            }\r\n        },\r\n        methods: {\r\n            getTagColor(name) {\r\n                if (name.toLowerCase() === 'picture') {\r\n                    return '#4DB6AC';\r\n                }\r\n                if (name.toLowerCase() === 'lightbox') {\r\n                    return 'bisque';\r\n                }\r\n                if (name.toLowerCase() === 'comparsion') {\r\n                    return '#4DD0E1';\r\n                }\r\n                if (name.toLocaleString() === 'gallery') {\r\n                    return '#FFB74D';\r\n                }\r\n                return 'gray';\r\n            }\r\n        }\r\n    }\r\n</script>"]}]}