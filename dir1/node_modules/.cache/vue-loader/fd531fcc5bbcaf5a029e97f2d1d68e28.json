{"remainingRequest":"C:\\work\\bi-admin-vue-new\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\work\\bi-admin-vue-new\\src\\components\\editor\\imageBrowser\\previewWidget.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\work\\bi-admin-vue-new\\src\\components\\editor\\imageBrowser\\previewWidget.vue","mtime":1552754725228},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n    name    : 'ImagePreviewTableCellWidget',\n    data() {\n        return {\n            previewDialog: false\n        }\n    },\n    computed: {\n        thumbUrl() {\n            return this.getThumbUrl(this.row.code, this.row.thumbFormats, this.row.thumbSizes);\n        },\n        previewUrl() {\n            return this.getPreviewUrl(this.row.code, this.row.thumbFormats, this.row.thumbSizes);\n        },\n    },\n    props   : {\n        column    : {\n            type   : Object,\n            default: () => {\n            }\n        },\n        row       : {\n            type   : Object,\n            default: () => {\n            }\n        },\n        controller: {\n            type   : Object,\n            default: () => {\n                configuration: {\n                }\n            }\n        }\n    },\n    methods : {\n        showPreview() {\n            this.previewDialog = true;\n        },\n        closePreview() {\n            this.previewDialog = false;\n        },\n        getThumbUrl(code, formats, sizes) {\n            return this.$store.getters['settings/settings'].imageBasePath.replace(/\\\\$/, '') + '/' + code + '_' + sizes[0] + '.' + formats[0]\n        },\n        getPreviewUrl(code, formats, sizes) {\n            return this.$store.getters['settings/settings'].imageBasePath.replace(/\\\\$/, '') + '/' + code + '_' + sizes[sizes.length - 1] + '.' + formats[0]\n        }\n    }\n}\n",{"version":3,"sources":["previewWidget.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"previewWidget.vue","sourceRoot":"src/components/editor/imageBrowser","sourcesContent":["<template>\r\n    <div class=\"image-thumbnail\" @click=\"showPreview\" title=\"Click for full-screen preview\">\r\n        <img :src=\"thumbUrl\">\r\n        <v-dialog\r\n            fullscreen\r\n            v-model=\"previewDialog\"\r\n            max-width=\"900\"\r\n        >\r\n            <v-card>\r\n                <v-toolbar dark color=\"primary\">\r\n                    <v-btn icon dark @click.native=\"closePreview\">\r\n                        <v-icon>close</v-icon>\r\n                    </v-btn>\r\n                    <v-toolbar-title>Image preview</v-toolbar-title>\r\n                    <v-spacer></v-spacer>\r\n                </v-toolbar>\r\n                <v-card-media :contain=\"true\" class=\"img-preview\" :src=\"previewUrl\">\r\n                </v-card-media>\r\n                <v-card-actions>\r\n                    <v-btn flat @click=\"closePreview\">Close</v-btn>\r\n                </v-card-actions>\r\n            </v-card>\r\n        </v-dialog>\r\n    </div>\r\n</template>\r\n<script>\r\n    export default {\r\n        name    : 'ImagePreviewTableCellWidget',\r\n        data() {\r\n            return {\r\n                previewDialog: false\r\n            }\r\n        },\r\n        computed: {\r\n            thumbUrl() {\r\n                return this.getThumbUrl(this.row.code, this.row.thumbFormats, this.row.thumbSizes);\r\n            },\r\n            previewUrl() {\r\n                return this.getPreviewUrl(this.row.code, this.row.thumbFormats, this.row.thumbSizes);\r\n            },\r\n        },\r\n        props   : {\r\n            column    : {\r\n                type   : Object,\r\n                default: () => {\r\n                }\r\n            },\r\n            row       : {\r\n                type   : Object,\r\n                default: () => {\r\n                }\r\n            },\r\n            controller: {\r\n                type   : Object,\r\n                default: () => {\r\n                    configuration: {\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        methods : {\r\n            showPreview() {\r\n                this.previewDialog = true;\r\n            },\r\n            closePreview() {\r\n                this.previewDialog = false;\r\n            },\r\n            getThumbUrl(code, formats, sizes) {\r\n                return this.$store.getters['settings/settings'].imageBasePath.replace(/\\\\$/, '') + '/' + code + '_' + sizes[0] + '.' + formats[0]\r\n            },\r\n            getPreviewUrl(code, formats, sizes) {\r\n                return this.$store.getters['settings/settings'].imageBasePath.replace(/\\\\$/, '') + '/' + code + '_' + sizes[sizes.length - 1] + '.' + formats[0]\r\n            }\r\n        }\r\n    }\r\n</script>\r\n<style scoped lang=\"scss\">\r\n    .image-thumbnail {\r\n        width: 100%;\r\n        height: auto;\r\n        cursor: pointer;\r\n\r\n        img {\r\n            max-width: 70px;\r\n        }\r\n    }\r\n\r\n    .img-preview {\r\n        max-height: calc(100vh - 120px);\r\n    }\r\n</style>"]}]}