{"remainingRequest":"C:\\work\\bi-admin-vue-new\\node_modules\\thread-loader\\dist\\cjs.js!C:\\work\\bi-admin-vue-new\\node_modules\\babel-loader\\lib\\index.js!C:\\work\\bi-admin-vue-new\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\work\\bi-admin-vue-new\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\work\\bi-admin-vue-new\\src\\components\\pages\\login\\loginScreenComponent.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\work\\bi-admin-vue-new\\src\\components\\pages\\login\\loginScreenComponent.vue","mtime":1552754725259},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"C:\\\\work\\\\bi-admin-vue-new\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapActions, mapGetters } from 'vuex';\nimport Events from './../../../app/events';\nexport default {\n  name: 'LoginScreen',\n  data: function data() {\n    return {\n      loggingIn: false,\n      isError: false,\n      form: {\n        username: null,\n        password: null,\n        rememberMe: false\n      }\n    };\n  },\n  computed: _objectSpread({}, mapGetters('settings', {\n    settings: 'settings'\n  })),\n  methods: _objectSpread({}, mapActions('user', {\n    login: 'login'\n  }), {\n    wait: function wait(sec) {\n      return new Promise(function (resolve) {\n        setTimeout(function () {\n          return resolve();\n        }, sec * 1000);\n      });\n    },\n    onSubmit: function () {\n      var _onSubmit = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _this = this;\n\n        var valid, message;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.$validator.validate();\n\n              case 2:\n                valid = _context.sent;\n\n                if (!valid) {\n                  _context.next = 25;\n                  break;\n                }\n\n                this.loggingIn = true;\n                _context.next = 7;\n                return this.wait(1);\n\n              case 7:\n                _context.prev = 7;\n                _context.next = 10;\n                return this.login(this.form);\n\n              case 10:\n                this.appManager.$emit(Events.SUCCESS, 'Login successful');\n                this.$emit('logged-in', true);\n                _context.next = 20;\n                break;\n\n              case 14:\n                _context.prev = 14;\n                _context.t0 = _context[\"catch\"](7);\n                message = 'Unable to login';\n\n                if (_context.t0.message) {\n                  message = _context.t0.message;\n                }\n\n                this.isError = true;\n                setTimeout(function () {\n                  _this.isError = false;\n\n                  _this.appManager.$emit(Events.ERROR, message);\n                }, 2000);\n\n              case 20:\n                _context.prev = 20;\n                _context.next = 23;\n                return this.wait(1);\n\n              case 23:\n                this.loggingIn = false;\n                return _context.finish(20);\n\n              case 25:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[7, 14, 20, 25]]);\n      }));\n\n      function onSubmit() {\n        return _onSubmit.apply(this, arguments);\n      }\n\n      return onSubmit;\n    }()\n  })\n};",{"version":3,"sources":["loginScreenComponent.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA,SAAA,UAAA,EAAA,UAAA,QAAA,MAAA;AACA,OAAA,MAAA,MAAA,uBAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,aADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,SAAA,EAAA,KADA;AAEA,MAAA,OAAA,EAAA,KAFA;AAGA,MAAA,IAAA,EAAA;AACA,QAAA,QAAA,EAAA,IADA;AAEA,QAAA,QAAA,EAAA,IAFA;AAGA,QAAA,UAAA,EAAA;AAHA;AAHA,KAAA;AASA,GAZA;AAaA,EAAA,QAAA,oBACA,UAAA,CAAA,UAAA,EAAA;AACA,IAAA,QAAA,EAAA;AADA,GAAA,CADA,CAbA;AAkBA,EAAA,OAAA,oBACA,UAAA,CAAA,MAAA,EAAA;AACA,IAAA,KAAA,EAAA;AADA,GAAA,CADA;AAIA,IAAA,IAJA,gBAIA,GAJA,EAIA;AACA,aAAA,IAAA,OAAA,CAAA,UAAA,OAAA,EAAA;AACA,QAAA,UAAA,CAAA,YAAA;AACA,iBAAA,OAAA,EAAA;AACA,SAFA,EAEA,GAAA,GAAA,IAFA,CAAA;AAGA,OAJA,CAAA;AAKA,KAVA;AAWA,IAAA,QAXA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAYA,KAAA,UAAA,CAAA,QAAA,EAZA;;AAAA;AAYA,gBAAA,KAZA;;AAAA,qBAcA,KAdA;AAAA;AAAA;AAAA;;AAeA,qBAAA,SAAA,GAAA,IAAA;AAfA;AAAA,uBAgBA,KAAA,IAAA,CAAA,CAAA,CAhBA;;AAAA;AAAA;AAAA;AAAA,uBAkBA,KAAA,KAAA,CAAA,KAAA,IAAA,CAlBA;;AAAA;AAmBA,qBAAA,UAAA,CAAA,KAAA,CAAA,MAAA,CAAA,OAAA,EAAA,kBAAA;AACA,qBAAA,KAAA,CAAA,WAAA,EAAA,IAAA;AApBA;AAAA;;AAAA;AAAA;AAAA;AAsBA,gBAAA,OAtBA,GAsBA,iBAtBA;;AAuBA,oBAAA,YAAA,OAAA,EAAA;AACA,kBAAA,OAAA,GAAA,YAAA,OAAA;AACA;;AACA,qBAAA,OAAA,GAAA,IAAA;AACA,gBAAA,UAAA,CAAA,YAAA;AACA,kBAAA,KAAA,CAAA,OAAA,GAAA,KAAA;;AACA,kBAAA,KAAA,CAAA,UAAA,CAAA,KAAA,CAAA,MAAA,CAAA,KAAA,EAAA,OAAA;AACA,iBAHA,EAGA,IAHA,CAAA;;AA3BA;AAAA;AAAA;AAAA,uBAgCA,KAAA,IAAA,CAAA,CAAA,CAhCA;;AAAA;AAiCA,qBAAA,SAAA,GAAA,KAAA;AAjCA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAlBA,CAAA","sourcesContent":["<template>\r\n    <v-card :class=\"'login-dialog elevation-5 ' + (isError?'shake':'')\">\r\n        <v-card-media class=\"login-dialog-image\" :src=\"adminPanelImageUrl\" height=\"120px\"/>\r\n        <v-card-text>\r\n            <form role=\"login\" v-on:submit.prevent=\"onSubmit\">\r\n                <v-text-field v-validate=\"{ required: true}\"\r\n                              :error-messages=\"errors.collect('email')\"\r\n                              name=\"email\"\r\n                              type=\"email\"\r\n                              label=\"Username or E-Mail\"\r\n                              v-model=\"form.username\"/>\r\n                <v-text-field v-validate=\"{ required: true}\"\r\n                              :error-messages=\"errors.collect('password')\"\r\n                              name=\"password\"\r\n                              label=\"Password\"\r\n                              type=\"password\"\r\n                              v-model=\"form.password\"/>\r\n                <v-btn :loading=\"loggingIn\"\r\n                       :disabled=\"errors.any() || loggingIn\"\r\n                       type=\"submit\"\r\n                       block\r\n                       color=\"primary\"\r\n                >\r\n                    LOGIN\r\n                </v-btn>\r\n            </form>\r\n        </v-card-text>\r\n    </v-card>\r\n</template>\r\n\r\n<script>\r\n    import {mapActions, mapGetters} from 'vuex';\r\n    import Events from './../../../app/events';\r\n\r\n    export default {\r\n        name    : 'LoginScreen',\r\n        data() {\r\n            return {\r\n                loggingIn: false,\r\n                isError  : false,\r\n                form     : {\r\n                    username  : null,\r\n                    password  : null,\r\n                    rememberMe: false,\r\n                }\r\n            }\r\n        },\r\n        computed: {\r\n            ...mapGetters('settings', {\r\n                settings: 'settings'\r\n            })\r\n        },\r\n        methods : {\r\n            ...mapActions('user', {\r\n                login: 'login'\r\n            }),\r\n            wait(sec) {\r\n                return new Promise((resolve) => {\r\n                    setTimeout(() => {\r\n                        return resolve();\r\n                    }, sec * 1000)\r\n                });\r\n            },\r\n            async onSubmit() {\r\n                let valid = await this.$validator.validate();\r\n\r\n                if (valid) {\r\n                    this.loggingIn = true;\r\n                    await this.wait(1);\r\n                    try {\r\n                        await this.login(this.form);\r\n                        this.appManager.$emit(Events.SUCCESS, 'Login successful');\r\n                        this.$emit('logged-in', true);\r\n                    } catch (e) {\r\n                        let message = 'Unable to login';\r\n                        if (e.message) {\r\n                            message = e.message;\r\n                        }\r\n                        this.isError = true;\r\n                        setTimeout(() => {\r\n                            this.isError = false;\r\n                            this.appManager.$emit(Events.ERROR, message);\r\n                        }, 2000);\r\n                    } finally {\r\n                        await this.wait(1);\r\n                        this.loggingIn = false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n    .shake {\r\n        animation: shake 0.82s cubic-bezier(.36, .07, .19, .97) both;\r\n        transform: translate3d(0, 0, 0);\r\n        backface-visibility: hidden;\r\n        /*perspective: 1000px;*/\r\n    }\r\n\r\n    @keyframes shake {\r\n        10%, 90% {\r\n            transform: translate3d(calc(-50% - 1px), -50%, 0);\r\n        }\r\n\r\n        20%, 80% {\r\n            transform: translate3d(calc(-50% + 2px), -50%, 0);\r\n        }\r\n\r\n        30%, 50%, 70% {\r\n            transform: translate3d(calc(-50% - 4px), -50%, 0);\r\n        }\r\n\r\n        40%, 60% {\r\n            transform: translate3d(calc(-50% + 4px), -50%, 0);\r\n        }\r\n    }\r\n\r\n    .login-dialog {\r\n        width: 300px;\r\n        position: absolute;\r\n        top: 50%;\r\n        left: 50%;\r\n        padding: 0;\r\n        transform: translate3d(-50%, -50%, 0);\r\n    }\r\n</style>"],"sourceRoot":"src/components/pages/login"}]}