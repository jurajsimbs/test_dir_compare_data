{"remainingRequest":"C:\\work\\bi-admin-vue-new\\node_modules\\thread-loader\\dist\\cjs.js!C:\\work\\bi-admin-vue-new\\node_modules\\babel-loader\\lib\\index.js!C:\\work\\bi-admin-vue-new\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\work\\bi-admin-vue-new\\src\\components\\editor\\widgets\\backToContent\\backToContentPlugin.js","dependencies":[{"path":"C:\\work\\bi-admin-vue-new\\src\\components\\editor\\widgets\\backToContent\\backToContentPlugin.js","mtime":1552754725233},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport BasePlugin from './../basePlugin';\nvar instance;\n\nvar BackToContentPlugin =\n/*#__PURE__*/\nfunction (_BasePlugin) {\n  _inherits(BackToContentPlugin, _BasePlugin);\n\n  _createClass(BackToContentPlugin, null, [{\n    key: \"createAndRegister\",\n    value: function createAndRegister(CKEDITOR) {\n      if (!instance) {\n        instance = new BackToContentPlugin('backToContents', 'Back To Contents', 'Edit Back To Contents', {\n          element: \"app-back-to-contents\"\n        });\n      }\n\n      if (!CKEDITOR.plugins.registered[instance.code]) {\n        CKEDITOR.plugins.add(instance.code, {\n          init: function init(editor) {\n            instance.init(editor);\n          }\n        });\n      }\n\n      return instance;\n    }\n  }]);\n\n  function BackToContentPlugin(code, buttonLabel, contextMenuEditLabel, ckOptions) {\n    _classCallCheck(this, BackToContentPlugin);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(BackToContentPlugin).call(this, code, buttonLabel, contextMenuEditLabel, ckOptions));\n  }\n\n  _createClass(BackToContentPlugin, [{\n    key: \"registerWidget\",\n    value: function registerWidget() {}\n  }, {\n    key: \"registerCommand\",\n    value: function registerCommand(editor) {\n      var self = this;\n      editor.addCommand(this.code, {\n        exec: function exec(editor) {\n          var selection = editor.getSelection();\n          var element = selection.getStartElement();\n\n          if (element) {\n            element = element.getAscendant(self.ckOptions.element, true);\n          }\n\n          if (!element || element.getName() != self.ckOptions.element) {\n            element = editor.document.createElement(self.ckOptions.element);\n            this.insertMode = true;\n          } else {\n            this.insertMode = false;\n          }\n\n          this.element = element;\n          if (!this.insertMode) self.setupContent(this.element);\n          editor.insertHtml(element.$.outerHTML);\n          editor.widgets.initOn(element, self.ckOptions.element);\n        }\n      });\n    }\n  }]);\n\n  return BackToContentPlugin;\n}(BasePlugin);\n\nexport default BackToContentPlugin;",{"version":3,"sources":["C:\\work\\bi-admin-vue-new\\src\\components\\editor\\widgets\\backToContent\\backToContentPlugin.js"],"names":["BasePlugin","instance","BackToContentPlugin","CKEDITOR","element","plugins","registered","code","add","init","editor","buttonLabel","contextMenuEditLabel","ckOptions","self","addCommand","exec","selection","getSelection","getStartElement","getAscendant","getName","document","createElement","insertMode","setupContent","insertHtml","$","outerHTML","widgets","initOn"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,UAAP,MAAuB,iBAAvB;AAEA,IAAIC,QAAJ;;IAEMC,mB;;;;;;;sCAEuBC,Q,EAAU;AAE/B,UAAI,CAACF,QAAL,EAAe;AACXA,QAAAA,QAAQ,GAAG,IAAIC,mBAAJ,CAAwB,gBAAxB,EAA0C,kBAA1C,EAA8D,uBAA9D,EAAuF;AAC9FE,UAAAA,OAAO,EAAE;AADqF,SAAvF,CAAX;AAIH;;AACD,UAAI,CAACD,QAAQ,CAACE,OAAT,CAAiBC,UAAjB,CAA4BL,QAAQ,CAACM,IAArC,CAAL,EAAiD;AAC7CJ,QAAAA,QAAQ,CAACE,OAAT,CAAiBG,GAAjB,CAAqBP,QAAQ,CAACM,IAA9B,EAAoC;AAChCE,UAAAA,IAAI,EAAE,cAASC,MAAT,EAAiB;AACnBT,YAAAA,QAAQ,CAACQ,IAAT,CAAcC,MAAd;AACH;AAH+B,SAApC;AAKH;;AACD,aAAOT,QAAP;AACH;;;AAED,+BAAYM,IAAZ,EAAkBI,WAAlB,EAA+BC,oBAA/B,EAAqDC,SAArD,EAAgE;AAAA;;AAAA,4FACtDN,IADsD,EAChDI,WADgD,EACnCC,oBADmC,EACbC,SADa;AAE/D;;;;qCAEgB,CAEhB;;;oCAEeH,M,EAAQ;AACpB,UAAII,IAAI,GAAG,IAAX;AAEAJ,MAAAA,MAAM,CAACK,UAAP,CAAkB,KAAKR,IAAvB,EAA6B;AACzBS,QAAAA,IAAI,EAAE,cAASN,MAAT,EAAiB;AAEnB,cAAIO,SAAS,GAAGP,MAAM,CAACQ,YAAP,EAAhB;AACA,cAAId,OAAO,GAAKa,SAAS,CAACE,eAAV,EAAhB;;AAEA,cAAIf,OAAJ,EAAa;AACTA,YAAAA,OAAO,GAAGA,OAAO,CAACgB,YAAR,CAAqBN,IAAI,CAACD,SAAL,CAAeT,OAApC,EAA6C,IAA7C,CAAV;AACH;;AAED,cAAI,CAACA,OAAD,IAAYA,OAAO,CAACiB,OAAR,MAAqBP,IAAI,CAACD,SAAL,CAAeT,OAApD,EAA6D;AACzDA,YAAAA,OAAO,GAAWM,MAAM,CAACY,QAAP,CAAgBC,aAAhB,CAA8BT,IAAI,CAACD,SAAL,CAAeT,OAA7C,CAAlB;AACA,iBAAKoB,UAAL,GAAkB,IAAlB;AACH,WAHD,MAIK;AACD,iBAAKA,UAAL,GAAkB,KAAlB;AACH;;AAED,eAAKpB,OAAL,GAAeA,OAAf;AACA,cAAI,CAAC,KAAKoB,UAAV,EACIV,IAAI,CAACW,YAAL,CAAkB,KAAKrB,OAAvB;AAEJM,UAAAA,MAAM,CAACgB,UAAP,CAAkBtB,OAAO,CAACuB,CAAR,CAAUC,SAA5B;AACAlB,UAAAA,MAAM,CAACmB,OAAP,CAAeC,MAAf,CAAsB1B,OAAtB,EAA+BU,IAAI,CAACD,SAAL,CAAeT,OAA9C;AACH;AAxBwB,OAA7B;AA0BH;;;;EAzD6BJ,U;;AA4DlC,eAAeE,mBAAf","sourcesContent":["import BasePlugin from './../basePlugin';\r\n\r\nlet instance;\r\n\r\nclass BackToContentPlugin extends BasePlugin {\r\n\r\n    static createAndRegister(CKEDITOR) {\r\n\r\n        if (!instance) {\r\n            instance = new BackToContentPlugin('backToContents', 'Back To Contents', 'Edit Back To Contents', {\r\n                element: \"app-back-to-contents\",\r\n\r\n            });\r\n        }\r\n        if (!CKEDITOR.plugins.registered[instance.code]) {\r\n            CKEDITOR.plugins.add(instance.code, {\r\n                init: function(editor) {\r\n                    instance.init(editor);\r\n                }\r\n            });\r\n        }\r\n        return instance;\r\n    }\r\n\r\n    constructor(code, buttonLabel, contextMenuEditLabel, ckOptions) {\r\n        super(code, buttonLabel, contextMenuEditLabel, ckOptions);\r\n    }\r\n\r\n    registerWidget() {\r\n\r\n    }\r\n\r\n    registerCommand(editor) {\r\n        let self = this;\r\n\r\n        editor.addCommand(this.code, {\r\n            exec: function(editor) {\r\n\r\n                var selection = editor.getSelection();\r\n                var element   = selection.getStartElement();\r\n\r\n                if (element) {\r\n                    element = element.getAscendant(self.ckOptions.element, true);\r\n                }\r\n\r\n                if (!element || element.getName() != self.ckOptions.element) {\r\n                    element         = editor.document.createElement(self.ckOptions.element);\r\n                    this.insertMode = true;\r\n                }\r\n                else {\r\n                    this.insertMode = false;\r\n                }\r\n\r\n                this.element = element;\r\n                if (!this.insertMode)\r\n                    self.setupContent(this.element);\r\n\r\n                editor.insertHtml(element.$.outerHTML);\r\n                editor.widgets.initOn(element, self.ckOptions.element);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport default BackToContentPlugin;\r\n"]}]}