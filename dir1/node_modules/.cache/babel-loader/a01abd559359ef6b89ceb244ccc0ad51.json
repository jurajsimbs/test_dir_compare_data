{"remainingRequest":"C:\\work\\bi-admin-vue-new\\node_modules\\thread-loader\\dist\\cjs.js!C:\\work\\bi-admin-vue-new\\node_modules\\babel-loader\\lib\\index.js!C:\\work\\bi-admin-vue-new\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\work\\bi-admin-vue-new\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\work\\bi-admin-vue-new\\src\\components\\table\\rowActionWidget\\icon.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\work\\bi-admin-vue-new\\src\\components\\table\\rowActionWidget\\icon.vue","mtime":1552754725266},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\work\\\\bi-admin-vue-new\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport debug from 'debug';\nimport Events from '../../../app/events';\nvar log = debug('bi-admin-vue:table:column-widget:icon');\nexport default {\n  name: 'SimpleTableIconRowActionWidget',\n  data: function data() {\n    return {\n      processing: false\n    };\n  },\n  mounted: function mounted() {\n    if (!this.row) {\n      console.warn('Table icon widget is missing row object!');\n    }\n  },\n  methods: {\n    doOnClick: function () {\n      var _doOnClick = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (this.async) {\n                  this.processing = true;\n                }\n\n                _context.prev = 1;\n                _context.next = 4;\n                return this.onClick(this.row, this.controller);\n\n              case 4:\n                if (this.successMessage) {\n                  this.appManager.$emit(Events.SUCCESS, this.successMessage);\n                }\n\n                _context.next = 11;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](1);\n                console.error(_context.t0);\n\n                if (this.errorMessage) {\n                  this.appManager.$emit(Events.ERROR, this.errorMessage);\n                }\n\n              case 11:\n                _context.prev = 11;\n\n                if (this.async) {\n                  this.processing = false;\n                }\n\n                return _context.finish(11);\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[1, 7, 11, 14]]);\n      }));\n\n      function doOnClick() {\n        return _doOnClick.apply(this, arguments);\n      }\n\n      return doOnClick;\n    }()\n  },\n  props: {\n    controller: {\n      type: Object,\n      default: function _default() {\n        configuration: {}\n      }\n    },\n    onClick: {\n      type: Function,\n      default: function _default() {\n        return function () {\n          log('This icon does nothing');\n        };\n      }\n    },\n    title: {\n      type: String,\n      default: 'Action'\n    },\n    successMessage: {\n      type: String,\n      default: null\n    },\n    errorMessage: {\n      type: String,\n      default: null\n    },\n    async: {\n      type: Boolean,\n      default: false\n    },\n    icon: {\n      type: String,\n      default: 'extension'\n    },\n    row: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    }\n  }\n};",{"version":3,"sources":["icon.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;AAcA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,MAAA,MAAA,qBAAA;AAEA,IAAA,GAAA,GAAA,KAAA,CAAA,uCAAA,CAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,gCADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,UAAA,EAAA;AADA,KAAA;AAGA,GANA;AAOA,EAAA,OAPA,qBAOA;AACA,QAAA,CAAA,KAAA,GAAA,EAAA;AACA,MAAA,OAAA,CAAA,IAAA,CAAA,0CAAA;AACA;AACA,GAXA;AAYA,EAAA,OAAA,EAAA;AACA,IAAA,SADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,oBAAA,KAAA,KAAA,EAAA;AACA,uBAAA,UAAA,GAAA,IAAA;AACA;;AAJA;AAAA;AAAA,uBAMA,KAAA,OAAA,CAAA,KAAA,GAAA,EAAA,KAAA,UAAA,CANA;;AAAA;AAOA,oBAAA,KAAA,cAAA,EAAA;AACA,uBAAA,UAAA,CAAA,KAAA,CAAA,MAAA,CAAA,OAAA,EAAA,KAAA,cAAA;AACA;;AATA;AAAA;;AAAA;AAAA;AAAA;AAWA,gBAAA,OAAA,CAAA,KAAA;;AACA,oBAAA,KAAA,YAAA,EAAA;AACA,uBAAA,UAAA,CAAA,KAAA,CAAA,MAAA,CAAA,KAAA,EAAA,KAAA,YAAA;AACA;;AAdA;AAAA;;AAgBA,oBAAA,KAAA,KAAA,EAAA;AACA,uBAAA,UAAA,GAAA,KAAA;AACA;;AAlBA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,GAZA;AAkCA,EAAA,KAAA,EAAA;AACA,IAAA,UAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA,oBAAA;AACA,QAAA,aAAA,EAAA,CACA;AACA;AALA,KADA;AAQA,IAAA,OAAA,EAAA;AACA,MAAA,IAAA,EAAA,QADA;AAEA,MAAA,OAAA,EAAA,oBAAA;AACA,eAAA,YAAA;AACA,UAAA,GAAA,CAAA,wBAAA,CAAA;AACA,SAFA;AAGA;AANA,KARA;AAgBA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAhBA;AAoBA,IAAA,cAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KApBA;AAwBA,IAAA,YAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAxBA;AA4BA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KA5BA;AAgCA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAhCA;AAoCA,IAAA,GAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA,oBAAA;AACA,eAAA,EAAA;AACA;AAJA;AApCA;AAlCA,CAAA","sourcesContent":["<template>\r\n    <div v-if=\"row\">\r\n        <v-btn flat icon\r\n               :title=\"title\"\r\n                :loading=\"processing\"\r\n                @click=\"doOnClick\"\r\n                :disabled=\"processing\"\r\n                color=\"black\"\r\n        >\r\n            <v-icon>{{icon}}</v-icon>\r\n        </v-btn>\r\n    </div>\r\n</template>\r\n<script>\r\n    import debug from 'debug';\r\n    import Events from '../../../app/events';\r\n\r\n    const log = debug('bi-admin-vue:table:column-widget:icon');\r\n\r\n    export default {\r\n        name   : 'SimpleTableIconRowActionWidget',\r\n        data() {\r\n            return {\r\n                processing: false\r\n            }\r\n        },\r\n        mounted() {\r\n            if (!this.row) {\r\n                console.warn('Table icon widget is missing row object!');\r\n            }\r\n        },\r\n        methods: {\r\n            async doOnClick() {\r\n                if (this.async) {\r\n                    this.processing = true;\r\n                }\r\n                try {\r\n                    await this.onClick(this.row, this.controller);\r\n                    if (this.successMessage) {\r\n                        this.appManager.$emit(Events.SUCCESS, this.successMessage);\r\n                    }\r\n                } catch (e) {\r\n                    console.error(e);\r\n                    if (this.errorMessage) {\r\n                        this.appManager.$emit(Events.ERROR, this.errorMessage);\r\n                    }\r\n                } finally {\r\n                    if (this.async) {\r\n                        this.processing = false;\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        props  : {\r\n            controller    : {\r\n                type   : Object,\r\n                default: () => {\r\n                    configuration: {\r\n                    }\r\n                }\r\n            },\r\n            onClick       : {\r\n                type   : Function,\r\n                default: () => {\r\n                    return () => {\r\n                        log('This icon does nothing');\r\n                    }\r\n                }\r\n            },\r\n            title         : {\r\n                type   : String,\r\n                default: 'Action'\r\n            },\r\n            successMessage: {\r\n                type   : String,\r\n                default: null,\r\n            },\r\n            errorMessage  : {\r\n                type   : String,\r\n                default: null,\r\n            },\r\n            async         : {\r\n                type   : Boolean,\r\n                default: false\r\n            },\r\n            icon          : {\r\n                type   : String,\r\n                default: 'extension'\r\n            },\r\n            row           : {\r\n                type   : Object,\r\n                default: () => {\r\n                    return {}\r\n                }\r\n            }\r\n        }\r\n    }\r\n</script>"],"sourceRoot":"src/components/table/rowActionWidget"}]}