{"remainingRequest":"C:\\work\\bi-admin-vue-new\\node_modules\\babel-loader\\lib\\index.js!C:\\work\\bi-admin-vue-new\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\work\\bi-admin-vue-new\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\work\\bi-admin-vue-new\\src\\components\\editor\\widgets\\youtube\\youtubeDialog.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\work\\bi-admin-vue-new\\src\\components\\editor\\widgets\\youtube\\youtubeDialog.vue","mtime":1552754725256},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nimport _Number$isInteger from \"C:\\\\work\\\\bi-admin-vue-new\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/number/is-integer\";\nimport \"core-js/modules/es6.regexp.match\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport documentUtil from './../../../../lib/util/document';\nvar pattern = /(https?:\\/\\/(?:www\\.|(?!www))[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|www\\.[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|https?:\\/\\/(?:www\\.|(?!www))[a-zA-Z0-9]\\.[^\\s]{2,}|www\\.[a-zA-Z0-9]\\.[^\\s]{2,})/i;\nexport default {\n  data: function data() {\n    return {\n      dialogVisible: this.visible,\n      youtubeVideourl: this.videourl,\n      youtubeControls: this.controls,\n      youtubeFs: this.fs,\n      youtubeAutoplay: this.autoplay,\n      youtubeMute: this.mute,\n      youtubeShowinfo: this.showinfo,\n      youtubeRel: this.rel,\n      youtubeStart: this.start,\n      youtubeEnd: this.end,\n      youtubeLoop: this.loop,\n      youtubePlaylist: this.playlist,\n      youtubeList: this.list,\n      youtubeListtype: this.listtype,\n      endtype: 'rel',\n      pattern: pattern\n    };\n  },\n  computed: {\n    valid: function valid() {\n      return this.youtubeVideourl && this.youtubeVideourl.length > 0 && this.youtubeVideourl.match(pattern) && (!(this.youtubeStart && this.youtubeStart.length > 0) || _Number$isInteger(Number(this.youtubeStart))) && (!(this.youtubeEnd && this.youtubeEnd.length > 0) || _Number$isInteger(Number(this.youtubeEnd)) && Number(this.youtubeStart) < Number(this.youtubeEnd));\n    }\n  },\n  methods: {\n    onClosed: function onClosed() {\n      this.$emit('close', 'youtube', null);\n    },\n    onSaved: function onSaved() {\n      this.$emit('close', 'youtube', {\n        videourl: this.youtubeVideourl,\n        controls: this.youtubeControls,\n        fs: this.youtubeFs,\n        autoplay: this.youtubeAutoplay,\n        mute: this.youtubeMute,\n        showinfo: this.youtubeShowinfo,\n        rel: this.youtubeRel,\n        start: this.youtubeStart && this.youtubeStart != 'null' ? this.youtubeStart : '',\n        end: this.youtubeEnd && this.youtubeEnd != 'null' ? this.youtubeEnd : '',\n        loop: this.youtubeLoop,\n        playlist: this.youtubePlaylist,\n        list: this.youtubeList,\n        listtype: this.youtubeListtype\n      });\n    }\n  },\n  watch: {\n    visible: function visible() {\n      this.dialogVisible = this.visible;\n    },\n    dialogVisible: function dialogVisible() {\n      if (this.dialogVisible) {\n        this.youtubeVideourl = this.videourl;\n        this.youtubeControls = this.controls;\n        this.youtubeFs = this.fs;\n        this.youtubeAutoplay = this.autoplay;\n        this.youtubeMute = this.mute;\n        this.youtubeShowinfo = this.showinfo;\n        this.youtubeRel = this.rel;\n        this.youtubeStart = this.start && this.start != 'null' ? this.start : '';\n        this.youtubeEnd = this.end && this.end != 'null' ? this.end : '';\n        this.youtubeLoop = this.loop;\n        this.youtubePlaylist = this.playlist;\n        this.youtubeList = this.list;\n        this.youtubeListtype = this.listtype;\n      } else {\n        this.onClosed();\n      }\n    },\n    youtubeAutoplay: function youtubeAutoplay() {\n      if (this.youtubeAutoplay) {//this.youtubeMute = true;\n      }\n    },\n    youtubeMute: function youtubeMute() {\n      if (!this.youtubeMute) {//this.youtubeAutoplay = false;\n      }\n    },\n    endtype: function endtype() {\n      switch (this.endtype) {\n        case 'rel':\n          this.youtubeRel = true;\n          this.youtubeLoop = false;\n          this.youtubeListtype = null;\n          this.youtubeList = null;\n          this.youtubePlaylist = null;\n          break;\n\n        case 'loop':\n          this.youtubeLoop = true;\n          this.youtubeRel = false;\n          this.youtubeListtype = null;\n          this.youtubeList = null;\n          this.youtubePlaylist = null;\n          break;\n\n        case 'playlist':\n          this.youtubeLoop = false;\n          this.youtubeRel = false;\n          this.youtubeListtype = null;\n          this.youtubeList = null;\n          this.youtubePlaylist = null;\n          break;\n\n        case 'playlistID':\n        case 'search':\n        case 'user_uploads':\n        default:\n          this.youtubeListtype = this.endtype;\n          this.youtubeLoop = false;\n          this.youtubeRel = false;\n          this.youtubeList = null;\n          this.youtubePlaylist = null;\n      }\n    }\n  },\n  props: {\n    visible: {\n      type: Boolean,\n      default: false\n    },\n    newitem: {\n      type: Boolean,\n      default: false\n    },\n    videourl: {\n      type: String,\n      default: null\n    },\n    controls: {\n      type: Boolean,\n      default: true\n    },\n    fs: {\n      type: Boolean,\n      default: false\n    },\n    autoplay: {\n      type: Boolean,\n      default: false\n    },\n    mute: {\n      type: Boolean,\n      default: false\n    },\n    showinfo: {\n      type: Boolean,\n      default: false\n    },\n    rel: {\n      type: Boolean,\n      default: true\n    },\n    start: {\n      type: String,\n      default: null\n    },\n    end: {\n      type: String,\n      default: null\n    },\n    loop: {\n      type: Boolean,\n      default: false\n    },\n    playlist: {\n      type: String,\n      default: null\n    },\n    list: {\n      type: String,\n      default: null\n    },\n    listtype: {\n      type: String,\n      default: null\n    }\n  }\n};",{"version":3,"sources":["youtubeDialog.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmIA,OAAA,YAAA,MAAA,iCAAA;AAEA,IAAA,OAAA,GAAA,kNAAA;AAEA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,aAAA,EAAA,KAAA,OADA;AAEA,MAAA,eAAA,EAAA,KAAA,QAFA;AAGA,MAAA,eAAA,EAAA,KAAA,QAHA;AAIA,MAAA,SAAA,EAAA,KAAA,EAJA;AAKA,MAAA,eAAA,EAAA,KAAA,QALA;AAMA,MAAA,WAAA,EAAA,KAAA,IANA;AAOA,MAAA,eAAA,EAAA,KAAA,QAPA;AAQA,MAAA,UAAA,EAAA,KAAA,GARA;AASA,MAAA,YAAA,EAAA,KAAA,KATA;AAUA,MAAA,UAAA,EAAA,KAAA,GAVA;AAWA,MAAA,WAAA,EAAA,KAAA,IAXA;AAYA,MAAA,eAAA,EAAA,KAAA,QAZA;AAaA,MAAA,WAAA,EAAA,KAAA,IAbA;AAcA,MAAA,eAAA,EAAA,KAAA,QAdA;AAeA,MAAA,OAAA,EAAA,KAfA;AAgBA,MAAA,OAAA,EAAA;AAhBA,KAAA;AAkBA,GApBA;AAqBA,EAAA,QAAA,EAAA;AACA,IAAA,KADA,mBACA;AACA,aAAA,KAAA,eAAA,IAAA,KAAA,eAAA,CAAA,MAAA,GAAA,CAAA,IAAA,KAAA,eAAA,CAAA,KAAA,CAAA,OAAA,CAAA,KACA,EAAA,KAAA,YAAA,IAAA,KAAA,YAAA,CAAA,MAAA,GAAA,CAAA,KAAA,kBAAA,MAAA,CAAA,KAAA,YAAA,CAAA,CADA,MAEA,EAAA,KAAA,UAAA,IAAA,KAAA,UAAA,CAAA,MAAA,GAAA,CAAA,KAAA,kBAAA,MAAA,CAAA,KAAA,UAAA,CAAA,KAAA,MAAA,CAAA,KAAA,YAAA,CAAA,GAAA,MAAA,CAAA,KAAA,UAAA,CAFA,CAAA;AAGA;AALA,GArBA;AA4BA,EAAA,OAAA,EAAA;AACA,IAAA,QADA,sBACA;AACA,WAAA,KAAA,CAAA,OAAA,EAAA,SAAA,EAAA,IAAA;AACA,KAHA;AAIA,IAAA,OAJA,qBAIA;AACA,WAAA,KAAA,CAAA,OAAA,EAAA,SAAA,EAAA;AACA,QAAA,QAAA,EAAA,KAAA,eADA;AAEA,QAAA,QAAA,EAAA,KAAA,eAFA;AAGA,QAAA,EAAA,EAAA,KAAA,SAHA;AAIA,QAAA,QAAA,EAAA,KAAA,eAJA;AAKA,QAAA,IAAA,EAAA,KAAA,WALA;AAMA,QAAA,QAAA,EAAA,KAAA,eANA;AAOA,QAAA,GAAA,EAAA,KAAA,UAPA;AAQA,QAAA,KAAA,EAAA,KAAA,YAAA,IAAA,KAAA,YAAA,IAAA,MAAA,GAAA,KAAA,YAAA,GAAA,EARA;AASA,QAAA,GAAA,EAAA,KAAA,UAAA,IAAA,KAAA,UAAA,IAAA,MAAA,GAAA,KAAA,UAAA,GAAA,EATA;AAUA,QAAA,IAAA,EAAA,KAAA,WAVA;AAWA,QAAA,QAAA,EAAA,KAAA,eAXA;AAYA,QAAA,IAAA,EAAA,KAAA,WAZA;AAaA,QAAA,QAAA,EAAA,KAAA;AAbA,OAAA;AAeA;AApBA,GA5BA;AAkDA,EAAA,KAAA,EAAA;AACA,IAAA,OADA,qBACA;AACA,WAAA,aAAA,GAAA,KAAA,OAAA;AACA,KAHA;AAIA,IAAA,aAJA,2BAIA;AACA,UAAA,KAAA,aAAA,EAAA;AACA,aAAA,eAAA,GAAA,KAAA,QAAA;AACA,aAAA,eAAA,GAAA,KAAA,QAAA;AACA,aAAA,SAAA,GAAA,KAAA,EAAA;AACA,aAAA,eAAA,GAAA,KAAA,QAAA;AACA,aAAA,WAAA,GAAA,KAAA,IAAA;AACA,aAAA,eAAA,GAAA,KAAA,QAAA;AACA,aAAA,UAAA,GAAA,KAAA,GAAA;AACA,aAAA,YAAA,GAAA,KAAA,KAAA,IAAA,KAAA,KAAA,IAAA,MAAA,GAAA,KAAA,KAAA,GAAA,EAAA;AACA,aAAA,UAAA,GAAA,KAAA,GAAA,IAAA,KAAA,GAAA,IAAA,MAAA,GAAA,KAAA,GAAA,GAAA,EAAA;AACA,aAAA,WAAA,GAAA,KAAA,IAAA;AACA,aAAA,eAAA,GAAA,KAAA,QAAA;AACA,aAAA,WAAA,GAAA,KAAA,IAAA;AACA,aAAA,eAAA,GAAA,KAAA,QAAA;AACA,OAdA,MAcA;AACA,aAAA,QAAA;AACA;AACA,KAtBA;AAuBA,IAAA,eAvBA,6BAuBA;AACA,UAAA,KAAA,eAAA,EAAA,CACA;AACA;AACA,KA3BA;AA4BA,IAAA,WA5BA,yBA4BA;AACA,UAAA,CAAA,KAAA,WAAA,EAAA,CACA;AACA;AACA,KAhCA;AAiCA,IAAA,OAjCA,qBAiCA;AACA,cAAA,KAAA,OAAA;AACA,aAAA,KAAA;AACA,eAAA,UAAA,GAAA,IAAA;AACA,eAAA,WAAA,GAAA,KAAA;AACA,eAAA,eAAA,GAAA,IAAA;AACA,eAAA,WAAA,GAAA,IAAA;AACA,eAAA,eAAA,GAAA,IAAA;AACA;;AACA,aAAA,MAAA;AACA,eAAA,WAAA,GAAA,IAAA;AACA,eAAA,UAAA,GAAA,KAAA;AACA,eAAA,eAAA,GAAA,IAAA;AACA,eAAA,WAAA,GAAA,IAAA;AACA,eAAA,eAAA,GAAA,IAAA;AACA;;AACA,aAAA,UAAA;AACA,eAAA,WAAA,GAAA,KAAA;AACA,eAAA,UAAA,GAAA,KAAA;AACA,eAAA,eAAA,GAAA,IAAA;AACA,eAAA,WAAA,GAAA,IAAA;AACA,eAAA,eAAA,GAAA,IAAA;AACA;;AACA,aAAA,YAAA;AACA,aAAA,QAAA;AACA,aAAA,cAAA;AACA;AACA,eAAA,eAAA,GAAA,KAAA,OAAA;AACA,eAAA,WAAA,GAAA,KAAA;AACA,eAAA,UAAA,GAAA,KAAA;AACA,eAAA,WAAA,GAAA,IAAA;AACA,eAAA,eAAA,GAAA,IAAA;AA9BA;AAgCA;AAlEA,GAlDA;AAsHA,EAAA,KAAA,EAAA;AACA,IAAA,OAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KADA;AAKA,IAAA,OAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KALA;AASA,IAAA,QAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KATA;AAaA,IAAA,QAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAbA;AAiBA,IAAA,EAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAjBA;AAqBA,IAAA,QAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KArBA;AAyBA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAzBA;AA6BA,IAAA,QAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KA7BA;AAiCA,IAAA,GAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAjCA;AAqCA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KArCA;AAyCA,IAAA,GAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAzCA;AA6CA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KA7CA;AAiDA,IAAA,QAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAjDA;AAqDA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KArDA;AAyDA,IAAA,QAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA;AAzDA;AAtHA,CAAA","sourcesContent":["<template>\r\n    <div>\r\n        <v-dialog v-model=\"dialogVisible\" max-width=\"590\">\r\n            <v-card>\r\n                <v-card-title>\r\n                    <span class=\"headline\">Youtube</span>\r\n                </v-card-title>\r\n                <v-card-text>\r\n                    <v-text-field\r\n                        :label=\"youtubeVideourl ? 'Video URL' : ''\"\r\n                        placeholder=\"Video URL\"\r\n                        v-model=\"youtubeVideourl\"\r\n                        required\r\n                        :rules=\"[() => \r\n                            (\r\n                                youtubeVideourl && \r\n                                (youtubeVideourl.length > 0) && \r\n                                (youtubeVideourl.match(pattern) != null)\r\n                            ) || 'Required field, needs to be correct url format']\"\r\n                    ></v-text-field>\r\n                    <v-expansion-panel>\r\n                        <v-expansion-panel-content>\r\n                            <div slot=\"header\">Advanced Settings</div>\r\n                            <v-card>\r\n                                <v-card-text>\r\n                                    <v-switch\r\n                                        label=\"Show controls\"\r\n                                        v-model=\"youtubeControls\"\r\n                                    ></v-switch>\r\n                                    <v-switch\r\n                                        label=\"Enable fullscreen\"\r\n                                        v-model=\"youtubeFs\"\r\n                                    ></v-switch>\r\n\r\n                                    <v-alert\r\n                                        :value=\"true\"\r\n                                        type=\"info\"\r\n                                        class=\"alert\"\r\n                                    >\r\n                                        Autoplay works in Chrome only if the video is also muted.\r\n                                    </v-alert>\r\n                                    <v-switch\r\n                                        label=\"Autoplay\"\r\n                                        v-model=\"youtubeAutoplay\"\r\n                                    ></v-switch>\r\n                                    <v-switch\r\n                                        label=\"Mute\"\r\n                                        v-model=\"youtubeMute\"\r\n                                    ></v-switch>\r\n                                    <v-switch\r\n                                        label=\"Show info\"\r\n                                        v-model=\"youtubeShowinfo\"\r\n                                    ></v-switch>\r\n                                    <v-text-field\r\n                                        :label=\"youtubeStart ? 'Start - number of seconds from the beginning' : ''\"\r\n                                        placeholder=\"Start - number of seconds from the beginning\"\r\n                                        v-model=\"youtubeStart\"\r\n                                        :rules=\"[() => (!(youtubeStart && (youtubeStart.length > 0)) || (Number.isInteger(Number(youtubeStart)) && (!youtubeEnd || Number(youtubeStart) < Number(youtubeEnd)))) || 'Must be a whole number smaller than end']\"\r\n                                    ></v-text-field>\r\n                                    <v-text-field\r\n                                        :label=\"youtubeEnd ? 'End - number of seconds from the beginning' : ''\"\r\n                                        placeholder=\"End - number of seconds from the beginning\"\r\n                                        v-model=\"youtubeEnd\"\r\n                                        :rules=\"[() => (!(youtubeEnd && (youtubeEnd.length > 0)) || (Number.isInteger(Number(youtubeEnd)) && (!youtubeStart || Number(youtubeStart) < Number(youtubeEnd)))) || 'Has to be a whole number bigger than start']\"\r\n                                    ></v-text-field>\r\n                                </v-card-text>\r\n                            </v-card>\r\n                        </v-expansion-panel-content>\r\n                    </v-expansion-panel>\r\n                    <br />\r\n                    <v-expansion-panel>\r\n                        <v-expansion-panel-content>\r\n                            <div slot=\"header\">Video Ending</div>\r\n                            <v-card>\r\n                                <v-card-text>\r\n                                    <v-radio-group v-model=\"endtype\">\r\n                                        <v-radio\r\n                                            label=\"Show automatic related videos after the end\"\r\n                                            value=\"rel\"\r\n                                        ></v-radio>\r\n                                        <v-radio\r\n                                            label=\"Loop\"\r\n                                            value=\"loop\"\r\n                                        ></v-radio>\r\n                                        <v-radio\r\n                                            label=\"Playlist - comma separated list of video ids to play next\"\r\n                                            value=\"playlist\"\r\n                                        ></v-radio>\r\n                                        <v-radio\r\n                                            label=\"Playlist - ID of an already existing playlist\"\r\n                                            value=\"playlistID\"\r\n                                        ></v-radio>\r\n                                        <v-radio\r\n                                            label=\"Search query\"\r\n                                            value=\"search\"\r\n                                        ></v-radio>\r\n                                        <v-radio\r\n                                            label=\"Channel ID\"\r\n                                            value=\"user_uploads\"\r\n                                        ></v-radio>\r\n                                    </v-radio-group>\r\n\r\n                                    <v-text-field\r\n                                        v-if=\"endtype == 'playlist'\"\r\n                                        :label=\"youtubePlaylist ? 'Video ending value' : ''\"\r\n                                        placeholder=\"Video ending value\"\r\n                                        v-model=\"youtubePlaylist\"\r\n                                        required\r\n                                    ></v-text-field>\r\n                                    <v-text-field\r\n                                        v-if=\"(endtype == 'playlistID') || (endtype == 'search') || (endtype == 'user_uploads')\"\r\n                                        :label=\"youtubeList ? 'Video ending value' : ''\"\r\n                                        placeholder=\"Video ending value\"\r\n                                        v-model=\"youtubeList\"\r\n                                    ></v-text-field>\r\n                                </v-card-text>\r\n                            </v-card>\r\n                        </v-expansion-panel-content>\r\n                    </v-expansion-panel>\r\n                </v-card-text>\r\n                <v-card-actions>\r\n                    <v-spacer></v-spacer>\r\n                    <v-btn color=\"blue darken-1\" flat @click.native=\"onClosed\">Close</v-btn>\r\n                    <v-btn color=\"blue darken-1\" flat @click.native=\"onSaved\" v-if=\"valid\">{{ newitem ? 'Add' : 'Save' }}</v-btn>\r\n                    <v-btn color=\"blue darken-1\" flat @click.native=\"onSaved\" v-else disabled>{{ newitem ? 'Add' : 'Save' }}</v-btn>\r\n                </v-card-actions>\r\n            </v-card>\r\n        </v-dialog>\r\n    </div>\r\n</template>\r\n<script>\r\n    import documentUtil from './../../../../lib/util/document';\r\n\r\n    const pattern = /(https?:\\/\\/(?:www\\.|(?!www))[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|www\\.[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|https?:\\/\\/(?:www\\.|(?!www))[a-zA-Z0-9]\\.[^\\s]{2,}|www\\.[a-zA-Z0-9]\\.[^\\s]{2,})/i;\r\n\r\n    export default {\r\n        data() {\r\n            return {\r\n                dialogVisible   : this.visible,\r\n                youtubeVideourl : this.videourl,\r\n                youtubeControls : this.controls,\r\n                youtubeFs       : this.fs,\r\n                youtubeAutoplay : this.autoplay,\r\n                youtubeMute     : this.mute,\r\n                youtubeShowinfo : this.showinfo,\r\n                youtubeRel      : this.rel,\r\n                youtubeStart    : this.start,\r\n                youtubeEnd      : this.end,\r\n                youtubeLoop     : this.loop,\r\n                youtubePlaylist : this.playlist,\r\n                youtubeList     : this.list,\r\n                youtubeListtype : this.listtype,\r\n                endtype         : 'rel',\r\n                pattern\r\n            }\r\n        },\r\n        computed: {\r\n            valid() {\r\n                return this.youtubeVideourl && (this.youtubeVideourl.length > 0) && this.youtubeVideourl.match(pattern) &&\r\n                (!(this.youtubeStart && (this.youtubeStart.length > 0)) || (Number.isInteger(Number(this.youtubeStart)))) &&\r\n                (!(this.youtubeEnd && (this.youtubeEnd.length > 0)) || (Number.isInteger(Number(this.youtubeEnd)) && (Number(this.youtubeStart) < Number(this.youtubeEnd))));\r\n            }\r\n        },\r\n        methods: {\r\n            onClosed() {\r\n                this.$emit('close', 'youtube', null);\r\n            },\r\n            onSaved() {\r\n                this.$emit('close', 'youtube', {\r\n                    videourl    : this.youtubeVideourl,\r\n                    controls    : this.youtubeControls,\r\n                    fs          : this.youtubeFs,\r\n                    autoplay    : this.youtubeAutoplay,\r\n                    mute        : this.youtubeMute,\r\n                    showinfo    : this.youtubeShowinfo,\r\n                    rel         : this.youtubeRel,\r\n                    start       : (this.youtubeStart && (this.youtubeStart != 'null') ? this.youtubeStart : ''),\r\n                    end         : (this.youtubeEnd && (this.youtubeEnd != 'null') ? this.youtubeEnd : ''),\r\n                    loop        : this.youtubeLoop,\r\n                    playlist    : this.youtubePlaylist,\r\n                    list        : this.youtubeList,\r\n                    listtype    : this.youtubeListtype\r\n                });\r\n            }\r\n        },\r\n        watch: {\r\n            visible() {\r\n                this.dialogVisible = this.visible;\r\n            },\r\n            dialogVisible() {\r\n                if (this.dialogVisible) {\r\n                    this.youtubeVideourl = this.videourl;\r\n                    this.youtubeControls = this.controls;\r\n                    this.youtubeFs       = this.fs;\r\n                    this.youtubeAutoplay = this.autoplay;\r\n                    this.youtubeMute     = this.mute;\r\n                    this.youtubeShowinfo = this.showinfo;\r\n                    this.youtubeRel      = this.rel;\r\n                    this.youtubeStart    = (this.start && (this.start != 'null') ? this.start : '');\r\n                    this.youtubeEnd      = (this.end && (this.end != 'null') ? this.end : '');\r\n                    this.youtubeLoop     = this.loop;\r\n                    this.youtubePlaylist = this.playlist;\r\n                    this.youtubeList     = this.list;\r\n                    this.youtubeListtype = this.listtype;\r\n                } else {\r\n                    this.onClosed();\r\n                }\r\n            },\r\n            youtubeAutoplay() {\r\n                if (this.youtubeAutoplay) {\r\n                    //this.youtubeMute = true;\r\n                }\r\n            },\r\n            youtubeMute() {\r\n                if (!this.youtubeMute) {\r\n                    //this.youtubeAutoplay = false;\r\n                }\r\n            },\r\n            endtype() {\r\n                switch(this.endtype) {\r\n                    case 'rel':\r\n                        this.youtubeRel = true;\r\n                        this.youtubeLoop = false;\r\n                        this.youtubeListtype = null;\r\n                        this.youtubeList = null;\r\n                        this.youtubePlaylist = null;\r\n                        break;\r\n                    case 'loop':\r\n                        this.youtubeLoop = true;\r\n                        this.youtubeRel = false;\r\n                        this.youtubeListtype = null;\r\n                        this.youtubeList = null;\r\n                        this.youtubePlaylist = null;\r\n                        break;\r\n                    case 'playlist':\r\n                        this.youtubeLoop = false;\r\n                        this.youtubeRel = false;\r\n                        this.youtubeListtype = null;\r\n                        this.youtubeList = null;\r\n                        this.youtubePlaylist = null;\r\n                        break;\r\n                    case 'playlistID':\r\n                    case 'search':\r\n                    case 'user_uploads':\r\n                    default:\r\n                        this.youtubeListtype = this.endtype;\r\n                        this.youtubeLoop = false;\r\n                        this.youtubeRel = false;\r\n                        this.youtubeList = null;\r\n                        this.youtubePlaylist = null;\r\n                }\r\n            }\r\n        },\r\n        props: {\r\n            visible     : {\r\n                type    : Boolean,\r\n                default : false\r\n            },\r\n            newitem     : {\r\n                type    : Boolean,\r\n                default : false\r\n            },\r\n            videourl    : {\r\n                type    : String,\r\n                default : null\r\n            },\r\n            controls    : {\r\n                type    : Boolean,\r\n                default : true\r\n            },\r\n            fs          : {\r\n                type    : Boolean,\r\n                default : false\r\n            },\r\n            autoplay    : {\r\n                type    : Boolean,\r\n                default : false\r\n            },\r\n            mute        : {\r\n                type    : Boolean,\r\n                default : false\r\n            },\r\n            showinfo    : {\r\n                type    : Boolean,\r\n                default : false\r\n            },\r\n            rel         : {\r\n                type    : Boolean,\r\n                default : true\r\n            },\r\n            start       : {\r\n                type    : String,\r\n                default : null\r\n            },\r\n            end         : {\r\n                type    : String,\r\n                default : null\r\n            },\r\n            loop        : {\r\n                type    : Boolean,\r\n                default : false\r\n            },\r\n            playlist    : {\r\n                type    : String,\r\n                default : null\r\n            },\r\n            list        : {\r\n                type    : String,\r\n                default : null\r\n            },\r\n            listtype    : {\r\n                type    : String,\r\n                default : null\r\n            }\r\n        }\r\n    }\r\n</script>"],"sourceRoot":"src/components/editor/widgets/youtube"}]}