{"remainingRequest":"C:\\work\\bi-admin-vue-new\\node_modules\\babel-loader\\lib\\index.js!C:\\work\\bi-admin-vue-new\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\work\\bi-admin-vue-new\\src\\components\\editor\\monaco\\MonacoLoader.js","dependencies":[{"path":"C:\\work\\bi-admin-vue-new\\src\\components\\editor\\monaco\\MonacoLoader.js","mtime":1552754725229},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["export default {\n  /* For now: default to cdn. */\n  load: function load() {\n    var srcPath = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'https://cdnjs.cloudflare.com/ajax/libs/monaco-editor/0.12.0/min';\n    var callback = arguments.length > 1 ? arguments[1] : undefined;\n\n    if (window.monaco) {\n      callback();\n      return;\n    }\n\n    var config = {\n      paths: {\n        vs: srcPath + '/vs'\n      }\n    };\n    var loaderUrl = \"\".concat(config.paths.vs, \"/loader.js\");\n\n    var onGotAmdLoader = function onGotAmdLoader() {\n      if (window.LOADER_PENDING) {\n        window.require.config(config);\n      } // Load monaco\n\n\n      window.require(['vs/editor/editor.main'], function () {\n        callback();\n      }); // Call the delayed callbacks when AMD loader has been loaded\n\n\n      if (window.LOADER_PENDING) {\n        window.LOADER_PENDING = false;\n        var loaderCallbacks = window.LOADER_CALLBACKS;\n\n        if (loaderCallbacks && loaderCallbacks.length) {\n          var currentCallback = loaderCallbacks.shift();\n\n          while (currentCallback) {\n            currentCallback.fn.call(currentCallback.window);\n            currentCallback = loaderCallbacks.shift();\n          }\n        }\n      }\n    }; // Load AMD loader if necessary\n\n\n    if (window.LOADER_PENDING) {\n      // We need to avoid loading multiple loader.js when there are multiple editors loading concurrently\n      //  delay to call callbacks except the first one\n      window.LOADER_CALLBACKS = window.LOADER_CALLBACKS || [];\n      window.LOADER_CALLBACKS.push({\n        window: this,\n        fn: onGotAmdLoader\n      });\n    } else {\n      if (typeof window.require === 'undefined') {\n        var loaderScript = window.document.createElement('script');\n        loaderScript.type = 'text/javascript';\n        loaderScript.src = loaderUrl;\n        loaderScript.addEventListener('load', onGotAmdLoader);\n        window.document.body.appendChild(loaderScript);\n        window.LOADER_PENDING = true;\n      } else {\n        onGotAmdLoader();\n      }\n    }\n  }\n};",{"version":3,"sources":["C:\\work\\bi-admin-vue-new\\src\\components\\editor\\monaco\\MonacoLoader.js"],"names":["load","srcPath","callback","window","monaco","config","paths","vs","loaderUrl","onGotAmdLoader","LOADER_PENDING","require","loaderCallbacks","LOADER_CALLBACKS","length","currentCallback","shift","fn","call","push","loaderScript","document","createElement","type","src","addEventListener","body","appendChild"],"mappings":"AAAA,eAAe;AACX;AACAA,EAAAA,IAFW,kBAEiF;AAAA,QAAvFC,OAAuF,uEAA7E,iEAA6E;AAAA,QAAVC,QAAU;;AACxF,QAAIC,MAAM,CAACC,MAAX,EAAmB;AACfF,MAAAA,QAAQ;AACR;AACH;;AACD,QAAMG,MAAM,GAAW;AACnBC,MAAAA,KAAK,EAAE;AACHC,QAAAA,EAAE,EAAEN,OAAO,GAAG;AADX;AADY,KAAvB;AAKA,QAAMO,SAAS,aAAWH,MAAM,CAACC,KAAP,CAAaC,EAAxB,eAAf;;AACA,QAAME,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAEzB,UAAIN,MAAM,CAACO,cAAX,EAA2B;AACvBP,QAAAA,MAAM,CAACQ,OAAP,CAAeN,MAAf,CAAsBA,MAAtB;AACH,OAJwB,CAMzB;;;AACAF,MAAAA,MAAM,CAACQ,OAAP,CAAe,CAAC,uBAAD,CAAf,EAA0C,YAAM;AAC5CT,QAAAA,QAAQ;AACX,OAFD,EAPyB,CAWzB;;;AACA,UAAIC,MAAM,CAACO,cAAX,EAA2B;AACvBP,QAAAA,MAAM,CAACO,cAAP,GAAwB,KAAxB;AACA,YAAME,eAAe,GAAGT,MAAM,CAACU,gBAA/B;;AACA,YAAID,eAAe,IAAIA,eAAe,CAACE,MAAvC,EAA+C;AAC3C,cAAIC,eAAe,GAAGH,eAAe,CAACI,KAAhB,EAAtB;;AACA,iBAAOD,eAAP,EAAwB;AACpBA,YAAAA,eAAe,CAACE,EAAhB,CAAmBC,IAAnB,CAAwBH,eAAe,CAACZ,MAAxC;AACAY,YAAAA,eAAe,GAAGH,eAAe,CAACI,KAAhB,EAAlB;AACH;AACJ;AACJ;AACJ,KAvBD,CAXwF,CAoCxF;;;AACA,QAAIb,MAAM,CAACO,cAAX,EAA2B;AACvB;AACA;AACAP,MAAAA,MAAM,CAACU,gBAAP,GAA0BV,MAAM,CAACU,gBAAP,IAA2B,EAArD;AACAV,MAAAA,MAAM,CAACU,gBAAP,CAAwBM,IAAxB,CAA6B;AACzBhB,QAAAA,MAAM,EAAE,IADiB;AAEzBc,QAAAA,EAAE,EAAMR;AAFiB,OAA7B;AAIH,KARD,MAQO;AACH,UAAI,OAAON,MAAM,CAACQ,OAAd,KAA0B,WAA9B,EAA2C;AACvC,YAAMS,YAAY,GAAGjB,MAAM,CAACkB,QAAP,CAAgBC,aAAhB,CAA8B,QAA9B,CAArB;AACAF,QAAAA,YAAY,CAACG,IAAb,GAAqB,iBAArB;AACAH,QAAAA,YAAY,CAACI,GAAb,GAAqBhB,SAArB;AACAY,QAAAA,YAAY,CAACK,gBAAb,CAA8B,MAA9B,EAAsChB,cAAtC;AACAN,QAAAA,MAAM,CAACkB,QAAP,CAAgBK,IAAhB,CAAqBC,WAArB,CAAiCP,YAAjC;AACAjB,QAAAA,MAAM,CAACO,cAAP,GAAwB,IAAxB;AACH,OAPD,MAOO;AACHD,QAAAA,cAAc;AACjB;AACJ;AACJ;AA3DU,CAAf","sourcesContent":["export default {\r\n    /* For now: default to cdn. */\r\n    load(srcPath = 'https://cdnjs.cloudflare.com/ajax/libs/monaco-editor/0.12.0/min', callback) {\r\n        if (window.monaco) {\r\n            callback();\r\n            return;\r\n        }\r\n        const config         = {\r\n            paths: {\r\n                vs: srcPath + '/vs'\r\n            }\r\n        };\r\n        const loaderUrl      = `${config.paths.vs}/loader.js`;\r\n        const onGotAmdLoader = () => {\r\n\r\n            if (window.LOADER_PENDING) {\r\n                window.require.config(config);\r\n            }\r\n\r\n            // Load monaco\r\n            window.require(['vs/editor/editor.main'], () => {\r\n                callback();\r\n            });\r\n\r\n            // Call the delayed callbacks when AMD loader has been loaded\r\n            if (window.LOADER_PENDING) {\r\n                window.LOADER_PENDING = false;\r\n                const loaderCallbacks = window.LOADER_CALLBACKS;\r\n                if (loaderCallbacks && loaderCallbacks.length) {\r\n                    let currentCallback = loaderCallbacks.shift();\r\n                    while (currentCallback) {\r\n                        currentCallback.fn.call(currentCallback.window);\r\n                        currentCallback = loaderCallbacks.shift();\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        // Load AMD loader if necessary\r\n        if (window.LOADER_PENDING) {\r\n            // We need to avoid loading multiple loader.js when there are multiple editors loading concurrently\r\n            //  delay to call callbacks except the first one\r\n            window.LOADER_CALLBACKS = window.LOADER_CALLBACKS || [];\r\n            window.LOADER_CALLBACKS.push({\r\n                window: this,\r\n                fn    : onGotAmdLoader\r\n            });\r\n        } else {\r\n            if (typeof window.require === 'undefined') {\r\n                const loaderScript = window.document.createElement('script');\r\n                loaderScript.type  = 'text/javascript';\r\n                loaderScript.src   = loaderUrl;\r\n                loaderScript.addEventListener('load', onGotAmdLoader);\r\n                window.document.body.appendChild(loaderScript);\r\n                window.LOADER_PENDING = true;\r\n            } else {\r\n                onGotAmdLoader();\r\n            }\r\n        }\r\n    }\r\n}\r\n"]}]}