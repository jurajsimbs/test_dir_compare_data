{"remainingRequest":"C:\\work\\bi-admin-vue-new\\node_modules\\thread-loader\\dist\\cjs.js!C:\\work\\bi-admin-vue-new\\node_modules\\babel-loader\\lib\\index.js!C:\\work\\bi-admin-vue-new\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\work\\bi-admin-vue-new\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\work\\bi-admin-vue-new\\src\\components\\editor\\widgets\\twitch\\twitchDialog.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\work\\bi-admin-vue-new\\src\\components\\editor\\widgets\\twitch\\twitchDialog.vue","mtime":1552754725253},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport documentUtil from './../../../../lib/util/document';\nexport default {\n  data: function data() {\n    return {\n      dialogVisible: this.visible,\n      twitchSrc: this.src,\n      twitchSrctype: this.srctype,\n      twitchAutoplay: this.autoplay,\n      twitchMuted: this.muted,\n      twitchTime: this.time\n    };\n  },\n  computed: {\n    valid: function valid() {\n      return this.twitchSrc && this.twitchSrc.length > 0 && this.validTime;\n    },\n    validTime: function validTime() {\n      var regex = /[0-9]+h[0-9]+m[0-9]+s$/;\n      return !this.twitchTime || regex.test(this.twitchTime);\n    }\n  },\n  methods: {\n    onClosed: function onClosed() {\n      this.$emit('close', 'twitch', null);\n    },\n    onSaved: function onSaved() {\n      if (this.twitchSrctype == 'video' && this.twitchSrc[0] != 'v') {\n        this.twitchSrc = 'v' + this.twitchSrc;\n      }\n\n      this.$emit('close', 'twitch', {\n        src: this.twitchSrc,\n        srctype: this.twitchSrctype,\n        autoplay: this.twitchAutoplay,\n        muted: this.twitchMuted,\n        time: this.twitchTime && this.twitchTime != 'null' ? this.twitchTime : '0h0m0s'\n      });\n    }\n  },\n  watch: {\n    visible: function visible() {\n      this.dialogVisible = this.visible;\n    },\n    dialogVisible: function dialogVisible() {\n      if (this.dialogVisible) {\n        this.twitchSrc = this.src;\n        this.twitchSrctype = this.srctype;\n        this.twitchAutoplay = this.autoplay;\n        this.twitchMuted = this.muted;\n        this.twitchTime = this.time;\n      } else {\n        this.onClosed();\n      }\n    }\n  },\n  props: {\n    visible: {\n      type: Boolean,\n      default: false\n    },\n    newitem: {\n      type: Boolean,\n      default: false\n    },\n    src: {\n      type: String,\n      default: null\n    },\n    srctype: {\n      type: String,\n      default: 'video'\n    },\n    autoplay: {\n      type: Boolean,\n      default: false\n    },\n    muted: {\n      type: Boolean,\n      default: false\n    },\n    time: {\n      type: String,\n      default: '0h0m0s'\n    }\n  }\n};",{"version":3,"sources":["twitchDialog.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqEA,OAAA,YAAA,MAAA,iCAAA;AAEA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,aAAA,EAAA,KAAA,OADA;AAEA,MAAA,SAAA,EAAA,KAAA,GAFA;AAGA,MAAA,aAAA,EAAA,KAAA,OAHA;AAIA,MAAA,cAAA,EAAA,KAAA,QAJA;AAKA,MAAA,WAAA,EAAA,KAAA,KALA;AAMA,MAAA,UAAA,EAAA,KAAA;AANA,KAAA;AAQA,GAVA;AAWA,EAAA,QAAA,EAAA;AACA,IAAA,KADA,mBACA;AACA,aAAA,KAAA,SAAA,IAAA,KAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,KAAA,SAAA;AACA,KAHA;AAIA,IAAA,SAJA,uBAIA;AACA,UAAA,KAAA,GAAA,wBAAA;AACA,aAAA,CAAA,KAAA,UAAA,IAAA,KAAA,CAAA,IAAA,CAAA,KAAA,UAAA,CAAA;AACA;AAPA,GAXA;AAoBA,EAAA,OAAA,EAAA;AACA,IAAA,QADA,sBACA;AACA,WAAA,KAAA,CAAA,OAAA,EAAA,QAAA,EAAA,IAAA;AACA,KAHA;AAIA,IAAA,OAJA,qBAIA;AACA,UAAA,KAAA,aAAA,IAAA,OAAA,IAAA,KAAA,SAAA,CAAA,CAAA,KAAA,GAAA,EAAA;AACA,aAAA,SAAA,GAAA,MAAA,KAAA,SAAA;AACA;;AACA,WAAA,KAAA,CAAA,OAAA,EAAA,QAAA,EAAA;AACA,QAAA,GAAA,EAAA,KAAA,SADA;AAEA,QAAA,OAAA,EAAA,KAAA,aAFA;AAGA,QAAA,QAAA,EAAA,KAAA,cAHA;AAIA,QAAA,KAAA,EAAA,KAAA,WAJA;AAKA,QAAA,IAAA,EAAA,KAAA,UAAA,IAAA,KAAA,UAAA,IAAA,MAAA,GAAA,KAAA,UAAA,GAAA;AALA,OAAA;AAOA;AAfA,GApBA;AAqCA,EAAA,KAAA,EAAA;AACA,IAAA,OADA,qBACA;AACA,WAAA,aAAA,GAAA,KAAA,OAAA;AACA,KAHA;AAIA,IAAA,aAJA,2BAIA;AACA,UAAA,KAAA,aAAA,EAAA;AACA,aAAA,SAAA,GAAA,KAAA,GAAA;AACA,aAAA,aAAA,GAAA,KAAA,OAAA;AACA,aAAA,cAAA,GAAA,KAAA,QAAA;AACA,aAAA,WAAA,GAAA,KAAA,KAAA;AACA,aAAA,UAAA,GAAA,KAAA,IAAA;AACA,OANA,MAMA;AACA,aAAA,QAAA;AACA;AACA;AAdA,GArCA;AAqDA,EAAA,KAAA,EAAA;AACA,IAAA,OAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KADA;AAKA,IAAA,OAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KALA;AASA,IAAA,GAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KATA;AAaA,IAAA,OAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAbA;AAiBA,IAAA,QAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAjBA;AAqBA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KArBA;AAyBA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA;AAzBA;AArDA,CAAA","sourcesContent":["<template>\r\n    <div>\r\n        <v-dialog v-model=\"dialogVisible\" max-width=\"290\">\r\n            <v-card>\r\n                <v-card-title>\r\n                    <span class=\"headline\">Twitch</span>\r\n                </v-card-title>\r\n                <v-card-text>\r\n\r\n                    <v-text-field\r\n                        :label=\"twitchSrc ? 'Src' : ''\"\r\n                        placeholder=\"Src\"\r\n                        v-model=\"twitchSrc\"\r\n                        required\r\n                        :rules=\"[() => (twitchSrc && twitchSrc.length > 0) || 'Required field']\"\r\n                    ></v-text-field>\r\n\r\n                    Type:\r\n                    <v-radio-group v-model=\"twitchSrctype\">\r\n                        <v-radio\r\n                            label=\"Video\"\r\n                            value=\"video\"\r\n                        ></v-radio>\r\n                        <v-radio\r\n                            label=\"Channel\"\r\n                            value=\"channel\"\r\n                        ></v-radio>\r\n                        <v-radio\r\n                            label=\"Collection\"\r\n                            value=\"collection\"\r\n                        ></v-radio>\r\n                    </v-radio-group>\r\n\r\n                    <v-expansion-panel>\r\n                        <v-expansion-panel-content>\r\n                            <div slot=\"header\">Advanced Settings</div>\r\n                            <v-card>\r\n                                <v-card-text>\r\n                                    <v-switch\r\n                                        label=\"Autoplay\"\r\n                                        v-model=\"twitchAutoplay\"\r\n                                    ></v-switch>\r\n                                    <v-switch\r\n                                        label=\"Muted\"\r\n                                        v-model=\"twitchMuted\"\r\n                                    ></v-switch>\r\n                                    <v-text-field\r\n                                        :label=\"twitchTime ? 'Time (where the video starts)' : ''\"\r\n                                        placeholder=\"Time (where the video starts)\"\r\n                                        v-model=\"twitchTime\"\r\n                                        required\r\n                                        :rules=\"[() => validTime || 'Time needs to be in format 0h0m0s.']\"\r\n                                    ></v-text-field>\r\n                                </v-card-text>\r\n                            </v-card>\r\n                        </v-expansion-panel-content>\r\n                    </v-expansion-panel>\r\n                </v-card-text>\r\n                <v-card-actions>\r\n                    <v-spacer></v-spacer>\r\n                    <v-btn color=\"blue darken-1\" flat @click.native=\"onClosed\">Close</v-btn>\r\n                    <v-btn color=\"blue darken-1\" flat @click.native=\"onSaved\" v-if=\"valid\">{{ newitem ? 'Add' : 'Save' }}</v-btn>\r\n                    <v-btn color=\"blue darken-1\" flat @click.native=\"onSaved\" v-else disabled>{{ newitem ? 'Add' : 'Save' }}</v-btn>\r\n                </v-card-actions>\r\n            </v-card>\r\n        </v-dialog>\r\n    </div>\r\n</template>\r\n<script>\r\n    import documentUtil from './../../../../lib/util/document';\r\n\r\n    export default {\r\n        data() {\r\n            return {\r\n                dialogVisible   : this.visible,\r\n                twitchSrc       : this.src,\r\n                twitchSrctype   : this.srctype,\r\n                twitchAutoplay  : this.autoplay,\r\n                twitchMuted     : this.muted,\r\n                twitchTime      : this.time\r\n            }\r\n        },\r\n        computed: {\r\n            valid() {\r\n                return this.twitchSrc && (this.twitchSrc.length > 0) && this.validTime;\r\n            },\r\n            validTime() {\r\n                let regex = /[0-9]+h[0-9]+m[0-9]+s$/;\r\n                return !this.twitchTime || (regex.test(this.twitchTime));\r\n            }\r\n        },\r\n        methods: {\r\n            onClosed() {\r\n                this.$emit('close', 'twitch', null);\r\n            },\r\n            onSaved() {\r\n                if ((this.twitchSrctype == 'video') && (this.twitchSrc[0] != 'v')) {\r\n                    this.twitchSrc = 'v' + this.twitchSrc;\r\n                }\r\n                this.$emit('close', 'twitch', {\r\n                    src         : this.twitchSrc,\r\n                    srctype     : this.twitchSrctype,\r\n                    autoplay    : this.twitchAutoplay,\r\n                    muted       : this.twitchMuted,\r\n                    time        : (this.twitchTime && (this.twitchTime != 'null') ? this.twitchTime : '0h0m0s')\r\n                });\r\n            }\r\n        },\r\n        watch: {\r\n            visible() {\r\n                this.dialogVisible = this.visible;\r\n            },\r\n            dialogVisible() {\r\n                if (this.dialogVisible) {\r\n                    this.twitchSrc      = this.src;\r\n                    this.twitchSrctype  = this.srctype;\r\n                    this.twitchAutoplay = this.autoplay;\r\n                    this.twitchMuted    = this.muted;\r\n                    this.twitchTime     = this.time;\r\n                } else {\r\n                    this.onClosed();\r\n                }\r\n            }\r\n        },\r\n        props: {\r\n            visible     : {\r\n                type    : Boolean,\r\n                default : false\r\n            },\r\n            newitem     : {\r\n                type    : Boolean,\r\n                default : false\r\n            },\r\n            src         : {\r\n                type    : String,\r\n                default : null\r\n            },\r\n            srctype     : {\r\n                type    : String,\r\n                default : 'video'\r\n            },\r\n            autoplay    : {\r\n                type    : Boolean,\r\n                default : false\r\n            },\r\n            muted       : {\r\n                type    : Boolean,\r\n                default : false\r\n            },\r\n            time        : {\r\n                type    : String,\r\n                default : '0h0m0s'\r\n            }\r\n        }\r\n    }\r\n</script>"],"sourceRoot":"src/components/editor/widgets/twitch"}]}