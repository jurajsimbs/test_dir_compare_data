{"remainingRequest":"C:\\work\\bi-admin-vue-new\\node_modules\\thread-loader\\dist\\cjs.js!C:\\work\\bi-admin-vue-new\\node_modules\\babel-loader\\lib\\index.js!C:\\work\\bi-admin-vue-new\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\work\\bi-admin-vue-new\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\work\\bi-admin-vue-new\\src\\components\\table\\filter\\SimpleTableFilterDropdownFilter.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\work\\bi-admin-vue-new\\src\\components\\table\\filter\\SimpleTableFilterDropdownFilter.vue","mtime":1552754725265},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _Object$assign from \"C:\\\\work\\\\bi-admin-vue-new\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/object/assign\";\nimport _Promise from \"C:\\\\work\\\\bi-admin-vue-new\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/promise\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\work\\\\bi-admin-vue-new\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _NO_VALUE = '__no_value__';\nexport default {\n  name: 'SimpleTableFilterDropdownFilter',\n  data: function data() {\n    return {\n      items: [],\n      selectedValue: _NO_VALUE,\n      selectedName: null\n    };\n  },\n  methods: {\n    clearValue: function clearValue() {\n      this.selectedValue = _NO_VALUE;\n      this.selectedName = null;\n      /** @type SimpleTableController */\n\n      this.controller.loadData();\n    }\n  },\n  mounted: function () {\n    var _mounted = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee() {\n      var list;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              list = [];\n\n              if (!(typeof this.configuration.items === \"function\")) {\n                _context.next = 7;\n                break;\n              }\n\n              _context.next = 4;\n              return _Promise.resolve(this.configuration.items());\n\n            case 4:\n              list = _context.sent;\n              _context.next = 8;\n              break;\n\n            case 7:\n              list = this.configuration.items;\n\n            case 8:\n              if (list && list[0] && list[0].value !== _NO_VALUE) {\n                list.unshift({\n                  text: 'All',\n                  value: _NO_VALUE\n                });\n              }\n\n              this.items = list;\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function mounted() {\n      return _mounted.apply(this, arguments);\n    }\n\n    return mounted;\n  }(),\n  computed: {\n    NO_VALUE: function NO_VALUE() {\n      return _NO_VALUE;\n    },\n    // items() {\n    //     let list = this.configuration.items;\n    //     if (list && list[0] && list[0].value !== NO_VALUE) {\n    //         list.unshift({\n    //             text : 'All',\n    //             value: NO_VALUE\n    //         });\n    //     }\n    //     return list;\n    // },\n    configuration: function configuration() {\n      var defaults = {\n        hintText: 'Select'\n      };\n\n      try {\n        defaults = _Object$assign(defaults, this.controller.configuration.filter[this.code]);\n      } catch (e) {\n        console.warn(\"Unable to get configuration for filter \".concat(this.code));\n      }\n\n      return defaults;\n    }\n  },\n  props: {\n    /**\n     * @type SimpleTableController\n     */\n    controller: {\n      type: Object,\n      default: function _default() {\n        return null;\n      }\n    },\n    code: {\n      type: String,\n      default: ''\n    }\n  },\n  watch: {\n    selectedValue: function selectedValue(newValue) {\n      if (newValue === _NO_VALUE) {\n        this.controller.clearFilterValue(this.code);\n        this.selectedName = null;\n      } else {\n        this.controller.setFilterValue(this.code, newValue);\n\n        for (var i = 0; i < this.items.length; i++) {\n          if (this.items[i].value === newValue) {\n            this.selectedName = this.items[i].text;\n          }\n        }\n      }\n      /** @type SimpleTableController */\n\n\n      this.controller.loadData();\n    }\n  }\n};",{"version":3,"sources":["SimpleTableFilterDropdownFilter.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAUA,IAAA,SAAA,GAAA,cAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,iCADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,KAAA,EAAA,EADA;AAEA,MAAA,aAAA,EAAA,SAFA;AAGA,MAAA,YAAA,EAAA;AAHA,KAAA;AAKA,GARA;AASA,EAAA,OAAA,EAAA;AACA,IAAA,UADA,wBACA;AACA,WAAA,aAAA,GAAA,SAAA;AACA,WAAA,YAAA,GAAA,IAAA;AACA;;AACA,WAAA,UAAA,CAAA,QAAA;AACA;AANA,GATA;AAiBA,EAAA,OAjBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkBA,cAAA,IAlBA,GAkBA,EAlBA;;AAAA,oBAmBA,OAAA,KAAA,aAAA,CAAA,KAAA,KAAA,UAnBA;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAoBA,SAAA,OAAA,CAAA,KAAA,aAAA,CAAA,KAAA,EAAA,CApBA;;AAAA;AAoBA,cAAA,IApBA;AAAA;AAAA;;AAAA;AAsBA,cAAA,IAAA,GAAA,KAAA,aAAA,CAAA,KAAA;;AAtBA;AAyBA,kBAAA,IAAA,IAAA,IAAA,CAAA,CAAA,CAAA,IAAA,IAAA,CAAA,CAAA,CAAA,CAAA,KAAA,KAAA,SAAA,EAAA;AACA,gBAAA,IAAA,CAAA,OAAA,CAAA;AACA,kBAAA,IAAA,EAAA,KADA;AAEA,kBAAA,KAAA,EAAA;AAFA,iBAAA;AAIA;;AACA,mBAAA,KAAA,GAAA,IAAA;;AA/BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAiCA,EAAA,QAAA,EAAA;AACA,IAAA,QADA,sBACA;AACA,aAAA,SAAA;AACA,KAHA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAA,aAdA,2BAcA;AACA,UAAA,QAAA,GAAA;AACA,QAAA,QAAA,EAAA;AADA,OAAA;;AAGA,UAAA;AACA,QAAA,QAAA,GAAA,eAAA,QAAA,EAAA,KAAA,UAAA,CAAA,aAAA,CAAA,MAAA,CAAA,KAAA,IAAA,CAAA,CAAA;AACA,OAFA,CAEA,OAAA,CAAA,EAAA;AACA,QAAA,OAAA,CAAA,IAAA,kDAAA,KAAA,IAAA;AACA;;AACA,aAAA,QAAA;AACA;AAxBA,GAjCA;AA2DA,EAAA,KAAA,EAAA;AACA;;;AAGA,IAAA,UAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAAA,eAAA,IAAA;AAAA;AAFA,KAJA;AAQA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA;AARA,GA3DA;AAwEA,EAAA,KAAA,EAAA;AACA,IAAA,aADA,yBACA,QADA,EACA;AACA,UAAA,QAAA,KAAA,SAAA,EAAA;AACA,aAAA,UAAA,CAAA,gBAAA,CAAA,KAAA,IAAA;AACA,aAAA,YAAA,GAAA,IAAA;AACA,OAHA,MAGA;AACA,aAAA,UAAA,CAAA,cAAA,CAAA,KAAA,IAAA,EAAA,QAAA;;AACA,aAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,KAAA,KAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,cAAA,KAAA,KAAA,CAAA,CAAA,EAAA,KAAA,KAAA,QAAA,EAAA;AACA,iBAAA,YAAA,GAAA,KAAA,KAAA,CAAA,CAAA,EAAA,IAAA;AACA;AACA;AACA;AACA;;;AACA,WAAA,UAAA,CAAA,QAAA;AACA;AAfA;AAxEA,CAAA","sourcesContent":["<template>\r\n    <div>\r\n        <v-select v-if=\"!selectedValue || selectedValue === NO_VALUE\" :label=\"configuration.hintText\"\r\n                  v-model=\"selectedValue\" :items=\"items\"></v-select>\r\n        <div v-if=\"selectedValue && selectedValue !== NO_VALUE\">{{configuration.label}}:\r\n            <v-chip close @input=\"clearValue\">{{selectedName}}</v-chip>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\n    const NO_VALUE = '__no_value__';\r\n    export default {\r\n        name    : 'SimpleTableFilterDropdownFilter',\r\n        data() {\r\n            return {\r\n                items        : [],\r\n                selectedValue: NO_VALUE,\r\n                selectedName : null\r\n            }\r\n        },\r\n        methods : {\r\n            clearValue() {\r\n                this.selectedValue = NO_VALUE;\r\n                this.selectedName = null;\r\n                /** @type SimpleTableController */\r\n                this.controller.loadData();\r\n            }\r\n        },\r\n        async mounted() {\r\n            let list = [];\r\n            if (typeof this.configuration.items === \"function\") {\r\n                list = await Promise.resolve(this.configuration.items());\r\n            } else {\r\n                list = this.configuration.items;\r\n            }\r\n\r\n            if (list && list[0] && list[0].value !== NO_VALUE) {\r\n                list.unshift({\r\n                    text : 'All',\r\n                    value: NO_VALUE\r\n                });\r\n            }\r\n            this.items = list;\r\n        },\r\n        computed: {\r\n            NO_VALUE() {\r\n                return NO_VALUE;\r\n            },\r\n            // items() {\r\n            //     let list = this.configuration.items;\r\n            //     if (list && list[0] && list[0].value !== NO_VALUE) {\r\n            //         list.unshift({\r\n            //             text : 'All',\r\n            //             value: NO_VALUE\r\n            //         });\r\n            //     }\r\n            //     return list;\r\n            // },\r\n            configuration() {\r\n                let defaults = {\r\n                    hintText: 'Select'\r\n                };\r\n                try {\r\n                    defaults = Object.assign(defaults, this.controller.configuration.filter[this.code]);\r\n                } catch (e) {\r\n                    console.warn(`Unable to get configuration for filter ${this.code}`);\r\n                }\r\n                return defaults;\r\n            }\r\n        },\r\n        props   : {\r\n            /**\r\n             * @type SimpleTableController\r\n             */\r\n            controller: {\r\n                type   : Object,\r\n                default: () => null\r\n            },\r\n            code      : {\r\n                type   : String,\r\n                default: ''\r\n            }\r\n        },\r\n        watch   : {\r\n            selectedValue(newValue) {\r\n                if (newValue === NO_VALUE) {\r\n                    this.controller.clearFilterValue(this.code);\r\n                    this.selectedName = null;\r\n                } else {\r\n                    this.controller.setFilterValue(this.code, newValue);\r\n                    for (let i = 0; i < this.items.length; i++) {\r\n                        if (this.items[i].value === newValue) {\r\n                            this.selectedName = this.items[i].text;\r\n                        }\r\n                    }\r\n                }\r\n                /** @type SimpleTableController */\r\n                this.controller.loadData();\r\n            }\r\n        }\r\n    }\r\n</script>\r\n<style scoped>\r\n</style>"],"sourceRoot":"src/components/table/filter"}]}