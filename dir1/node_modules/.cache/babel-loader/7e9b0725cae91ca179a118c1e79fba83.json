{"remainingRequest":"C:\\work\\bi-admin-vue-new\\node_modules\\thread-loader\\dist\\cjs.js!C:\\work\\bi-admin-vue-new\\node_modules\\babel-loader\\lib\\index.js!C:\\work\\bi-admin-vue-new\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\work\\bi-admin-vue-new\\src\\components\\editor\\widgets\\basePlugin.js","dependencies":[{"path":"C:\\work\\bi-admin-vue-new\\src\\components\\editor\\widgets\\basePlugin.js","mtime":1552754725233},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar basePlugin =\n/*#__PURE__*/\nfunction () {\n  function basePlugin(code, buttonLabel, contextMenuEditLabel, ckOptions) {\n    _classCallCheck(this, basePlugin);\n\n    this.code = code;\n    this.contextMenuEditLabel = contextMenuEditLabel;\n    this.buttonLabel = buttonLabel;\n    this.ckOptions = ckOptions;\n  }\n\n  _createClass(basePlugin, [{\n    key: \"registerDialog\",\n    value: function registerDialog() {//not implemented in baseClass\n    }\n  }, {\n    key: \"registerCommand\",\n    value: function registerCommand(editor) {//not implemented in baseClass\n    }\n  }, {\n    key: \"registerButton\",\n    value: function registerButton(editor) {\n      editor.ui.addButton(this.code, {\n        label: this.buttonLabel,\n        command: this.code,\n        icon: this.code\n      });\n    }\n  }, {\n    key: \"registerWidget\",\n    value: function registerWidget(editor) {\n      var self = this;\n      editor.widgets.add(this.ckOptions.element, {\n        allowedContent: true,\n        upcast: function upcast(element) {\n          return element.name === self.ckOptions.element;\n        },\n        dialog: this.code\n      });\n    }\n  }, {\n    key: \"registerContextMenu\",\n    value: function registerContextMenu(editor) {\n      if (editor.contextMenu) {\n        editor.addMenuGroup(this.code + 'Group');\n        editor.addMenuItem(this.code + 'Item', {\n          label: this.contextMenuEditLabel,\n          command: this.code,\n          group: this.code + 'Group'\n        });\n        var self = this;\n        editor.contextMenu.addListener(function (element) {\n          if (element.getAscendant(self.ckOptions.element, true)) {\n            var result = {};\n            result[self.code] = CKEDITOR.TRISTATE_OFF;\n            return result;\n          }\n        });\n      }\n    }\n    /**\r\n     *\r\n     * @param {Object} editor CKEditor instance\r\n     */\n\n  }, {\n    key: \"init\",\n    value: function init(editor) {\n      this.registerCommand(editor);\n      this.registerButton(editor);\n      this.registerWidget(editor);\n      this.registerContextMenu(editor);\n      this.registerDialog();\n    }\n  }]);\n\n  return basePlugin;\n}();\n\nexport { basePlugin as default };",{"version":3,"sources":["C:\\work\\bi-admin-vue-new\\src\\components\\editor\\widgets\\basePlugin.js"],"names":["basePlugin","code","buttonLabel","contextMenuEditLabel","ckOptions","editor","ui","addButton","label","command","icon","self","widgets","add","element","allowedContent","upcast","name","dialog","contextMenu","addMenuGroup","addMenuItem","group","addListener","getAscendant","result","CKEDITOR","TRISTATE_OFF","registerCommand","registerButton","registerWidget","registerContextMenu","registerDialog"],"mappings":";;;;;;IAAqBA,U;;;AACjB,sBAAYC,IAAZ,EAAkBC,WAAlB,EAA+BC,oBAA/B,EAAqDC,SAArD,EAAgE;AAAA;;AAC5D,SAAKH,IAAL,GAAYA,IAAZ;AACA,SAAKE,oBAAL,GAA4BA,oBAA5B;AACA,SAAKD,WAAL,GAAmBA,WAAnB;AACA,SAAKE,SAAL,GAAiBA,SAAjB;AACH;;;;qCAEgB,CACb;AACH;;;oCAEeC,M,EAAQ,CACpB;AACH;;;mCAEcA,M,EAAQ;AACnBA,MAAAA,MAAM,CAACC,EAAP,CAAUC,SAAV,CAAoB,KAAKN,IAAzB,EAA+B;AAC3BO,QAAAA,KAAK,EAAI,KAAKN,WADa;AAE3BO,QAAAA,OAAO,EAAE,KAAKR,IAFa;AAG3BS,QAAAA,IAAI,EAAK,KAAKT;AAHa,OAA/B;AAKH;;;mCAEcI,M,EAAQ;AACnB,UAAIM,IAAI,GAAG,IAAX;AACAN,MAAAA,MAAM,CAACO,OAAP,CAAeC,GAAf,CAAmB,KAAKT,SAAL,CAAeU,OAAlC,EAA2C;AACvCC,QAAAA,cAAc,EAAE,IADuB;AAEvCC,QAAAA,MAAM,EAAU,gBAAUF,OAAV,EAAmB;AAC/B,iBAAOA,OAAO,CAACG,IAAR,KAAiBN,IAAI,CAACP,SAAL,CAAeU,OAAvC;AACH,SAJsC;AAKvCI,QAAAA,MAAM,EAAE,KAAKjB;AAL0B,OAA3C;AAOH;;;wCAEmBI,M,EAAQ;AACxB,UAAIA,MAAM,CAACc,WAAX,EAAwB;AACpBd,QAAAA,MAAM,CAACe,YAAP,CAAoB,KAAKnB,IAAL,GAAY,OAAhC;AACAI,QAAAA,MAAM,CAACgB,WAAP,CAAmB,KAAKpB,IAAL,GAAY,MAA/B,EAAuC;AACnCO,UAAAA,KAAK,EAAI,KAAKL,oBADqB;AAEnCM,UAAAA,OAAO,EAAE,KAAKR,IAFqB;AAGnCqB,UAAAA,KAAK,EAAI,KAAKrB,IAAL,GAAY;AAHc,SAAvC;AAMA,YAAIU,IAAI,GAAG,IAAX;AAEAN,QAAAA,MAAM,CAACc,WAAP,CAAmBI,WAAnB,CAA+B,UAAUT,OAAV,EAAmB;AAC9C,cAAIA,OAAO,CAACU,YAAR,CAAqBb,IAAI,CAACP,SAAL,CAAeU,OAApC,EAA6C,IAA7C,CAAJ,EAAwD;AACpD,gBAAIW,MAAM,GAAG,EAAb;AACAA,YAAAA,MAAM,CAACd,IAAI,CAACV,IAAN,CAAN,GAAoByB,QAAQ,CAACC,YAA7B;AACA,mBAAOF,MAAP;AACH;AACJ,SAND;AAOH;AACJ;AAED;;;;;;;yBAIKpB,M,EAAQ;AACT,WAAKuB,eAAL,CAAqBvB,MAArB;AACA,WAAKwB,cAAL,CAAoBxB,MAApB;AACA,WAAKyB,cAAL,CAAoBzB,MAApB;AACA,WAAK0B,mBAAL,CAAyB1B,MAAzB;AACA,WAAK2B,cAAL;AACH;;;;;;SAlEgBhC,U","sourcesContent":["export default class basePlugin {\r\n    constructor(code, buttonLabel, contextMenuEditLabel, ckOptions) {\r\n        this.code = code;\r\n        this.contextMenuEditLabel = contextMenuEditLabel;\r\n        this.buttonLabel = buttonLabel;\r\n        this.ckOptions = ckOptions;\r\n    }\r\n\r\n    registerDialog() {\r\n        //not implemented in baseClass\r\n    }\r\n\r\n    registerCommand(editor) {\r\n        //not implemented in baseClass\r\n    }\r\n\r\n    registerButton(editor) {\r\n        editor.ui.addButton(this.code, {\r\n            label  : this.buttonLabel,\r\n            command: this.code,\r\n            icon   : this.code\r\n        });\r\n    }\r\n\r\n    registerWidget(editor) {\r\n        let self = this;\r\n        editor.widgets.add(this.ckOptions.element, {\r\n            allowedContent: true,\r\n            upcast        : function (element) {\r\n                return element.name === self.ckOptions.element;\r\n            },\r\n            dialog: this.code\r\n        });\r\n    }\r\n\r\n    registerContextMenu(editor) {\r\n        if (editor.contextMenu) {\r\n            editor.addMenuGroup(this.code + 'Group');\r\n            editor.addMenuItem(this.code + 'Item', {\r\n                label  : this.contextMenuEditLabel,\r\n                command: this.code,\r\n                group  : this.code + 'Group'\r\n            });\r\n\r\n            let self = this;\r\n\r\n            editor.contextMenu.addListener(function (element) {\r\n                if (element.getAscendant(self.ckOptions.element, true)) {\r\n                    let result = {};\r\n                    result[self.code] = CKEDITOR.TRISTATE_OFF;\r\n                    return result;\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {Object} editor CKEditor instance\r\n     */\r\n    init(editor) {\r\n        this.registerCommand(editor);\r\n        this.registerButton(editor);\r\n        this.registerWidget(editor);\r\n        this.registerContextMenu(editor);\r\n        this.registerDialog();\r\n    }\r\n}"]}]}