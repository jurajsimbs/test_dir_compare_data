{"remainingRequest":"C:\\work\\bi-admin-vue-new\\node_modules\\thread-loader\\dist\\cjs.js!C:\\work\\bi-admin-vue-new\\node_modules\\babel-loader\\lib\\index.js!C:\\work\\bi-admin-vue-new\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\work\\bi-admin-vue-new\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\work\\bi-admin-vue-new\\src\\components\\application\\SinglePage.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\work\\bi-admin-vue-new\\src\\components\\application\\SinglePage.vue","mtime":1552754725220},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"C:\\\\work\\\\bi-admin-vue-new\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapActions, mapGetters } from 'vuex';\nimport Events from '../../app/events';\nimport LocalSettings from '../../app/localSettings';\nimport Themes from '../../app/theme';\nimport Environment from '../../const/env';\nimport languageCodes from '../../const/languageCodes';\nimport LoginScreen from '../pages/login/loginScreenComponent.vue';\nimport events from './../../app/events';\nimport './../../styles/ckeditor.css';\nvar baitClass = 'pub300x250 pub300x250m pub728x90 text-ad textAd textad textads text-ads text-ad-links';\nvar baitStyle = 'width: 1000px !important; height: 1000px !important; position: absolute !important; left: -10000px !important; top: -1000px !important; display: block !important';\nvar attributes = ['offsetParent', 'offsetHeight', 'offsetLeft', 'offsetTop', 'offsetWidth', 'clientHeight', 'clientWidth'];\n\nvar WebFont = require('webfontloader');\n\nvar log = require('debug')('bi-admin-vue:app:single-page');\n\nexport default {\n  name: 'SinglePageApplication',\n  props: ['rootPanel'],\n  components: {\n    LoginScreen: LoginScreen\n  },\n  computed: _objectSpread({\n    activeLanguageName: function activeLanguageName() {\n      if (!this.availableLanguages[this.$i18n.locale]) {\n        return 'unknown';\n      }\n\n      return this.availableLanguages[this.$i18n.locale].name;\n    },\n    languageItems: function languageItems() {\n      var _this = this;\n\n      var list = [];\n      Object.keys(this.availableLanguages).map(function (langCode) {\n        list.push({\n          value: _this.availableLanguages[langCode].code,\n          text: _this.availableLanguages[langCode].name\n        });\n      });\n      return list;\n    },\n    themes: function themes() {\n      return Themes;\n    }\n  }, mapGetters('user', {\n    isLogged: 'isLogged',\n    userData: 'user'\n  }), mapGetters('settings', {\n    settings: 'settings'\n  }), mapGetters('languages', {\n    availableLanguages: 'availableLanguages'\n  })),\n  data: function data() {\n    return {\n      title: 'Admin panel',\n      fontsReady: false,\n      drawerAlwaysVisible: false,\n      logoutDialogVisible: false,\n      confirmationDialog: false,\n      languageDialog: false,\n      offline: false,\n      showAdblockWarningDialog: false,\n      activeLanguage: this.getActiveLanguageCode(),\n      confirmationMessage: '',\n      notification: {\n        timeout: 5000,\n        color: 'primary',\n        visible: false,\n        text: ''\n      }\n    };\n  },\n  methods: _objectSpread({\n    confirmLogout: function () {\n      var _confirmLogout = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var result;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.confirm('Do you really want to logout?');\n\n              case 2:\n                result = _context.sent;\n\n                if (result) {\n                  this.logoutUser();\n                }\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function confirmLogout() {\n        return _confirmLogout.apply(this, arguments);\n      }\n\n      return confirmLogout;\n    }(),\n    showLanguageDialog: function showLanguageDialog() {\n      this.languageDialog = true;\n    },\n    switchLanguage: function switchLanguage() {\n      this.$i18n.locale = this.activeLanguage;\n      localStorage.setItem('locale', this.$i18n.locale);\n      this.languageDialog = false;\n      window.location.reload(true);\n    },\n    cancelLanguageDialog: function cancelLanguageDialog() {\n      this.languageDialog = false;\n    },\n    getActiveLanguageCode: function getActiveLanguageCode() {\n      log(\"Active language: \".concat(this.$i18n.locale || languageCodes.ENGLISH));\n      return this.$i18n.locale || languageCodes.ENGLISH;\n    },\n    isProductionEnv: function isProductionEnv() {\n      return this.settings.environment === Environment.PRODUCTION;\n    },\n    reload: function reload() {\n      location.reload();\n    },\n    confirmConfirmDialog: function confirmConfirmDialog() {\n      this.$broadcast(events.CONFIRMATION.CLOSE, {\n        result: true\n      });\n      this.confirmationDialog = false;\n    },\n    cancelConfirmDialog: function cancelConfirmDialog() {\n      this.$broadcast(events.CONFIRMATION.CLOSE, {\n        result: false\n      });\n      this.confirmationDialog = false;\n    }\n  }, mapActions('user', {\n    getUser: 'getUser',\n    logout: 'logout'\n  }), {\n    showConfirmation: function showConfirmation(event) {\n      this.confirmationMessage = event.message;\n      this.confirmationDialog = true;\n    }\n  }, mapActions('settings', {\n    getSettings: 'getSettings'\n  }), mapActions('languages', {\n    getLanguages: 'getLanguages'\n  }), {\n    onUserLoggedIn: function onUserLoggedIn() {\n      this.getUser();\n    },\n    onFontsLoaded: function onFontsLoaded() {\n      this.fontsReady = true;\n    },\n    toggleDrawer: function toggleDrawer() {\n      this.appManager.$emit(events.DRAWER.TOGGLE);\n    },\n    makeDrawerAlwaysVisible: function makeDrawerAlwaysVisible(alwaysVisible) {\n      this.drawerAlwaysVisible = alwaysVisible;\n    },\n    closeAdblockWarningDialog: function closeAdblockWarningDialog() {\n      this.showAdblockWarningDialog = false;\n    },\n    checkAttributes: function checkAttributes(attributes, bait) {\n      return attributes.reduce(function (prev, cur) {\n        return prev || (bait[cur] === undefined ? false : !bait[cur]);\n      }, false);\n    },\n    _insertAd: function _insertAd() {\n      var bait = window.document.createElement('div');\n      bait.setAttribute('class', baitClass);\n      bait.setAttribute('style', baitStyle);\n      var insertionPlace = window.document.getElementsByTagName('body')[0];\n      return insertionPlace.appendChild(bait);\n    },\n    checkAdblock: function checkAdblock() {\n      var bait = this._insertAd();\n\n      if (window.document.body.getAttribute('abp') || this.checkAttributes(attributes, bait)) {\n        console.warn('adblock is running!');\n        this.showAdblockWarningDialog = true;\n      }\n    },\n    logoutUser: function () {\n      var _logoutUser = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var result;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.logoutDialogVisible = true;\n                _context2.prev = 1;\n                _context2.next = 4;\n                return this.logout();\n\n              case 4:\n                result = _context2.sent;\n                this.showSuccessNotification('Logout was successful');\n                _context2.next = 11;\n                break;\n\n              case 8:\n                _context2.prev = 8;\n                _context2.t0 = _context2[\"catch\"](1);\n                this.showSuccessNotification('Unable to logout');\n\n              case 11:\n                _context2.prev = 11;\n                this.logoutDialogVisible = false;\n                return _context2.finish(11);\n\n              case 14:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[1, 8, 11, 14]]);\n      }));\n\n      function logoutUser() {\n        return _logoutUser.apply(this, arguments);\n      }\n\n      return logoutUser;\n    }(),\n    showNotification: function showNotification(type, message) {\n      this.notification.color = type;\n      this.notification.text = message;\n      this.notification.visible = true;\n      log('Error:', type, message);\n    },\n    showSuccessNotification: function showSuccessNotification(message, title) {\n      this.showNotification('success', message);\n    },\n    showErrorNotification: function showErrorNotification(message, title) {\n      this.showNotification('error', message);\n    },\n    showWarningNotification: function showWarningNotification(message, title) {\n      this.showNotification('warning', message);\n    }\n  }),\n  beforeDestroy: function beforeDestroy() {\n    this.appManager.$off(Events.SUCCESS, this.showSuccessNotification);\n    this.appManager.$off(Events.ERROR, this.showErrorNotification);\n    this.appManager.$off(Events.WARNING, this.showWarningNotification);\n    this.appManager.$off(Events.DRAWER.ALWAYS_VISIBLE, this.makeDrawerAlwaysVisible);\n    this.appManager.$off(Events.CONFIRMATION.OPEN, this.showConfirmation);\n  },\n  mounted: function () {\n    var _mounted = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3() {\n      var locale, lang, theme;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              this.appManager.$on(Events.SUCCESS, this.showSuccessNotification);\n              this.appManager.$on(Events.ERROR, this.showErrorNotification);\n              this.appManager.$on(Events.WARNING, this.showWarningNotification);\n              this.appManager.$on(Events.DRAWER.ALWAYS_VISIBLE, this.makeDrawerAlwaysVisible);\n              this.appManager.$on(Events.CONFIRMATION.OPEN, this.showConfirmation);\n              WebFont.load({\n                google: {\n                  families: ['Lato', 'Roboto', 'Material Icons']\n                },\n                active: this.onFontsLoaded\n              });\n              log('Initialising user and settings data');\n              _context3.prev = 7;\n              _context3.next = 10;\n              return this.getUser();\n\n            case 10:\n              _context3.next = 18;\n              break;\n\n            case 12:\n              _context3.prev = 12;\n              _context3.t0 = _context3[\"catch\"](7);\n\n              if (!(_context3.t0 && _context3.t0.body && _context3.t0.body.code !== 401)) {\n                _context3.next = 18;\n                break;\n              }\n\n              log('Unable to init app. User info unavailable', _context3.t0);\n              this.offline = true;\n              throw _context3.t0;\n\n            case 18:\n              locale = localStorage.getItem('locale');\n              _context3.prev = 19;\n              _context3.next = 22;\n              return this.getLanguages();\n\n            case 22:\n              if (!(locale && locale !== languageCodes.ENGLISH)) {\n                _context3.next = 38;\n                break;\n              }\n\n              log(\"Got locale \".concat(locale));\n              _context3.prev = 24;\n              _context3.next = 27;\n              return this.$http.get(\"lang/\".concat(locale));\n\n            case 27:\n              lang = _context3.sent;\n              log(\"Language \".concat(locale, \" loaded\"), lang.body);\n\n              if (!(!lang || !lang.body || !lang.body.translations)) {\n                _context3.next = 31;\n                break;\n              }\n\n              throw new Error(\"No translations found in language \".concat(locale, \" request\"));\n\n            case 31:\n              log(\"Got lang \".concat(locale, \" translations\"), lang.body.translations);\n              this.$i18n.setLocaleMessage(locale, lang.body.translations);\n              _context3.next = 38;\n              break;\n\n            case 35:\n              _context3.prev = 35;\n              _context3.t1 = _context3[\"catch\"](24);\n              console.error(\"Unable to load language \".concat(locale, \":\"), _context3.t1);\n\n            case 38:\n              _context3.next = 43;\n              break;\n\n            case 40:\n              _context3.prev = 40;\n              _context3.t2 = _context3[\"catch\"](19);\n              log('Unable to fetch languages. Sticking to english', _context3.t2);\n\n            case 43:\n              log('Available languages: ', this.availableLanguages);\n              _context3.prev = 44;\n              _context3.next = 47;\n              return this.getSettings();\n\n            case 47:\n              if (this.settings && this.settings.adminPanelTitle) {\n                document.title = this.settings.adminPanelTitle;\n                this.title = this.settings.adminPanelTitle;\n              }\n\n              _context3.next = 54;\n              break;\n\n            case 50:\n              _context3.prev = 50;\n              _context3.t3 = _context3[\"catch\"](44);\n              log('Unable to init app. Settings unavailable', _context3.t3);\n              this.offline = true;\n\n            case 54:\n              log(\"Environment: \".concat(this.settings.environment));\n              theme = Themes.BLUE;\n\n              if (this.settings.environment && this.isProductionEnv()) {\n                theme = Themes.RED;\n              }\n\n              if (this.settings.environment && this.settings.environment === Environment.PREPRODUCTION) {\n                theme = Themes.GREEN;\n              }\n\n              if (this.settings.environment && this.settings.environment === Environment.DEVELOPMENT) {\n                theme = Themes.YELLOW;\n              }\n\n              this.$vuetify.theme = theme;\n              log('Language loaded: ', this.$i18n.getLocaleMessage(locale));\n              this.checkAdblock();\n\n            case 62:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, this, [[7, 12], [19, 40], [24, 35], [44, 50]]);\n    }));\n\n    function mounted() {\n      return _mounted.apply(this, arguments);\n    }\n\n    return mounted;\n  }(),\n  created: function created() {\n    this.drawerAlwaysVisible = LocalSettings.get('drawerAlwaysVisible');\n  }\n};",{"version":3,"sources":["SinglePage.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div class=\"wrapper\">\r\n        <template v-if=\"fontsReady && settings\">\r\n            <template v-if=\"isLogged && userData\">\r\n                <slot name=\"panel\"></slot>\r\n                <v-toolbar app :light=\"this.$vuetify.theme.name===themes.YELLOW.name\"\r\n                           :dark=\"this.$vuetify.theme.name!==themes.YELLOW.name\" color=\"primary\">\r\n                    <v-toolbar-side-icon @click=\"toggleDrawer\"></v-toolbar-side-icon>\r\n                    <v-toolbar-title>{{title}}</v-toolbar-title>\r\n                    <v-spacer/>\r\n                    <v-menu v-if=\"isProductionEnv()\" bottom left>\r\n                        <v-btn icon slot=\"activator\" dark>\r\n                            <v-icon color=\"red\">warning</v-icon>\r\n                        </v-btn>\r\n                        <v-list>\r\n                            <v-list-tile>\r\n                                <v-list-tile-content>\r\n                                    <v-list-tile-title>You are on {{this.settings.environment}} environment!\r\n                                    </v-list-tile-title>\r\n                                </v-list-tile-content>\r\n                            </v-list-tile>\r\n                        </v-list>\r\n                    </v-menu>\r\n                    <v-menu bottom left>\r\n                        <v-btn icon slot=\"activator\" dark>\r\n                            <v-icon :color=\"this.$vuetify.theme.name===themes.YELLOW.name?'black':'white'\">more_vert\r\n                            </v-icon>\r\n                        </v-btn>\r\n                        <v-list>\r\n                            <v-list-tile @click=\"confirmLogout\">\r\n                                <v-list-tile-action>\r\n                                    <v-icon :color=\"'black'\">\r\n                                        exit_to_app\r\n                                    </v-icon>\r\n                                </v-list-tile-action>\r\n                                <v-list-tile-content>\r\n                                    <v-list-tile-title>Logout</v-list-tile-title>\r\n                                </v-list-tile-content>\r\n                            </v-list-tile>\r\n                            <v-list-tile v-if=\"availableLanguages && Object.keys(availableLanguages).length > 1\"\r\n                                         @click=\"showLanguageDialog\">\r\n                                <v-list-tile-action>\r\n                                    <v-icon :color=\"'black'\">\r\n                                        translate\r\n                                    </v-icon>\r\n                                </v-list-tile-action>\r\n                                <v-list-tile-content>\r\n                                    <v-list-tile-title>\r\n                                        <v-list-tile-title>Switch language ({{activeLanguageName}})</v-list-tile-title>\r\n                                    </v-list-tile-title>\r\n                                </v-list-tile-content>\r\n                            </v-list-tile>\r\n                        </v-list>\r\n                    </v-menu>\r\n                </v-toolbar>\r\n                <v-content>\r\n                    <v-container fluid class=\"pb-0 pt-0 pl-0 pr-0\" fill-height>\r\n                        <router-view></router-view>\r\n                    </v-container>\r\n                </v-content>\r\n                <v-footer app dark fixed class=\"pa-3\">\r\n                    <v-spacer></v-spacer>\r\n                    <div class=\"grey--text\">&copy; Bohemia Interactive a.s. {{ new Date().getFullYear() }}</div>\r\n                </v-footer>\r\n            </template>\r\n            <template v-if=\"!isLogged || !userData\">\r\n                <LoginScreen @logged-in=\"onUserLoggedIn\"></LoginScreen>\r\n            </template>\r\n        </template>\r\n        <v-dialog :width=\"300\" v-model=\"logoutDialogVisible\">\r\n            <v-card>\r\n                <v-card-title primary-title>\r\n                    <h3 class=\"headline mb-0\">\r\n                        Logging out...\r\n                    </h3>\r\n                </v-card-title>\r\n                <v-card-text>\r\n                    <v-progress-circular indeterminate color=\"primary\" :size=\"40\"/>\r\n                </v-card-text>\r\n            </v-card>\r\n        </v-dialog>\r\n        <v-dialog :width=\"300\" v-model=\"confirmationDialog\" @close=\"cancelConfirmDialog\">\r\n            <v-card>\r\n                <v-card-title primary-title>\r\n                    <h3 class=\"headline mb-0\">\r\n                        Confirmation\r\n                    </h3>\r\n                </v-card-title>\r\n                <v-card-text>\r\n                    {{confirmationMessage}}\r\n                </v-card-text>\r\n                <v-card-actions>\r\n                    <v-btn flat color=\"success\" @click=\"confirmConfirmDialog\">OK</v-btn>\r\n                    <v-btn color=\"error\" @click=\"cancelConfirmDialog\" dark>CANCEL</v-btn>\r\n                </v-card-actions>\r\n            </v-card>\r\n        </v-dialog>\r\n        <v-dialog :width=\"300\" v-model=\"languageDialog\" @close=\"cancelLanguageDialog\">\r\n            <v-card>\r\n                <v-card-title primary-title>\r\n                    <h3 class=\"headline mb-0\">\r\n                        Select language\r\n                    </h3>\r\n                </v-card-title>\r\n                <v-card-text>\r\n                    <v-select :items=\"languageItems\" v-model=\"activeLanguage\"></v-select>\r\n                </v-card-text>\r\n                <v-card-actions class=\"actions\">\r\n                    <v-btn flat color=\"error\" @click=\"cancelLanguageDialog\" dark>Cancel</v-btn>\r\n                    <v-btn primary @click=\"switchLanguage\">Switch language</v-btn>\r\n                </v-card-actions>\r\n            </v-card>\r\n        </v-dialog>\r\n        <v-snackbar\r\n                :timeout=\"notification.timeouot\"\r\n                top\r\n                right\r\n                multi-line\r\n                v-model=\"notification.visible\"\r\n        >\r\n            {{ notification.text }}\r\n            <v-btn flat :color=\"notification.color || 'info'\" @click.native=\"notification.visible = false\">Close</v-btn>\r\n        </v-snackbar>\r\n        <v-container align-center fill-height justify-center v-if=\"offline\" class=\"fill-screen-height\">\r\n            <div style=\"display: flex; flex-direction: column; text-align: center;\">\r\n                <i @click=\"reload\" class=\"material-icons offline-image\">sentiment_very_dissatisfied</i>\r\n                <div class=\"offline-label\">We're offline</div>\r\n                <div>Check console for more detailed error description</div>\r\n            </div>\r\n        </v-container>\r\n        <v-dialog v-model=\"showAdblockWarningDialog\" max-width=\"50%\">\r\n            <v-card>\r\n                <v-toolbar dark color=\"error\">\r\n                    <v-icon>warning</v-icon>\r\n                    <v-toolbar-title>Ads blocker detected</v-toolbar-title>\r\n                    <v-spacer></v-spacer>\r\n                    <v-btn icon dark @click.native=\"closeAdblockWarningDialog\">\r\n                        <v-icon>close</v-icon>\r\n                    </v-btn>\r\n                </v-toolbar>\r\n                <v-card-text>\r\n                    <div class=\"adblock-warning-body\">\r\n                            <h1>Adblock is active</h1>\r\n                            <br/><br/>\r\n                            <p>Please deactivate your adblock on this page <u>permanently</u> to prevent any unexpected\r\n                                behaviour!</p>\r\n                        <br/>\r\n                        <p>\r\n                                <i>(like missing icons, unresponsive dialogs, dummy buttons, etc.)</i>\r\n                            </p>\r\n                    </div>\r\n                </v-card-text>\r\n                <v-card-actions style=\"display: inline-block\">\r\n                    <v-btn flat @click=\"closeAdblockWarningDialog\">Close</v-btn>\r\n                </v-card-actions>\r\n            </v-card>\r\n        </v-dialog>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import {mapActions, mapGetters} from 'vuex';\r\n    import Events from '../../app/events';\r\n    import LocalSettings from '../../app/localSettings';\r\n    import Themes from '../../app/theme';\r\n    import Environment from '../../const/env';\r\n    import languageCodes from '../../const/languageCodes';\r\n    import LoginScreen from '../pages/login/loginScreenComponent.vue'\r\n    import events from './../../app/events';\r\n    import './../../styles/ckeditor.css';\r\n\r\n    const baitClass = 'pub300x250 pub300x250m pub728x90 text-ad textAd textad textads text-ads text-ad-links';\r\n    const baitStyle = 'width: 1000px !important; height: 1000px !important; position: absolute !important; left: -10000px !important; top: -1000px !important; display: block !important';\r\n    const attributes = ['offsetParent', 'offsetHeight', 'offsetLeft', 'offsetTop', 'offsetWidth', 'clientHeight', 'clientWidth'];\r\n\r\n    var WebFont = require('webfontloader');\r\n\r\n    const log = require('debug')('bi-admin-vue:app:single-page');\r\n\r\n    export default {\r\n        name      : 'SinglePageApplication',\r\n        props     : ['rootPanel'],\r\n        components: {\r\n            LoginScreen,\r\n        },\r\n        computed  : {\r\n            activeLanguageName() {\r\n                if (!this.availableLanguages[this.$i18n.locale]) {\r\n                    return 'unknown';\r\n                }\r\n                return this.availableLanguages[this.$i18n.locale].name;\r\n            },\r\n            languageItems() {\r\n                let list = [];\r\n                Object.keys(this.availableLanguages).map((langCode) => {\r\n                    list.push({\r\n                        value: this.availableLanguages[langCode].code,\r\n                        text : this.availableLanguages[langCode].name\r\n                    });\r\n                });\r\n                return list;\r\n            },\r\n            themes() {\r\n                return Themes\r\n            },\r\n            ...mapGetters('user', {\r\n                isLogged: 'isLogged',\r\n                userData: 'user',\r\n            }),\r\n            ...mapGetters('settings', {\r\n                settings: 'settings'\r\n            }),\r\n            ...mapGetters('languages', {\r\n                availableLanguages: 'availableLanguages'\r\n            })\r\n\r\n        },\r\n        data() {\r\n            return {\r\n                title                   : 'Admin panel',\r\n                fontsReady              : false,\r\n                drawerAlwaysVisible     : false,\r\n                logoutDialogVisible     : false,\r\n                confirmationDialog      : false,\r\n                languageDialog          : false,\r\n                offline                 : false,\r\n                showAdblockWarningDialog: false,\r\n                activeLanguage          : this.getActiveLanguageCode(),\r\n                confirmationMessage     : '',\r\n                notification            : {\r\n                    timeout: 5000,\r\n                    color  : 'primary',\r\n                    visible: false,\r\n                    text   : ''\r\n                }\r\n            }\r\n        },\r\n        methods   : {\r\n            async confirmLogout() {\r\n                let result = await this.confirm('Do you really want to logout?')\r\n                if (result) {\r\n                    this.logoutUser();\r\n                }\r\n            },\r\n            showLanguageDialog() {\r\n                this.languageDialog = true;\r\n            },\r\n            switchLanguage() {\r\n                this.$i18n.locale = this.activeLanguage;\r\n                localStorage.setItem('locale', this.$i18n.locale);\r\n                this.languageDialog = false;\r\n                window.location.reload(true);\r\n            },\r\n            cancelLanguageDialog() {\r\n                this.languageDialog = false;\r\n            },\r\n            getActiveLanguageCode() {\r\n                log(`Active language: ${this.$i18n.locale || languageCodes.ENGLISH}`);\r\n                return this.$i18n.locale || languageCodes.ENGLISH;\r\n            },\r\n            isProductionEnv() {\r\n                return this.settings.environment === Environment.PRODUCTION;\r\n            },\r\n            reload() {\r\n                location.reload();\r\n            },\r\n            confirmConfirmDialog() {\r\n                this.$broadcast(events.CONFIRMATION.CLOSE, {result: true});\r\n                this.confirmationDialog = false;\r\n            },\r\n            cancelConfirmDialog() {\r\n                this.$broadcast(events.CONFIRMATION.CLOSE, {result: false});\r\n                this.confirmationDialog = false;\r\n            },\r\n            ...mapActions('user', {\r\n                getUser: 'getUser',\r\n                logout : 'logout'\r\n            }),\r\n            showConfirmation(event) {\r\n                this.confirmationMessage = event.message;\r\n                this.confirmationDialog = true;\r\n            },\r\n            ...mapActions('settings', {\r\n                getSettings: 'getSettings'\r\n            }),\r\n            ...mapActions('languages', {\r\n                getLanguages: 'getLanguages'\r\n            }),\r\n            onUserLoggedIn() {\r\n                this.getUser();\r\n            },\r\n            onFontsLoaded() {\r\n                this.fontsReady = true;\r\n            },\r\n            toggleDrawer() {\r\n                this.appManager.$emit(events.DRAWER.TOGGLE);\r\n            },\r\n            makeDrawerAlwaysVisible(alwaysVisible) {\r\n                this.drawerAlwaysVisible = alwaysVisible;\r\n            },\r\n            closeAdblockWarningDialog() {\r\n                this.showAdblockWarningDialog = false;\r\n            },\r\n            checkAttributes(attributes, bait) {\r\n                return attributes.reduce((prev, cur) => prev || ((bait[cur] === undefined) ? false : !bait[cur]),\r\n                    false);\r\n            },\r\n            _insertAd() {\r\n                const bait = window.document.createElement('div');\r\n                bait.setAttribute('class', baitClass);\r\n                bait.setAttribute('style', baitStyle);\r\n                const insertionPlace = window.document.getElementsByTagName('body')[0];\r\n                return insertionPlace.appendChild(bait);\r\n            },\r\n            checkAdblock() {\r\n                let bait = this._insertAd();\r\n                if (window.document.body.getAttribute('abp') || this.checkAttributes(attributes, bait)) {\r\n                    console.warn('adblock is running!');\r\n                    this.showAdblockWarningDialog = true;\r\n                }\r\n            },\r\n            async logoutUser() {\r\n                this.logoutDialogVisible = true;\r\n\r\n                try {\r\n                    let result = await this.logout();\r\n                    this.showSuccessNotification('Logout was successful');\r\n                } catch (e) {\r\n                    this.showSuccessNotification('Unable to logout');\r\n                } finally {\r\n                    this.logoutDialogVisible = false;\r\n                }\r\n            },\r\n            showNotification(type, message) {\r\n                this.notification.color = type;\r\n                this.notification.text = message;\r\n                this.notification.visible = true;\r\n                log('Error:', type, message);\r\n            },\r\n            showSuccessNotification(message, title) {\r\n                this.showNotification('success', message);\r\n            },\r\n            showErrorNotification(message, title) {\r\n                this.showNotification('error', message);\r\n            },\r\n            showWarningNotification(message, title) {\r\n                this.showNotification('warning', message);\r\n            }\r\n        },\r\n        beforeDestroy() {\r\n            this.appManager.$off(Events.SUCCESS, this.showSuccessNotification);\r\n            this.appManager.$off(Events.ERROR, this.showErrorNotification);\r\n            this.appManager.$off(Events.WARNING, this.showWarningNotification);\r\n            this.appManager.$off(Events.DRAWER.ALWAYS_VISIBLE, this.makeDrawerAlwaysVisible);\r\n            this.appManager.$off(Events.CONFIRMATION.OPEN, this.showConfirmation);\r\n        },\r\n        async mounted() {\r\n            this.appManager.$on(Events.SUCCESS, this.showSuccessNotification);\r\n            this.appManager.$on(Events.ERROR, this.showErrorNotification);\r\n            this.appManager.$on(Events.WARNING, this.showWarningNotification);\r\n            this.appManager.$on(Events.DRAWER.ALWAYS_VISIBLE, this.makeDrawerAlwaysVisible);\r\n            this.appManager.$on(Events.CONFIRMATION.OPEN, this.showConfirmation);\r\n\r\n            WebFont.load({\r\n                google: {\r\n                    families: ['Lato', 'Roboto', 'Material Icons']\r\n                },\r\n                active: this.onFontsLoaded\r\n            });\r\n\r\n            log('Initialising user and settings data');\r\n            try {\r\n                await this.getUser();\r\n            } catch (e) {\r\n                if (e && e.body && e.body.code !== 401) {\r\n                    log('Unable to init app. User info unavailable', e);\r\n                    this.offline = true;\r\n                    throw e;\r\n                }\r\n            }\r\n\r\n            let locale = localStorage.getItem('locale');\r\n            try {\r\n                await this.getLanguages();\r\n                if (locale && locale !== languageCodes.ENGLISH) {\r\n                    log(`Got locale ${locale}`);\r\n                    try {\r\n                        let lang = await this.$http.get(`lang/${locale}`);\r\n                        log(`Language ${locale} loaded`, lang.body);\r\n                        if (!lang || !lang.body || !lang.body.translations) {\r\n                            throw new Error(`No translations found in language ${locale} request`)\r\n                        }\r\n                        log(`Got lang ${locale} translations`, lang.body.translations);\r\n                        this.$i18n.setLocaleMessage(locale, lang.body.translations);\r\n                    } catch (e) {\r\n                        console.error(`Unable to load language ${locale}:`, e);\r\n                    }\r\n                }\r\n            } catch (e) {\r\n                log('Unable to fetch languages. Sticking to english', e);\r\n            }\r\n            log('Available languages: ', this.availableLanguages);\r\n\r\n            try {\r\n                await this.getSettings();\r\n                if (this.settings && this.settings.adminPanelTitle) {\r\n                    document.title = this.settings.adminPanelTitle;\r\n                    this.title = this.settings.adminPanelTitle;\r\n                }\r\n            } catch (e) {\r\n                log('Unable to init app. Settings unavailable', e);\r\n                this.offline = true;\r\n            }\r\n            log(`Environment: ${this.settings.environment}`);\r\n            let theme = Themes.BLUE;\r\n            if (this.settings.environment && this.isProductionEnv()) {\r\n                theme = Themes.RED;\r\n            }\r\n            if (this.settings.environment && this.settings.environment === Environment.PREPRODUCTION) {\r\n                theme = Themes.GREEN;\r\n            }\r\n            if (this.settings.environment && this.settings.environment === Environment.DEVELOPMENT) {\r\n                theme = Themes.YELLOW;\r\n            }\r\n            this.$vuetify.theme = theme;\r\n            log('Language loaded: ', this.$i18n.getLocaleMessage(locale));\r\n            this.checkAdblock()\r\n        },\r\n        created() {\r\n            this.drawerAlwaysVisible = LocalSettings.get('drawerAlwaysVisible');\r\n        }\r\n    }\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n    .actions {\r\n        justify-content: space-between;\r\n    }\r\n\r\n    .wrapper {\r\n        width: 100%;\r\n        min-height: 100vh;\r\n    }\r\n\r\n    .fade-enter-active, .fade-leave-active {\r\n        transition-property: opacity;\r\n        transition-duration: .25s;\r\n    }\r\n\r\n    .fade-enter-active {\r\n        transition-delay: .25s;\r\n    }\r\n\r\n    .fade-enter, .fade-leave-active {\r\n        opacity: 0\r\n    }\r\n\r\n    .fill-screen-height {\r\n        height: 100vh;\r\n    }\r\n\r\n    .offline-image {\r\n        font-size: 30em;\r\n        opacity: .5;\r\n    }\r\n\r\n    .offline-label {\r\n        font-size: 2em;\r\n        opacity: .7;\r\n    }\r\n\r\n    .adblock-warning-body {\r\n        display: flex;\r\n        align-items: center;\r\n        flex-direction: column;\r\n\r\n    }\r\n</style>\r\n"],"sourceRoot":"src/components/application"}]}