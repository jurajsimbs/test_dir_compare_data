{"remainingRequest":"C:\\work\\bi-admin-vue-new\\node_modules\\thread-loader\\dist\\cjs.js!C:\\work\\bi-admin-vue-new\\node_modules\\babel-loader\\lib\\index.js!C:\\work\\bi-admin-vue-new\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\work\\bi-admin-vue-new\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\work\\bi-admin-vue-new\\src\\components\\editor\\monaco\\Monaco.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\work\\bi-admin-vue-new\\src\\components\\editor\\monaco\\Monaco.vue","mtime":1552754725229},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _parseInt from \"C:\\\\work\\\\bi-admin-vue-new\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/parse-int\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _Object$assign from \"C:\\\\work\\\\bi-admin-vue-new\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/object/assign\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n\n/**\n * copied from some hellish git - but for now it works (with latest version of monaco\n * UMD version is fucked up for now - loader does not work with webpack 3 (only with v.4)\n */\nimport monacoLoader from './MonacoLoader';\nexport default {\n  props: {\n    width: {\n      type: [String, Number],\n      default: '100%'\n    },\n    height: {\n      type: [String, Number],\n      default: '100%'\n    },\n    code: {\n      type: String,\n      default: '// code \\n'\n    },\n    srcPath: {\n      type: String\n    },\n    language: {\n      type: String,\n      default: 'javascript'\n    },\n    theme: {\n      type: String,\n      default: 'vs-dark'\n    },\n    // vs, hc-black\n    options: {\n      type: Object,\n      default: function _default() {}\n    },\n    highlighted: {\n      type: Array,\n      default: function _default() {\n        return [{\n          number: 0,\n          class: ''\n        }];\n      }\n    },\n    changeThrottle: {\n      type: Number,\n      default: 100\n    }\n  },\n  mounted: function mounted() {\n    this.fetchEditor();\n  },\n  destroyed: function destroyed() {\n    this.destroyMonaco();\n  },\n  computed: {\n    style: function style() {\n      var width = this.width,\n          height = this.height;\n      var fixedWidth = width.toString().indexOf('%') !== -1 ? width : \"\".concat(width, \"px\");\n      var fixedHeight = height.toString().indexOf('%') !== -1 ? height : \"\".concat(height, \"px\");\n      return {\n        width: fixedWidth,\n        height: fixedHeight\n      };\n    },\n    editorOptions: function editorOptions() {\n      return _Object$assign({}, this.defaults, this.options, {\n        value: this.code,\n        language: this.language,\n        theme: this.theme\n      });\n    }\n  },\n  data: function data() {\n    return {\n      defaults: {\n        selectOnLineNumbers: true,\n        roundedSelection: false,\n        readOnly: false,\n        cursorStyle: 'line',\n        automaticLayout: false,\n        glyphMargin: true\n      }\n    };\n  },\n  watch: {\n    highlighted: {\n      handler: function handler(lines) {\n        this.highlightLines(lines);\n      },\n      deep: true\n    }\n  },\n  methods: {\n    debounce: function debounce(func, wait, immediate) {\n      var timeout;\n      return function () {\n        var context = this,\n            args = arguments;\n\n        var later = function later() {\n          timeout = null;\n          if (!immediate) func.apply(context, args);\n        };\n\n        var callNow = immediate && !timeout;\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n        if (callNow) func.apply(context, args);\n      };\n    },\n    highlightLines: function highlightLines(lines) {\n      var _this = this;\n\n      if (!this.editor) {\n        return;\n      }\n\n      lines.forEach(function (line) {\n        var className = line.class;\n\n        var highlighted = _this.$el.querySelector(\".\".concat(className));\n\n        if (highlighted) {\n          highlighted.classList.remove(className);\n        }\n\n        var number = _parseInt(line.number);\n\n        if (!_this.editor && number < 1 || isNaN(number)) {\n          return;\n        }\n\n        var selectedLine = _this.$el.querySelector(\".view-lines [linenumber=\\\"\".concat(number, \"\\\"]\"));\n\n        if (selectedLine) {\n          selectedLine.classList.add(className);\n        }\n      });\n    },\n    editorHasLoaded: function editorHasLoaded(editor, monaco) {\n      var _this2 = this;\n\n      this.editor = editor;\n      this.monaco = monaco;\n      this.editor.onDidChangeModelContent(function (event) {\n        return _this2.codeChangeHandler(editor, event);\n      });\n      this.$emit('mounted', editor);\n    },\n    codeChangeHandler: function codeChangeHandler(editor) {\n      if (this.codeChangeEmitter) {\n        this.codeChangeEmitter(editor);\n      } else {\n        this.codeChangeEmitter = this.debounce(function (editor) {\n          this.$emit('codeChange', editor);\n        }, this.changeThrottle);\n        this.codeChangeEmitter(editor);\n      }\n    },\n    fetchEditor: function fetchEditor() {\n      monacoLoader.load(this.srcPath, this.createMonaco);\n    },\n    createMonaco: function createMonaco() {\n      this.editor = window.monaco.editor.create(this.$el, this.editorOptions);\n      this.editorHasLoaded(this.editor, window.monaco);\n      this.$emit('loaded', this.editor);\n    },\n    destroyMonaco: function destroyMonaco() {\n      if (typeof this.editor !== 'undefined') {\n        this.editor.dispose();\n      }\n    }\n  }\n};",{"version":3,"sources":["Monaco.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div :style=\"style\"></div>\r\n</template>\r\n\r\n<script>\r\n    /**\r\n     * copied from some hellish git - but for now it works (with latest version of monaco\r\n     * UMD version is fucked up for now - loader does not work with webpack 3 (only with v.4)\r\n     */\r\n    import monacoLoader from './MonacoLoader';\r\n\r\n    export default {\r\n        props:    {\r\n            width:          {type: [String, Number], default: '100%'},\r\n            height:         {type: [String, Number], default: '100%'},\r\n            code:           {type: String, default: '// code \\n'},\r\n            srcPath:        {type: String},\r\n            language:       {type: String, default: 'javascript'},\r\n            theme:          {type: String, default: 'vs-dark'}, // vs, hc-black\r\n            options:        {\r\n                type: Object, default: () => {\r\n                }\r\n            },\r\n            highlighted:    {\r\n                type: Array, default: () => [{\r\n                    number: 0,\r\n                    class:  ''\r\n                }]\r\n            },\r\n            changeThrottle: {type: Number, default: 100}\r\n        },\r\n        mounted() {\r\n            this.fetchEditor();\r\n        },\r\n        destroyed() {\r\n            this.destroyMonaco();\r\n        },\r\n        computed: {\r\n            style() {\r\n                const {width, height} = this;\r\n                const fixedWidth      = width.toString().indexOf('%') !== -1 ? width : `${width}px`;\r\n                const fixedHeight     = height.toString().indexOf('%') !== -1 ? height : `${height}px`;\r\n                return {\r\n                    width:  fixedWidth,\r\n                    height: fixedHeight,\r\n                };\r\n            },\r\n            editorOptions() {\r\n                return Object.assign({}, this.defaults, this.options, {\r\n                    value:    this.code,\r\n                    language: this.language,\r\n                    theme:    this.theme\r\n                });\r\n            }\r\n        },\r\n        data() {\r\n            return {\r\n                defaults: {\r\n                    selectOnLineNumbers: true,\r\n                    roundedSelection:    false,\r\n                    readOnly:            false,\r\n                    cursorStyle:         'line',\r\n                    automaticLayout:     false,\r\n                    glyphMargin:         true\r\n                }\r\n            }\r\n        },\r\n        watch:    {\r\n            highlighted: {\r\n                handler(lines) {\r\n                    this.highlightLines(lines);\r\n                },\r\n                deep: true\r\n            }\r\n        },\r\n        methods:  {\r\n            debounce(func, wait, immediate) {\r\n                var timeout;\r\n                return function () {\r\n                    var context = this, args = arguments;\r\n                    var later   = function () {\r\n                        timeout = null;\r\n                        if (!immediate) func.apply(context, args);\r\n                    };\r\n                    var callNow = immediate && !timeout;\r\n                    clearTimeout(timeout);\r\n                    timeout = setTimeout(later, wait);\r\n                    if (callNow) func.apply(context, args);\r\n                };\r\n            },\r\n            highlightLines(lines) {\r\n                if (!this.editor) {\r\n                    return;\r\n                }\r\n                lines.forEach((line) => {\r\n                    const className   = line.class;\r\n                    const highlighted = this.$el.querySelector(`.${className}`);\r\n\r\n                    if (highlighted) {\r\n                        highlighted.classList.remove(className);\r\n                    }\r\n\r\n                    const number = parseInt(line.number);\r\n                    if (!this.editor && number < 1 || isNaN(number)) {\r\n                        return;\r\n                    }\r\n\r\n                    const selectedLine = this.$el.querySelector(`.view-lines [linenumber=\"${number}\"]`);\r\n                    if (selectedLine) {\r\n                        selectedLine.classList.add(className);\r\n                    }\r\n                });\r\n            }\r\n            ,\r\n            editorHasLoaded(editor, monaco) {\r\n                this.editor = editor;\r\n                this.monaco = monaco;\r\n                this.editor.onDidChangeModelContent(event =>\r\n                    this.codeChangeHandler(editor, event)\r\n                );\r\n                this.$emit('mounted', editor);\r\n            }\r\n            ,\r\n            codeChangeHandler: function (editor) {\r\n\r\n                if (this.codeChangeEmitter) {\r\n                    this.codeChangeEmitter(editor);\r\n                } else {\r\n                    this.codeChangeEmitter = this.debounce(\r\n                        function (editor) {\r\n                            this.$emit('codeChange', editor);\r\n                        },\r\n                        this.changeThrottle\r\n                    );\r\n                    this.codeChangeEmitter(editor);\r\n                }\r\n            }\r\n            ,\r\n            fetchEditor() {\r\n                monacoLoader.load(this.srcPath, this.createMonaco);\r\n            }\r\n            ,\r\n            createMonaco() {\r\n                this.editor = window.monaco.editor.create(this.$el, this.editorOptions);\r\n                this.editorHasLoaded(this.editor, window.monaco);\r\n                this.$emit('loaded', this.editor);\r\n            }\r\n            ,\r\n            destroyMonaco() {\r\n                if (typeof this.editor !== 'undefined') {\r\n                    this.editor.dispose();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    ;\r\n</script>\r\n"],"sourceRoot":"src/components/editor/monaco"}]}