{"remainingRequest":"C:\\work\\bi-admin-vue-new\\node_modules\\thread-loader\\dist\\cjs.js!C:\\work\\bi-admin-vue-new\\node_modules\\babel-loader\\lib\\index.js!C:\\work\\bi-admin-vue-new\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\work\\bi-admin-vue-new\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\work\\bi-admin-vue-new\\src\\components\\table\\rowActionWidget\\moveItem.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\work\\bi-admin-vue-new\\src\\components\\table\\rowActionWidget\\moveItem.vue","mtime":1552754725267},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"C:\\\\work\\\\bi-admin-vue-new\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport debug from 'debug';\nimport Events from './../../../app/events';\nvar log = debug('bi-admin-vue:table:column-widget:moveItem');\nexport default {\n  components: {},\n  name: 'SimpleTableMoveItemRowActionWidget',\n  data: function data() {\n    return {\n      moveTo: null,\n      dialogVisible: false,\n      processing: false\n    };\n  },\n  methods: {\n    move: function () {\n      var _move = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.processing = true;\n                _context.prev = 1;\n                log(\"Moving item \".concat(this.row.id, \" to position \").concat(this.moveTo));\n                _context.next = 5;\n                return this.onMoveItemRequested(this.row, this.moveTo);\n\n              case 5:\n                this.appManager.$emit(Events.SUCCESS, 'Item moved');\n                this.dialogVisible = false;\n                _context.next = 13;\n                break;\n\n              case 9:\n                _context.prev = 9;\n                _context.t0 = _context[\"catch\"](1);\n                this.appManager.$emit(Events.ERROR, 'Unable to move item');\n                log('Unable to move item', _context.t0);\n\n              case 13:\n                _context.prev = 13;\n                this.processing = false;\n                return _context.finish(13);\n\n              case 16:\n                _context.next = 18;\n                return this.controller.loadData();\n\n              case 18:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[1, 9, 13, 16]]);\n      }));\n\n      function move() {\n        return _move.apply(this, arguments);\n      }\n\n      return move;\n    }(),\n    openMoveDialog: function openMoveDialog() {\n      this.dialogVisible = true;\n    },\n    closeDialog: function closeDialog() {\n      this.dialogVisible = false;\n    }\n  },\n  props: {\n    controller: {\n      type: Object,\n      default: function _default() {\n        configuration: {}\n      }\n    },\n    onMoveItemRequested: {\n      type: Function,\n      default: function _default() {\n        return function (value) {\n          log('Warning: move item widget does not have onMoveItemRequested prop defined!');\n        };\n      }\n    },\n    fieldName: {\n      type: String,\n      default: 'position'\n    },\n    row: {\n      type: Object,\n      default: function _default() {}\n    }\n  }\n};",{"version":3,"sources":["moveItem.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,MAAA,MAAA,uBAAA;AAEA,IAAA,GAAA,GAAA,KAAA,CAAA,2CAAA,CAAA;AACA,eAAA;AACA,EAAA,UAAA,EAAA,EADA;AAEA,EAAA,IAAA,EAAA,oCAFA;AAGA,EAAA,IAHA,kBAGA;AACA,WAAA;AACA,MAAA,MAAA,EAAA,IADA;AAEA,MAAA,aAAA,EAAA,KAFA;AAGA,MAAA,UAAA,EAAA;AAHA,KAAA;AAKA,GATA;AAUA,EAAA,OAAA,EAAA;AACA,IAAA,IADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,qBAAA,UAAA,GAAA,IAAA;AAFA;AAIA,gBAAA,GAAA,uBAAA,KAAA,GAAA,CAAA,EAAA,0BAAA,KAAA,MAAA,EAAA;AAJA;AAAA,uBAKA,KAAA,mBAAA,CAAA,KAAA,GAAA,EAAA,KAAA,MAAA,CALA;;AAAA;AAOA,qBAAA,UAAA,CAAA,KAAA,CAAA,MAAA,CAAA,OAAA,EAAA,YAAA;AAEA,qBAAA,aAAA,GAAA,KAAA;AATA;AAAA;;AAAA;AAAA;AAAA;AAYA,qBAAA,UAAA,CAAA,KAAA,CAAA,MAAA,CAAA,KAAA,EAAA,qBAAA;AAEA,gBAAA,GAAA,CAAA,qBAAA,cAAA;;AAdA;AAAA;AAgBA,qBAAA,UAAA,GAAA,KAAA;AAhBA;;AAAA;AAAA;AAAA,uBAkBA,KAAA,UAAA,CAAA,QAAA,EAlBA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAoBA,IAAA,cApBA,4BAoBA;AACA,WAAA,aAAA,GAAA,IAAA;AACA,KAtBA;AAuBA,IAAA,WAvBA,yBAuBA;AACA,WAAA,aAAA,GAAA,KAAA;AACA;AAzBA,GAVA;AAqCA,EAAA,KAAA,EAAA;AACA,IAAA,UAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA,oBAAA;AACA,QAAA,aAAA,EAAA,CACA;AACA;AALA,KADA;AAQA,IAAA,mBAAA,EAAA;AACA,MAAA,IAAA,EAAA,QADA;AAEA,MAAA,OAAA,EAAA,oBAAA;AACA,eAAA,UAAA,KAAA,EAAA;AACA,UAAA,GAAA,CAAA,2EAAA,CAAA;AACA,SAFA;AAGA;AANA,KARA;AAgBA,IAAA,SAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAhBA;AAoBA,IAAA,GAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA,oBAAA,CACA;AAHA;AApBA;AArCA,CAAA","sourcesContent":["<template>\r\n    <div v-if=\"row\">\r\n        <v-btn\r\n                @click=\"openMoveDialog\"\r\n                color=\"primary\"\r\n        >\r\n            Move item to position\r\n            <v-icon right dark>reorder</v-icon>\r\n        </v-btn>\r\n        <v-dialog :open=\"dialogVisible\" title=\"Move item\" @close=\"closeDialog\">\r\n            <v-card>\r\n                <v-card-text>\r\n                    <v-text-field type=\"number\" v-model=\"moveTo\" label=\"Move to position [1-count]\" labelFloat fullWidth/>\r\n                </v-card-text>\r\n                <v-card-actions>\r\n                    <v-btn flat\r\n                           @click=\"closeDialog\"\r\n                           :disabled=\"processing\"\r\n                           color=\"primary\"\r\n                    >\r\n                        Cancel\r\n                    </v-btn>\r\n                    <v-btn\r\n                            :loading=\"processing\"\r\n                            @click=\"move\"\r\n                            :disabled=\"processing\"\r\n                            color=\"primary\"\r\n                    >\r\n                        Move\r\n                    </v-btn>\r\n                </v-card-actions>\r\n            </v-card>\r\n        </v-dialog>\r\n    </div>\r\n</template>\r\n<script>\r\n    import debug from 'debug';\r\n    import Events from './../../../app/events';\r\n\r\n    const log = debug('bi-admin-vue:table:column-widget:moveItem');\r\n    export default {\r\n        components: {},\r\n        name      : 'SimpleTableMoveItemRowActionWidget',\r\n        data() {\r\n            return {\r\n                moveTo       : null,\r\n                dialogVisible: false,\r\n                processing   : false\r\n            }\r\n        },\r\n        methods   : {\r\n            async move() {\r\n                this.processing = true;\r\n                try {\r\n                    log(`Moving item ${this.row.id} to position ${this.moveTo}`);\r\n                    await this.onMoveItemRequested(this.row, this.moveTo);\r\n\r\n                    this.appManager.$emit(Events.SUCCESS, 'Item moved');\r\n\r\n                    this.dialogVisible = false;\r\n                } catch (e) {\r\n\r\n                    this.appManager.$emit(Events.ERROR, 'Unable to move item');\r\n\r\n                    log('Unable to move item', e);\r\n                } finally {\r\n                    this.processing = false;\r\n                }\r\n                await this.controller.loadData();\r\n            },\r\n            openMoveDialog() {\r\n                this.dialogVisible = true;\r\n            },\r\n            closeDialog() {\r\n                this.dialogVisible = false;\r\n            }\r\n        },\r\n        props     : {\r\n            controller         : {\r\n                type   : Object,\r\n                default: () => {\r\n                    configuration: {\r\n                    }\r\n                }\r\n            },\r\n            onMoveItemRequested: {\r\n                type   : Function,\r\n                default: () => {\r\n                    return (value) => {\r\n                        log('Warning: move item widget does not have onMoveItemRequested prop defined!');\r\n                    }\r\n                }\r\n            },\r\n            fieldName          : {\r\n                type   : String,\r\n                default: 'position'\r\n            },\r\n            row                : {\r\n                type   : Object,\r\n                default: () => {\r\n                }\r\n            }\r\n        }\r\n    }\r\n</script>"],"sourceRoot":"src/components/table/rowActionWidget"}]}