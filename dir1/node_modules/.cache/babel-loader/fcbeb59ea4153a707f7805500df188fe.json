{"remainingRequest":"C:\\work\\bi-admin-vue-new\\node_modules\\thread-loader\\dist\\cjs.js!C:\\work\\bi-admin-vue-new\\node_modules\\babel-loader\\lib\\index.js!C:\\work\\bi-admin-vue-new\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\work\\bi-admin-vue-new\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\work\\bi-admin-vue-new\\src\\components\\table\\rowActionWidget\\publish.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\work\\bi-admin-vue-new\\src\\components\\table\\rowActionWidget\\publish.vue","mtime":1552754725268},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _Promise from \"C:\\\\work\\\\bi-admin-vue-new\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/promise\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\work\\\\bi-admin-vue-new\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport debug from 'debug';\nimport Events from './../../../app/events';\nvar log = debug('bi-admin-vue:table:column-widget:publish');\nexport default {\n  name: 'SimpleTablePublishRowActionWidget',\n  data: function data() {\n    return {\n      menuVisible: false,\n      publishing: false,\n      unpublishing: false\n    };\n  },\n  methods: {\n    publish: function () {\n      var _publish = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(value) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.menuVisible = false;\n\n                if (value) {\n                  this.publishing = true;\n                } else {\n                  this.unpublishing = true;\n                }\n\n                _context.prev = 2;\n                _context.next = 5;\n                return this.onVisibilityChange(this.row, value);\n\n              case 5:\n                this.appManager.$emit(Events.SUCCESS, 'Visibility status changed');\n                _context.next = 12;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](2);\n                this.appManager.$emit(Events.ERROR, 'Unable to change visibility status');\n                log('Unable to change visibility status', _context.t0);\n\n              case 12:\n                _context.prev = 12;\n                this.publishing = false;\n                this.unpublishing = false;\n                return _context.finish(12);\n\n              case 16:\n                _context.next = 18;\n                return this.controller.loadData();\n\n              case 18:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[2, 8, 12, 16]]);\n      }));\n\n      function publish(_x) {\n        return _publish.apply(this, arguments);\n      }\n\n      return publish;\n    }()\n  },\n  props: {\n    controller: {\n      type: Object,\n      default: function _default() {\n        configuration: {}\n      }\n    },\n    onVisibilityChange: {\n      type: Function,\n      default: function _default() {\n        log('Warning: publish widget does not have onVisibilityChange prop defined!');\n        return function () {\n          return _Promise.reject();\n        };\n      }\n    },\n    fieldName: {\n      type: String,\n      default: 'published'\n    },\n    row: {\n      type: Object,\n      default: function _default() {}\n    }\n  }\n};",{"version":3,"sources":["publish.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,MAAA,MAAA,uBAAA;AAEA,IAAA,GAAA,GAAA,KAAA,CAAA,0CAAA,CAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,mCADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,WAAA,EAAA,KADA;AAEA,MAAA,UAAA,EAAA,KAFA;AAGA,MAAA,YAAA,EAAA;AAHA,KAAA;AAKA,GARA;AASA,EAAA,OAAA,EAAA;AACA,IAAA,OADA;AAAA;AAAA;AAAA,+CACA,KADA;AAAA;AAAA;AAAA;AAAA;AAEA,qBAAA,WAAA,GAAA,KAAA;;AAEA,oBAAA,KAAA,EAAA;AACA,uBAAA,UAAA,GAAA,IAAA;AACA,iBAFA,MAEA;AACA,uBAAA,YAAA,GAAA,IAAA;AACA;;AARA;AAAA;AAAA,uBAWA,KAAA,kBAAA,CAAA,KAAA,GAAA,EAAA,KAAA,CAXA;;AAAA;AAYA,qBAAA,UAAA,CAAA,KAAA,CAAA,MAAA,CAAA,OAAA,EAAA,2BAAA;AAZA;AAAA;;AAAA;AAAA;AAAA;AAcA,qBAAA,UAAA,CAAA,KAAA,CAAA,MAAA,CAAA,KAAA,EAAA,oCAAA;AACA,gBAAA,GAAA,CAAA,oCAAA,cAAA;;AAfA;AAAA;AAiBA,qBAAA,UAAA,GAAA,KAAA;AACA,qBAAA,YAAA,GAAA,KAAA;AAlBA;;AAAA;AAAA;AAAA,uBAoBA,KAAA,UAAA,CAAA,QAAA,EApBA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,GATA;AAgCA,EAAA,KAAA,EAAA;AACA,IAAA,UAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA,oBAAA;AACA,QAAA,aAAA,EAAA,CACA;AACA;AALA,KADA;AAQA,IAAA,kBAAA,EAAA;AACA,MAAA,IAAA,EAAA,QADA;AAEA,MAAA,OAAA,EAAA,oBAAA;AACA,QAAA,GAAA,CAAA,wEAAA,CAAA;AACA,eAAA,YAAA;AACA,iBAAA,SAAA,MAAA,EAAA;AACA,SAFA;AAGA;AAPA,KARA;AAiBA,IAAA,SAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAjBA;AAqBA,IAAA,GAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA,oBAAA,CACA;AAHA;AArBA;AAhCA,CAAA","sourcesContent":["<template>\r\n    <div v-if=\"row\">\r\n        <v-menu bottom left :close-on-content-click=\"false\">\r\n            <v-btn icon slot=\"activator\">\r\n                <v-icon>{{row[fieldName]?'visibility':'visibility_off'}}</v-icon>\r\n            </v-btn>\r\n            <v-list>\r\n                <v-list-tile>\r\n                    <v-btn\r\n                            :loading=\"publishing\"\r\n                            @click=\"publish(true)\"\r\n                            :disabled=\"publishing || unpublishing\"\r\n                            flat\r\n                    >\r\n                        Published\r\n                        <v-icon right dark>{{row[fieldName]?'check':''}}</v-icon>\r\n                    </v-btn>\r\n                </v-list-tile>\r\n                <v-list-tile>\r\n                    <v-btn\r\n                            :loading=\"unpublishing\"\r\n                            @click=\"publish(false)\"\r\n                            :disabled=\"publishing || unpublishing\"\r\n                            flat\r\n                    >\r\n                        Unpublished\r\n                        <v-icon right dark>{{!row[fieldName]?'check':''}}</v-icon>\r\n                    </v-btn>\r\n                </v-list-tile>\r\n            </v-list>\r\n        </v-menu>\r\n    </div>\r\n</template>\r\n<script>\r\n    import debug from 'debug';\r\n    import Events from './../../../app/events';\r\n\r\n    const log = debug('bi-admin-vue:table:column-widget:publish');\r\n\r\n    export default {\r\n        name   : 'SimpleTablePublishRowActionWidget',\r\n        data() {\r\n            return {\r\n                menuVisible : false,\r\n                publishing  : false,\r\n                unpublishing: false,\r\n            }\r\n        },\r\n        methods: {\r\n            async publish(value) {\r\n                this.menuVisible = false;\r\n\r\n                if (value) {\r\n                    this.publishing = true;\r\n                } else {\r\n                    this.unpublishing = true;\r\n                }\r\n\r\n                try {\r\n                    await this.onVisibilityChange(this.row, value);\r\n                    this.appManager.$emit(Events.SUCCESS, 'Visibility status changed');\r\n                } catch (e) {\r\n                    this.appManager.$emit(Events.ERROR, 'Unable to change visibility status');\r\n                    log('Unable to change visibility status', e);\r\n                } finally {\r\n                    this.publishing   = false;\r\n                    this.unpublishing = false;\r\n                }\r\n                await this.controller.loadData();\r\n            }\r\n        },\r\n        props  : {\r\n            controller        : {\r\n                type   : Object,\r\n                default: () => {\r\n                    configuration: {\r\n                    }\r\n                }\r\n            },\r\n            onVisibilityChange: {\r\n                type   : Function,\r\n                default: () => {\r\n                    log('Warning: publish widget does not have onVisibilityChange prop defined!');\r\n                    return () => {\r\n                        return Promise.reject();\r\n                    }\r\n                }\r\n            },\r\n            fieldName         : {\r\n                type   : String,\r\n                default: 'published'\r\n            },\r\n            row               : {\r\n                type   : Object,\r\n                default: () => {\r\n                }\r\n            }\r\n        }\r\n    }\r\n</script>"],"sourceRoot":"src/components/table/rowActionWidget"}]}