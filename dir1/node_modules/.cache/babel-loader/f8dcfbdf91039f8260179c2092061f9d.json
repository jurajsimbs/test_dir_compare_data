{"remainingRequest":"C:\\work\\bi-admin-vue-new\\node_modules\\thread-loader\\dist\\cjs.js!C:\\work\\bi-admin-vue-new\\node_modules\\babel-loader\\lib\\index.js!C:\\work\\bi-admin-vue-new\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\work\\bi-admin-vue-new\\src\\table\\controller.js","dependencies":[{"path":"C:\\work\\bi-admin-vue-new\\src\\table\\controller.js","mtime":1552754725295},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\work\\\\bi-admin-vue-new\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _Object$keys from \"C:\\\\work\\\\bi-admin-vue-new\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/object/keys\";\nimport _Object$assign from \"C:\\\\work\\\\bi-admin-vue-new\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/object/assign\";\nimport _classCallCheck from \"C:\\\\work\\\\bi-admin-vue-new\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\work\\\\bi-admin-vue-new\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\work\\\\bi-admin-vue-new\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\work\\\\bi-admin-vue-new\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\work\\\\bi-admin-vue-new\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/inherits\";\nimport debug from 'debug';\nimport _ from 'lodash';\nimport Vue from 'vue';\nimport LocalSettings from '../app/localSettings';\nimport StringUtil from './../util/string';\nimport events from './events';\nimport SortOrder from './sortOrder';\nvar log = debug('bi-admin-vue:table-controller');\n/**\r\n * @name SimpleTableController\r\n */\n\nvar _default =\n/*#__PURE__*/\nfunction (_Vue) {\n  _inherits(_default, _Vue);\n\n  function _default(configuration, resourceOrUrl, VueObject) {\n    var _this;\n\n    var additionalRequestParams = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n    _classCallCheck(this, _default);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(_default).call(this));\n    _this.filters = {};\n    _this.additionalRequestParams = additionalRequestParams;\n\n    if (!_.isObject(configuration)) {\n      throw new Error('Controller configuration is missing!');\n    }\n\n    _this.configuration = _Object$assign({\n      identifier: StringUtil.randomString(10),\n      columns: [],\n      pagination: {\n        rowsPerPage: 20,\n        page: 1,\n        sortOrder: SortOrder.ASCENDING,\n        sortBy: 'id'\n      },\n      selectable: false,\n      multiSelect: false,\n      rowActions: [],\n      hiddenColumns: [],\n      filter: {}\n    }, configuration);\n\n    if (_.isString(resourceOrUrl)) {\n      _this.resource = VueObject.resource(resourceOrUrl, {});\n    } else {\n      _this.resource = resourceOrUrl;\n    }\n\n    var localSettings = LocalSettings.get(_this.configuration.identifier);\n    log(\"Got local settings for table \".concat(_this.configuration.identifier, \" \"), localSettings);\n\n    if (localSettings) {\n      if (localSettings.hiddenColumns) {\n        _this.configuration.hiddenColumns = localSettings.hiddenColumns;\n      }\n\n      if (localSettings.sortBy) {\n        _this.configuration.pagination.sortBy = localSettings.sortBy;\n      }\n\n      if (localSettings.sortOrder) {\n        _this.configuration.pagination.sortOrder = localSettings.sortOrder;\n      }\n\n      if (localSettings.rowsPerPage) {\n        _this.configuration.pagination.rowsPerPage = localSettings.rowsPerPage;\n      }\n\n      if (localSettings.page) {\n        _this.configuration.pagination.page = localSettings.page;\n      }\n    } else {\n      _this.updateLocalSettings();\n    }\n\n    return _this;\n  }\n\n  _createClass(_default, [{\n    key: \"setFilterValue\",\n    value: function setFilterValue(filtercode, filterValue) {\n      this.filters[filtercode] = filterValue;\n      this.$emit(events.FILTER_VALUE_CHANGED, {\n        code: filtercode,\n        value: filterValue\n      });\n    }\n  }, {\n    key: \"clearFilterValue\",\n    value: function clearFilterValue(filtercode) {\n      delete this.filters[filtercode];\n      this.$emit(events.FILTER_VALUE_CHANGED, {\n        code: filtercode\n      });\n    }\n  }, {\n    key: \"updateLocalSettings\",\n    value: function updateLocalSettings() {\n      LocalSettings.set(this.configuration.identifier, {\n        hiddenColumns: this.configuration.hiddenColumns,\n        pagination: this.configuration.pagination\n      });\n    }\n  }, {\n    key: \"toggleColumnVisible\",\n    value: function toggleColumnVisible(columnName) {\n      if (this.configuration.hiddenColumns.indexOf(columnName) > -1) {\n        this.configuration.hiddenColumns.splice(this.configuration.hiddenColumns.indexOf(columnName), 1);\n      } else {\n        this.configuration.hiddenColumns.push(columnName);\n      }\n\n      log('Hidden columns changed: ', this.configuration.hiddenColumns);\n      this.updateLocalSettings();\n      this.$emit(events.COLUMN_VISIBILITY_CHANGED, columnName);\n    }\n  }, {\n    key: \"switchSortOrder\",\n    value: function switchSortOrder() {\n      if (this.configuration.pagination.sortOrder === SortOrder.ASCENDING) {\n        this.configuration.pagination.sortOrder = SortOrder.DESCENDING;\n      } else {\n        this.configuration.pagination.sortOrder = SortOrder.ASCENDING;\n      }\n\n      this.updateLocalSettings();\n      this.$emit(events.SORT_CHANGED, {\n        sortBy: this.configuration.sortBy,\n        sortOrder: this.configuration.pagination.sortOrder\n      });\n      return this.loadData();\n    }\n  }, {\n    key: \"setSortBy\",\n    value: function setSortBy(sortBy) {\n      this.configuration.pagination.sortBy = sortBy;\n      this.updateLocalSettings();\n      this.$emit(events.SORT_CHANGED, {\n        sortBy: sortBy,\n        sortOrder: this.configuration.pagination.sortOrder\n      });\n      return this.loadData();\n    }\n  }, {\n    key: \"setPagination\",\n    value: function setPagination(pagination) {\n      this.configuration.pagination = pagination;\n      this.updateLocalSettings();\n      this.$emit(events.PAGINATION_CHANGED, this.configuration.pagination);\n      return this.loadData();\n    }\n  }, {\n    key: \"setRowsPerPage\",\n    value: function setRowsPerPage(rowsPerPage) {\n      this.configuration.pagination.rowsPerPage = rowsPerPage;\n      this.updateLocalSettings();\n      this.$emit(events.PAGINATION_CHANGED, {\n        rowsPerPage: rowsPerPage,\n        page: this.configuration.pagination.page\n      });\n      return this.loadData();\n    }\n  }, {\n    key: \"setPage\",\n    value: function setPage(page) {\n      this.configuration.pagination.page = page;\n      this.updateLocalSettings();\n      this.$emit(events.PAGINATION_CHANGED, {\n        page: page,\n        rowsPerPage: this.configuration.pagination.rowsPerPage\n      });\n      return this.loadData();\n    }\n  }, {\n    key: \"responseIsValid\",\n    value: function responseIsValid(response) {\n      return response.data && response.data.rows;\n    }\n  }, {\n    key: \"_getFilter\",\n    value: function _getFilter(filterConfiguration) {\n      var _this2 = this;\n\n      var filters = {};\n\n      _Object$keys(filterConfiguration).map(function (filterKey) {\n        if (_this2.filters[filterKey] === undefined || _this2.filters[filterKey] === '') {\n          return;\n        } //let newFilter = Object.assign({value: this.filters[filterKey]}, filterConfiguration[filterKey]);\n\n\n        var newFilter = {\n          value: _this2.filters[filterKey],\n          fields: filterConfiguration[filterKey].fields\n        };\n        filters[filterKey] = newFilter;\n      });\n\n      return filters;\n    }\n    /**\r\n     * @throws Error;\r\n     * @returns {Promise<*>}\r\n     */\n\n  }, {\n    key: \"loadData\",\n    value: function () {\n      var _loadData = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var params, response;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.$emit(events.DATA_LOADING, true);\n                log(\"Loading data from \".concat(this.resource.get.url));\n                params = _Object$assign({}, this.configuration.pagination, {\n                  filter: this._getFilter(this.configuration.filter)\n                }, this.additionalRequestParams);\n\n                if (!params.sortBy) {\n                  params.sortBy = this.configuration.sortBy;\n                }\n\n                if (params.descending === true) {\n                  params.sortOrder = SortOrder.DESCENDING;\n                  delete params.descending;\n                } else if (params.descending === false) {\n                  params.sortOrder = SortOrder.ASCENDING;\n                  delete params.descending;\n                }\n\n                _context.prev = 5;\n                _context.next = 8;\n                return this.resource.get(params);\n\n              case 8:\n                response = _context.sent;\n\n                if (this.responseIsValid(response)) {\n                  _context.next = 12;\n                  break;\n                }\n\n                log(\"Data from \".concat(this.resource.get.url, \" are not valid\"));\n                throw new Error('Response is invalid');\n\n              case 12:\n                log(\"Data from \".concat(this.resource.get.url, \" loaded\"));\n                this.$emit(events.DATA_RECEIVED, response);\n                return _context.abrupt(\"return\", response);\n\n              case 17:\n                _context.prev = 17;\n                _context.t0 = _context[\"catch\"](5);\n                log(\"Unable to get data from URL \".concat(this.resource.get.url), _context.t0);\n                throw _context.t0;\n\n              case 21:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[5, 17]]);\n      }));\n\n      function loadData() {\n        return _loadData.apply(this, arguments);\n      }\n\n      return loadData;\n    }()\n  }]);\n\n  return _default;\n}(Vue);\n\nexport { _default as default };",{"version":3,"sources":["C:\\work\\bi-admin-vue-new\\src\\table\\controller.js"],"names":["debug","_","Vue","LocalSettings","StringUtil","events","SortOrder","log","configuration","resourceOrUrl","VueObject","additionalRequestParams","filters","isObject","Error","identifier","randomString","columns","pagination","rowsPerPage","page","sortOrder","ASCENDING","sortBy","selectable","multiSelect","rowActions","hiddenColumns","filter","isString","resource","localSettings","get","updateLocalSettings","filtercode","filterValue","$emit","FILTER_VALUE_CHANGED","code","value","set","columnName","indexOf","splice","push","COLUMN_VISIBILITY_CHANGED","DESCENDING","SORT_CHANGED","loadData","PAGINATION_CHANGED","response","data","rows","filterConfiguration","map","filterKey","undefined","newFilter","fields","DATA_LOADING","url","params","_getFilter","descending","responseIsValid","DATA_RECEIVED"],"mappings":"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","sourcesContent":["import debug from 'debug';\r\nimport _ from 'lodash';\r\nimport Vue from 'vue';\r\nimport LocalSettings from '../app/localSettings';\r\nimport StringUtil from './../util/string';\r\nimport events from './events';\r\nimport SortOrder from './sortOrder';\r\n\r\nconst log = debug('bi-admin-vue:table-controller');\r\n\r\n/**\r\n * @name SimpleTableController\r\n */\r\nexport default class extends Vue {\r\n    constructor(configuration, resourceOrUrl, VueObject, additionalRequestParams = {}) {\r\n        super();\r\n        this.filters = {};\r\n        this.additionalRequestParams = additionalRequestParams;\r\n        if (!_.isObject(configuration)) {\r\n            throw new Error('Controller configuration is missing!');\r\n        }\r\n        this.configuration = Object.assign({\r\n            identifier   : StringUtil.randomString(10),\r\n            columns      : [],\r\n            pagination   : {\r\n                rowsPerPage: 20,\r\n                page       : 1,\r\n                sortOrder  : SortOrder.ASCENDING,\r\n                sortBy     : 'id',\r\n            },\r\n            selectable   : false,\r\n            multiSelect  : false,\r\n            rowActions   : [],\r\n            hiddenColumns: [],\r\n            filter       : {}\r\n        }, configuration);\r\n        if (_.isString(resourceOrUrl)) {\r\n            this.resource = VueObject.resource(resourceOrUrl, {});\r\n        } else {\r\n            this.resource = resourceOrUrl;\r\n        }\r\n        let localSettings = LocalSettings.get(this.configuration.identifier);\r\n        log(`Got local settings for table ${this.configuration.identifier} `, localSettings);\r\n        if (localSettings) {\r\n            if (localSettings.hiddenColumns) {\r\n                this.configuration.hiddenColumns = localSettings.hiddenColumns;\r\n            }\r\n            if (localSettings.sortBy) {\r\n                this.configuration.pagination.sortBy = localSettings.sortBy;\r\n            }\r\n            if (localSettings.sortOrder) {\r\n                this.configuration.pagination.sortOrder = localSettings.sortOrder;\r\n            }\r\n            if (localSettings.rowsPerPage) {\r\n                this.configuration.pagination.rowsPerPage = localSettings.rowsPerPage;\r\n            }\r\n            if (localSettings.page) {\r\n                this.configuration.pagination.page = localSettings.page;\r\n            }\r\n        } else {\r\n            this.updateLocalSettings();\r\n        }\r\n    }\r\n\r\n    setFilterValue(filtercode, filterValue) {\r\n        this.filters[filtercode] = filterValue;\r\n        this.$emit(events.FILTER_VALUE_CHANGED, {code: filtercode, value: filterValue});\r\n    }\r\n\r\n    clearFilterValue(filtercode) {\r\n        delete this.filters[filtercode];\r\n        this.$emit(events.FILTER_VALUE_CHANGED, {code: filtercode});\r\n    }\r\n\r\n    updateLocalSettings() {\r\n        LocalSettings.set(this.configuration.identifier, {\r\n            hiddenColumns: this.configuration.hiddenColumns,\r\n            pagination   : this.configuration.pagination,\r\n        });\r\n    }\r\n\r\n    toggleColumnVisible(columnName) {\r\n        if (this.configuration.hiddenColumns.indexOf(columnName) > -1) {\r\n            this.configuration.hiddenColumns.splice(this.configuration.hiddenColumns.indexOf(columnName), 1);\r\n        } else {\r\n            this.configuration.hiddenColumns.push(columnName);\r\n        }\r\n        log('Hidden columns changed: ', this.configuration.hiddenColumns);\r\n        this.updateLocalSettings();\r\n        this.$emit(events.COLUMN_VISIBILITY_CHANGED, columnName);\r\n    }\r\n\r\n    switchSortOrder() {\r\n        if (this.configuration.pagination.sortOrder === SortOrder.ASCENDING) {\r\n            this.configuration.pagination.sortOrder = SortOrder.DESCENDING;\r\n        } else {\r\n            this.configuration.pagination.sortOrder = SortOrder.ASCENDING;\r\n        }\r\n        this.updateLocalSettings();\r\n        this.$emit(events.SORT_CHANGED, {\r\n            sortBy   : this.configuration.sortBy,\r\n            sortOrder: this.configuration.pagination.sortOrder\r\n        });\r\n        return this.loadData();\r\n    }\r\n\r\n    setSortBy(sortBy) {\r\n        this.configuration.pagination.sortBy = sortBy;\r\n        this.updateLocalSettings();\r\n        this.$emit(events.SORT_CHANGED, {sortBy, sortOrder: this.configuration.pagination.sortOrder});\r\n        return this.loadData();\r\n    }\r\n\r\n    setPagination(pagination) {\r\n        this.configuration.pagination = pagination;\r\n        this.updateLocalSettings();\r\n        this.$emit(events.PAGINATION_CHANGED, this.configuration.pagination);\r\n        return this.loadData();\r\n    }\r\n\r\n    setRowsPerPage(rowsPerPage) {\r\n        this.configuration.pagination.rowsPerPage = rowsPerPage;\r\n        this.updateLocalSettings();\r\n        this.$emit(events.PAGINATION_CHANGED, {rowsPerPage, page: this.configuration.pagination.page});\r\n        return this.loadData();\r\n    }\r\n\r\n    setPage(page) {\r\n        this.configuration.pagination.page = page;\r\n        this.updateLocalSettings();\r\n        this.$emit(events.PAGINATION_CHANGED, {page, rowsPerPage: this.configuration.pagination.rowsPerPage});\r\n        return this.loadData();\r\n    }\r\n\r\n    responseIsValid(response) {\r\n        return response.data && response.data.rows;\r\n    }\r\n\r\n    _getFilter(filterConfiguration) {\r\n        let filters = {};\r\n        Object.keys(filterConfiguration).map((filterKey) => {\r\n            if (this.filters[filterKey] === undefined || this.filters[filterKey] === '') {\r\n                return;\r\n            }\r\n            //let newFilter = Object.assign({value: this.filters[filterKey]}, filterConfiguration[filterKey]);\r\n            let newFilter = {\r\n                value : this.filters[filterKey],\r\n                fields: filterConfiguration[filterKey].fields\r\n            }\r\n            filters[filterKey] = newFilter;\r\n        })\r\n        return filters;\r\n    }\r\n\r\n\r\n    /**\r\n     * @throws Error;\r\n     * @returns {Promise<*>}\r\n     */\r\n    async loadData() {\r\n        this.$emit(events.DATA_LOADING, true);\r\n        log(`Loading data from ${this.resource.get.url}`);\r\n\r\n        let params = Object.assign({}, this.configuration.pagination, {\r\n            filter: this._getFilter(this.configuration.filter)\r\n        }, this.additionalRequestParams);\r\n\r\n        if (!params.sortBy) {\r\n            params.sortBy = this.configuration.sortBy\r\n        }\r\n\r\n        if (params.descending === true) {\r\n            params.sortOrder = SortOrder.DESCENDING;\r\n            delete params.descending;\r\n        } else if (params.descending === false) {\r\n            params.sortOrder = SortOrder.ASCENDING;\r\n            delete params.descending;\r\n        }\r\n\r\n        try {\r\n            let response = await this.resource.get(params);\r\n            if (!this.responseIsValid(response)) {\r\n                log(`Data from ${this.resource.get.url} are not valid`);\r\n                throw new Error('Response is invalid');\r\n            }\r\n            log(`Data from ${this.resource.get.url} loaded`);\r\n            this.$emit(events.DATA_RECEIVED, response);\r\n            return response;\r\n        } catch (e) {\r\n            log(`Unable to get data from URL ${this.resource.get.url}`, e);\r\n            throw e;\r\n        }\r\n    }\r\n}"]}]}