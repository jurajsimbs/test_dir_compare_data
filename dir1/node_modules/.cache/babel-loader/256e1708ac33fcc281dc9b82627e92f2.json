{"remainingRequest":"C:\\work\\bi-admin-vue-new\\node_modules\\babel-loader\\lib\\index.js!C:\\work\\bi-admin-vue-new\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\work\\bi-admin-vue-new\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\work\\bi-admin-vue-new\\src\\components\\asset\\FilePicker.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\work\\bi-admin-vue-new\\src\\components\\asset\\FilePicker.vue","mtime":1552754725221},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar log = require('debug')('launcher:file-picker');\n\nexport default {\n  name: 'file-picker',\n  props: {\n    assetType: {\n      type: String,\n      default: 'file'\n    },\n    label: {\n      type: String,\n      default: 'File'\n    },\n    actionText: {\n      type: String,\n      default: 'Select'\n    },\n    accept: {\n      type: String,\n      default: '*'\n    },\n    removable: {\n      type: Boolean,\n      default: true\n    }\n  },\n  data: function data() {\n    return {\n      loading: false,\n      image: null,\n      progress: null\n    };\n  },\n  methods: {\n    onPickFile: function onPickFile() {\n      this.removeImage();\n      this.$refs.input.click();\n    },\n    removeImage: function removeImage() {\n      this.image = null;\n      this.loading = false;\n      this.$emit('remove');\n    },\n    onFilePicked: function onFilePicked(event) {\n      var _this = this;\n\n      this.loading = true;\n      var files = event.target.files || event.dataTransfer.files;\n\n      if (files && files[0]) {\n        var filename = files[0].name;\n\n        if (filename && filename.lastIndexOf('.') <= 0) {\n          this.loading = false;\n          return; //invalid image\n        }\n\n        var fileReader = new FileReader();\n        fileReader.addEventListener('load', function () {\n          _this.image = fileReader.result;\n          _this.loading = false;\n\n          _this.$emit('input', files[0]);\n        });\n        fileReader.readAsDataURL(files[0]);\n      } else {\n        this.loading = false;\n      }\n    }\n  },\n  watch: {\n    image: function image(value) {\n      this.$emit('pick', value);\n    }\n  },\n  computed: {\n    preview: function preview() {\n      return this.image;\n    }\n  },\n  created: function created() {\n    var _this2 = this;\n\n    this.appManager.$on(\"progress-\".concat(this.assetType), function (value) {\n      _this2.progress = value;\n\n      if (_this2.progress) {\n        _this2.loading = true;\n      } else {\n        _this2.removeImage();\n\n        _this2.loading = false;\n      }\n    });\n  }\n};",{"version":3,"sources":["FilePicker.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <v-layout row wrap>\r\n        <v-flex xs9>\r\n            <v-btn\r\n                    :loading=\"loading\"\r\n                    @click=\"onPickFile\"\r\n                    :disabled=\"loading\"\r\n                    color=\"blue-grey\"\r\n                    class=\"white--text\"\r\n            >\r\n                {{actionText}}\r\n                <v-icon dark right>cloud_upload</v-icon>\r\n            </v-btn>\r\n            <input type=\"file\" ref=\"input\" hidden name=\"file\" :accept=\"accept\" @change=\"onFilePicked\">\r\n        </v-flex>\r\n        <v-flex xs3 class=\"right\" v-if=\"removable\">\r\n            <v-btn icon flat @click=\"removeImage\" v-if=\"preview\" color=\"error\">\r\n                <v-icon>cancel</v-icon>\r\n            </v-btn>\r\n        </v-flex>\r\n        <v-flex xs12 v-if=\"progress\">\r\n            <v-progress-linear v-model=\"progress\"></v-progress-linear>\r\n        </v-flex>\r\n    </v-layout>\r\n</template>\r\n\r\n<script>\r\n\r\n    const log = require('debug')('launcher:file-picker');\r\n\r\n    export default {\r\n        name    : 'file-picker',\r\n        props   : {\r\n            assetType : {\r\n                type   : String,\r\n                default: 'file'\r\n            },\r\n            label     : {\r\n                type   : String,\r\n                default: 'File'\r\n            },\r\n            actionText: {\r\n                type   : String,\r\n                default: 'Select'\r\n            },\r\n            accept    : {\r\n                type   : String,\r\n                default: '*'\r\n            },\r\n            removable: {\r\n                type: Boolean,\r\n                default: true\r\n            }\r\n        },\r\n        data() {\r\n            return {\r\n                loading : false,\r\n                image   : null,\r\n                progress: null\r\n            }\r\n        },\r\n        methods : {\r\n            onPickFile() {\r\n                this.removeImage();\r\n                this.$refs.input.click();\r\n            },\r\n            removeImage() {\r\n                this.image = null;\r\n                this.loading = false;\r\n                this.$emit('remove');\r\n            },\r\n            onFilePicked(event) {\r\n                this.loading = true;\r\n                const files  = event.target.files || event.dataTransfer.files;\r\n\r\n                if (files && files[0]) {\r\n                    let filename = files[0].name;\r\n\r\n                    if (filename && filename.lastIndexOf('.') <= 0) {\r\n                        this.loading = false;\r\n                        return;//invalid image\r\n                    }\r\n\r\n                    const fileReader = new FileReader();\r\n\r\n                    fileReader.addEventListener('load', () => {\r\n                        this.image   = fileReader.result;\r\n                        this.loading = false;\r\n                        this.$emit('input', files[0]);\r\n                    });\r\n\r\n                    fileReader.readAsDataURL(files[0]);\r\n\r\n                } else {\r\n                    this.loading = false;\r\n                }\r\n            },\r\n        },\r\n        watch   : {\r\n            image(value) {\r\n                this.$emit('pick', value);\r\n            }\r\n        },\r\n        computed: {\r\n            preview() {\r\n                return this.image;\r\n            }\r\n        },\r\n        created() {\r\n            this.appManager.$on(`progress-${this.assetType}`, value => {\r\n                this.progress = value;\r\n\r\n                if (this.progress) {\r\n                    this.loading = true;\r\n                } else {\r\n                    this.removeImage();\r\n                    this.loading = false;\r\n                }\r\n            });\r\n        }\r\n    };\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped lang=\"scss\">\r\n    .right {\r\n        text-align: right;\r\n    }\r\n</style>\r\n"],"sourceRoot":"src/components/asset"}]}