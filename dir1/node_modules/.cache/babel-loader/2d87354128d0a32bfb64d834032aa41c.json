{"remainingRequest":"C:\\work\\bi-admin-vue-new\\node_modules\\babel-loader\\lib\\index.js!C:\\work\\bi-admin-vue-new\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\work\\bi-admin-vue-new\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\work\\bi-admin-vue-new\\src\\demo\\page\\combinedEditor.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\work\\bi-admin-vue-new\\src\\demo\\page\\combinedEditor.vue","mtime":1552754725277},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.split\";\nimport _objectSpread from \"C:\\\\work\\\\bi-admin-vue-new\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from 'vuex';\nimport Editor from '../../components/editor/editor';\nimport ImagesResource from '../ImagesResource';\nimport AuthorsResource from '../AuthorsResource';\nimport EditorPropsDesc from './editorPropsDesc';\nimport SOURCE_EDITOR from './../../const/sourceEditor';\n\nvar striptags = require('striptags');\n\nexport default {\n  components: {\n    EditorPropsDesc: EditorPropsDesc,\n    Editor: Editor\n  },\n  computed: _objectSpread({}, mapGetters('settings', {\n    settings: 'settings'\n  }), {\n    sourceEditorTypes: function sourceEditorTypes() {\n      return SOURCE_EDITOR.TYPES;\n    }\n  }),\n  data: function data() {\n    return {\n      editorValue: \"<div><p>hello this is paragraph 1</p><p>hello this is paragraph 2</p></div>\",\n      secondEditorValue: \"<p>test phrase 2</p>\",\n      wordsCount: 0,\n      secondEditorWordsCount: 0,\n      sourceOptions: {\n        formatAfterMount: true,\n        height: 600,\n        language: 'html'\n      },\n      contentOptions: {\n        uploadUrl: '/upload/image',\n        imagesBasePath: this.settings && this.settings.imageBasePath,\n        imagesListResource: ImagesResource,\n        authorsListResource: AuthorsResource,\n        extraplugins: 'contextmenu',\n        pluginsCustom: ['backToContents', 'author', 'picture', 'gallery', 'comparsion', 'youtube', 'facebook', 'tweet', 'twitch', 'vimeo', 'grid', 'instagram', 'soundcloud', 'imgur', 'giphy', 'mixer']\n      },\n      editorOptions: {\n        height: '300px',\n        toolbar: [['Undo', 'Redo'], ['Bold', 'Italic', 'Strike'], ['NumberedList', 'BulletedList'], ['Format', 'Link', 'Unlink'], ['layout'] //TODO: add this into default toolbar!\n        ]\n      }\n    };\n  },\n  methods: {\n    updateWordsCount: function updateWordsCount() {\n      this.wordsCount = striptags(this.editorValue).split(' ').length;\n      this.secondEditorWordsCount = striptags(this.secondEditorValue).split(' ').length;\n    }\n  },\n  mounted: function mounted() {\n    this.updateWordsCount();\n  },\n  watch: {\n    editorValue: function editorValue(newVal) {\n      this.updateWordsCount();\n    },\n    secondEditorValue: function secondEditorValue() {\n      this.updateWordsCount();\n    }\n  }\n};",{"version":3,"sources":["combinedEditor.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+CA,SAAA,UAAA,QAAA,MAAA;AACA,OAAA,MAAA,MAAA,gCAAA;AACA,OAAA,cAAA,MAAA,mBAAA;AACA,OAAA,eAAA,MAAA,oBAAA;AACA,OAAA,eAAA,MAAA,mBAAA;AACA,OAAA,aAAA,MAAA,4BAAA;;AAEA,IAAA,SAAA,GAAA,OAAA,CAAA,WAAA,CAAA;;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,eAAA,EAAA,eADA;AAEA,IAAA,MAAA,EAAA;AAFA,GADA;AAKA,EAAA,QAAA,oBACA,UAAA,CAAA,UAAA,EACA;AAAA,IAAA,QAAA,EAAA;AAAA,GADA,CADA;AAIA,IAAA,iBAJA,+BAIA;AACA,aAAA,aAAA,CAAA,KAAA;AACA;AANA,IALA;AAaA,EAAA,IAbA,kBAaA;AACA,WAAA;AACA,MAAA,WAAA,+EADA;AAEA,MAAA,iBAAA,wBAFA;AAGA,MAAA,UAAA,EAAA,CAHA;AAIA,MAAA,sBAAA,EAAA,CAJA;AAKA,MAAA,aAAA,EAAA;AACA,QAAA,gBAAA,EAAA,IADA;AAEA,QAAA,MAAA,EAAA,GAFA;AAGA,QAAA,QAAA,EAAA;AAHA,OALA;AAUA,MAAA,cAAA,EAAA;AACA,QAAA,SAAA,EAAA,eADA;AAEA,QAAA,cAAA,EAAA,KAAA,QAAA,IAAA,KAAA,QAAA,CAAA,aAFA;AAGA,QAAA,kBAAA,EAAA,cAHA;AAIA,QAAA,mBAAA,EAAA,eAJA;AAKA,QAAA,YAAA,EAAA,aALA;AAMA,QAAA,aAAA,EAAA,CACA,gBADA,EAEA,QAFA,EAGA,SAHA,EAIA,SAJA,EAKA,YALA,EAMA,SANA,EAOA,UAPA,EAQA,OARA,EASA,QATA,EAUA,OAVA,EAWA,MAXA,EAYA,WAZA,EAaA,YAbA,EAcA,OAdA,EAeA,OAfA,EAgBA,OAhBA;AANA,OAVA;AAmCA,MAAA,aAAA,EAAA;AACA,QAAA,MAAA,EAAA,OADA;AAEA,QAAA,OAAA,EAAA,CACA,CAAA,MAAA,EAAA,MAAA,CADA,EAEA,CAAA,MAAA,EAAA,QAAA,EAAA,QAAA,CAFA,EAGA,CAAA,cAAA,EAAA,cAAA,CAHA,EAIA,CAAA,QAAA,EAAA,MAAA,EAAA,QAAA,CAJA,EAKA,CAAA,QAAA,CALA,CAKA;AALA;AAFA;AAnCA,KAAA;AA8CA,GA5DA;AA6DA,EAAA,OAAA,EAAA;AACA,IAAA,gBADA,8BACA;AACA,WAAA,UAAA,GAAA,SAAA,CAAA,KAAA,WAAA,CAAA,CAAA,KAAA,CAAA,GAAA,EAAA,MAAA;AACA,WAAA,sBAAA,GAAA,SAAA,CAAA,KAAA,iBAAA,CAAA,CAAA,KAAA,CAAA,GAAA,EAAA,MAAA;AACA;AAJA,GA7DA;AAmEA,EAAA,OAnEA,qBAmEA;AACA,SAAA,gBAAA;AACA,GArEA;AAsEA,EAAA,KAAA,EAAA;AACA,IAAA,WADA,uBACA,MADA,EACA;AACA,WAAA,gBAAA;AACA,KAHA;AAIA,IAAA,iBAJA,+BAIA;AACA,WAAA,gBAAA;AACA;AANA;AAtEA,CAAA","sourcesContent":["<template>\r\n    <SimplePage>\r\n        <div slot=\"content\">\r\n            <EditorPropsDesc/>\r\n            <br/>\r\n            <br/>\r\n            <h2>Examples</h2>\r\n            <br/>\r\n\r\n            <h3>Simple combined editor</h3>\r\n            <br/>\r\n            <v-card>\r\n                <v-card-text>\r\n                    Number of words: {{wordsCount}}\r\n                    <Editor\r\n                            :contentOptions=\"contentOptions\"\r\n                            v-model=\"editorValue\"\r\n                            :source=\"true\"\r\n                            :sourceOptions=\"sourceOptions\"\r\n                            :editorOptions=\"editorOptions\"\r\n                    >\r\n                    </Editor>\r\n                </v-card-text>\r\n            </v-card>\r\n\r\n            <br/>\r\n            <br/>\r\n            <h3>Simple combined editor 2</h3>\r\n            <br/>\r\n            <v-card>\r\n                <v-card-text>\r\n                    Number of words: {{secondEditorWordsCount}}\r\n                    <Editor\r\n                            :contentOptions=\"contentOptions\"\r\n                            v-model=\"secondEditorValue\"\r\n                            :source=\"true\"\r\n                            :sourceEditor=\"sourceEditorTypes.ACE\"\r\n                            :sourceOptions=\"sourceOptions\"\r\n                            :editorOptions=\"editorOptions\"\r\n                    >\r\n                    </Editor>\r\n                </v-card-text>\r\n            </v-card>\r\n        </div>\r\n    </SimplePage>\r\n</template>\r\n<script>\r\n    import {mapGetters} from 'vuex';\r\n    import Editor from '../../components/editor/editor'\r\n    import ImagesResource from '../ImagesResource';\r\n    import AuthorsResource from '../AuthorsResource';\r\n    import EditorPropsDesc from './editorPropsDesc';\r\n    import SOURCE_EDITOR from './../../const/sourceEditor'\r\n\r\n    var striptags = require('striptags');\r\n\r\n    export default {\r\n        components: {\r\n            EditorPropsDesc,\r\n            Editor,\r\n        },\r\n        computed  : {\r\n            ...mapGetters('settings',\r\n                {settings: 'settings'},\r\n            ),\r\n            sourceEditorTypes() {\r\n                return SOURCE_EDITOR.TYPES\r\n            }\r\n        },\r\n        data() {\r\n            return {\r\n                editorValue           : `<div><p>hello this is paragraph 1</p><p>hello this is paragraph 2</p></div>`,\r\n                secondEditorValue     : `<p>test phrase 2</p>`,\r\n                wordsCount            : 0,\r\n                secondEditorWordsCount: 0,\r\n                sourceOptions         : {\r\n                    formatAfterMount: true,\r\n                    height          : 600,\r\n                    language        : 'html'\r\n                },\r\n                contentOptions        : {\r\n                    uploadUrl          : '/upload/image',\r\n                    imagesBasePath     : this.settings && this.settings.imageBasePath,\r\n                    imagesListResource : ImagesResource,\r\n                    authorsListResource: AuthorsResource,\r\n                    extraplugins       : 'contextmenu',\r\n                    pluginsCustom      : [\r\n                        'backToContents',\r\n                        'author',\r\n                        'picture',\r\n                        'gallery',\r\n                        'comparsion',\r\n                        'youtube',\r\n                        'facebook',\r\n                        'tweet',\r\n                        'twitch',\r\n                        'vimeo',\r\n                        'grid',\r\n                        'instagram',\r\n                        'soundcloud',\r\n                        'imgur',\r\n                        'giphy',\r\n                        'mixer'\r\n                    ]\r\n                },\r\n                editorOptions         : {\r\n                    height : '300px',\r\n                    toolbar: [\r\n                        ['Undo', 'Redo'],\r\n                        ['Bold', 'Italic', 'Strike'],\r\n                        ['NumberedList', 'BulletedList'],\r\n                        ['Format', 'Link', 'Unlink'],\r\n                        ['layout'] //TODO: add this into default toolbar!\r\n                    ],\r\n                }\r\n            }\r\n        },\r\n        methods   : {\r\n            updateWordsCount() {\r\n                this.wordsCount             = striptags(this.editorValue).split(' ').length;\r\n                this.secondEditorWordsCount = striptags(this.secondEditorValue).split(' ').length;\r\n            }\r\n        },\r\n        mounted() {\r\n            this.updateWordsCount();\r\n        },\r\n        watch     : {\r\n            editorValue(newVal) {\r\n                this.updateWordsCount();\r\n            },\r\n            secondEditorValue() {\r\n                this.updateWordsCount();\r\n            }\r\n        }\r\n    }\r\n</script>"],"sourceRoot":"src/demo/page"}]}