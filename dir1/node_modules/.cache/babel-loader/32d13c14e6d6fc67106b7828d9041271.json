{"remainingRequest":"C:\\work\\bi-admin-vue-new\\node_modules\\thread-loader\\dist\\cjs.js!C:\\work\\bi-admin-vue-new\\node_modules\\babel-loader\\lib\\index.js!C:\\work\\bi-admin-vue-new\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\work\\bi-admin-vue-new\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\work\\bi-admin-vue-new\\src\\components\\editor\\imageBrowser\\imageBrowserDialog.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\work\\bi-admin-vue-new\\src\\components\\editor\\imageBrowser\\imageBrowserDialog.vue","mtime":1552754725227},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport ImageUploaderDialog from './imageUploaderDialog';\nimport ImagePropertiesDialog from './imagePropertiesDialog'; // Slicksort Plugins\n\nimport { ContainerMixin, ElementMixin } from 'vue-slicksort';\nvar SortableList = {\n  mixins: [ContainerMixin],\n  template: \"\\n        <ul class=\\\"list\\\">\\n        <slot />\\n        </ul>\\n    \"\n};\nvar SortableItem = {\n  mixins: [ElementMixin],\n  template: \"\\n        <li class=\\\"list-item\\\">\\n            <slot />\\n        </li>\\n    \"\n};\nexport default {\n  name: 'ImageBrowserDialog',\n  components: {\n    SortableItem: SortableItem,\n    SortableList: SortableList,\n    ImageUploaderDialog: ImageUploaderDialog,\n    ImagePropertiesDialog: ImagePropertiesDialog\n  },\n  props: {\n    imagesListResource: {\n      type: Object,\n      default: function _default() {\n        null;\n      }\n    },\n    uploadUrl: {\n      type: String\n    },\n    imagesBasePath: {\n      type: String\n    },\n    visible: {\n      type: Boolean,\n      default: false\n    },\n    newitem: {\n      type: Boolean,\n      default: false\n    },\n    type: {\n      type: String,\n      default: 'picture'\n    },\n    images: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    carousel: {\n      type: Boolean,\n      default: false\n    },\n    title: {\n      type: String,\n      default: ''\n    },\n    description: {\n      type: String,\n      default: ''\n    },\n    padding: {\n      type: String,\n      default: '0'\n    }\n  },\n  data: function data() {\n    return {\n      dialogVisible: this.visible,\n      galleryTitle: this.title,\n      galleryDescription: this.description,\n      galleryPadding: this.padding,\n      galleryCarousel: this.carousel,\n      lightbox: false,\n      imagePropertiesDialogVisible: false,\n      imageUploaderDialogVisible: false,\n      imageParams: {\n        url: null,\n        title: null,\n        description: null,\n        alt: null,\n        code: null\n      },\n      pickedImages: []\n    };\n  },\n  watch: {\n    visible: function visible() {\n      this.dialogVisible = this.visible;\n    },\n    dialogVisible: function dialogVisible() {\n      if (this.dialogVisible) {\n        this.resetImages(this.images);\n        this.galleryTitle = this.title;\n        this.galleryDescription = this.description;\n        this.galleryPadding = this.padding;\n        this.galleryCarousel = this.carousel;\n        this.lightbox = this.images && this.images.length > 0 && this.images[0].lightbox == 'true';\n      } else {\n        this.closeDialog();\n      }\n    },\n    lightbox: function lightbox() {\n      this.setLightbox(this.lightbox);\n    }\n  },\n  methods: {\n    // ImageUploaderDialog\n    onImageUploaderDialogClosed: function onImageUploaderDialogClosed(images) {\n      this.imageUploaderDialogVisible = false;\n      this.$emit('image-uploader-dialog-closed', images);\n    },\n    onShowUploaderDialogRequested: function onShowUploaderDialogRequested() {\n      var _this = this;\n\n      this.imageUploaderDialogVisible = true;\n      var self = this;\n      return new Promise(function (resolve) {\n        _this.$once('image-uploader-dialog-closed', function (images) {\n          resolve(images);\n          self.resetImages(images);\n        });\n      });\n    },\n    // ImagePropertiesDialog\n    onImagePropertiesDialogClosed: function onImagePropertiesDialogClosed(image) {\n      this.imagePropertiesDialogVisible = false;\n      this.$emit('image-properties-dialog-closed', image);\n    },\n    onShowPropertiesDialogRequested: function onShowPropertiesDialogRequested(dialogData, url) {\n      var _this2 = this;\n\n      for (var propertyName in this.imageParams) {\n        this.imageParams[propertyName] = dialogData[propertyName];\n      }\n\n      this.imageParams.url = url;\n      this.imagePropertiesDialogVisible = true;\n      var self = this;\n      return new Promise(function (resolve) {\n        _this2.$once('image-properties-dialog-closed', function (image) {\n          resolve(image);\n          self.updateProperties(image);\n        });\n      });\n    },\n    // ImageBrowserDialog\n    closeDialog: function closeDialog() {\n      this.$emit('close', null);\n    },\n    done: function done() {\n      this.$emit('close', {\n        title: this.galleryTitle,\n        description: this.galleryDescription,\n        padding: this.galleryPadding,\n        carousel: this.galleryCarousel,\n        images: this.pickedImages\n      });\n    },\n    removeImage: function removeImage(image) {\n      if (this.type != 'picture') {\n        for (var i = 0; i < this.pickedImages.length; i++) {\n          if (image.code === this.pickedImages[i].code) {\n            this.pickedImages.splice(i, 1);\n          }\n        }\n      } else {\n        this.pickedImages.pop();\n      }\n    },\n    updateProperties: function updateProperties(image) {\n      if (image != null) {\n        this.pickedImages.forEach(function (element) {\n          if (element.code == image.code) {\n            element.title = image.title;\n            element.description = image.description;\n            element.alt = image.alt;\n          }\n        });\n      }\n    },\n    resetImages: function resetImages(images) {\n      var _this3 = this;\n\n      this.pickedImages = [];\n\n      if (images && images.length > 0) {\n        images.forEach(function (element) {\n          _this3.pickedImages.push(element);\n        });\n      }\n    },\n    setLightbox: function setLightbox(lightbox) {\n      this.pickedImages.forEach(function (element) {\n        element.lightbox = lightbox;\n      });\n    },\n    getThumbUrl: function getThumbUrl(code, sizes, formats) {\n      return this.$store.getters['settings/settings'].imageBasePath.replace(/\\\\$/, '') + '/' + code + '_' + sizes[0] + '.' + formats[0];\n    }\n  },\n  computed: {\n    validPadding: function validPadding() {\n      return !(this.galleryPadding && this.galleryPadding.length > 0) || Number.isInteger(Number(this.galleryPadding));\n    },\n    validImageList: function validImageList() {\n      return this.pickedImages.length > 0;\n    },\n    color: function color() {\n      switch (this.type) {\n        case 'comparsion':\n          return '#4DD0E1';\n\n        case 'gallery':\n          return '#FFB74D';\n\n        case 'image':\n        default:\n          return '#4DB6AC';\n      }\n    }\n  }\n};",{"version":3,"sources":["imageBrowserDialog.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div>\r\n        <v-dialog\r\n            ref=\"dialog\"\r\n            v-model=\"dialogVisible\"\r\n            content-class=\"image-picker\"\r\n            min-width=\"90vw\"\r\n            min-height=\"90vh\"\r\n            scrollable\r\n        >\r\n            <v-card>\r\n                <v-toolbar dark :color=\"color\">\r\n                    <v-toolbar-title>Image selector {{ type.toUpperCase() }}</v-toolbar-title>\r\n                    <v-spacer></v-spacer>\r\n                    <v-btn icon dark @click.native=\"closeDialog\">\r\n                        <v-icon>close</v-icon>\r\n                    </v-btn>\r\n                </v-toolbar>\r\n                <v-card-text>\r\n                    <v-card-actions style=\"display: inline-block\">\r\n                        <v-btn color=\"success\" @click=\"onShowUploaderDialogRequested\">Select or upload</v-btn>\r\n                    </v-card-actions>\r\n\r\n                    <v-card class=\"image-list-preview-card\">\r\n                        <v-card-title>Selected image{{ type == 'picture' ? '' : 's'}}</v-card-title>\r\n                        <v-card-text>\r\n                            <div class=\"image-list-preview\">\r\n                                <SortableList v-model=\"pickedImages\" axis=\"x\" lockAxis=\"x\" helperClass=\"dragDropImagePreview\">\r\n                                    <SortableItem v-for=\"(item, index) in pickedImages\" :index=\"index\" :key=\"index\">\r\n                                        <div class=\"image-preview\" :class=\"{ 'with-title' : (item.title.length > 0) }\">\r\n                                            <img style=\"max-height: 300px;\" :src=\"getThumbUrl(item.code, item.thumbSizes, item.thumbFormats)\" class=\"image\"/>\r\n                                            <v-icon @click=\"onShowPropertiesDialogRequested(item, getThumbUrl(item.code, item.thumbSizes, item.thumbFormats))\" class=\"edit-icon\">edit</v-icon>\r\n                                            <v-icon @click=\"removeImage(item)\" class=\"remove-icon\">delete</v-icon>\r\n                                            <div class=\"title\" v-if=\"item.title.length > 0\">{{ item.title }}</div>\r\n                                        </div>\r\n                                    </SortableItem>\r\n                                </SortableList>\r\n                            </div>\r\n                        </v-card-text>\r\n                    </v-card>\r\n\r\n                    <v-expansion-panel>\r\n                        <v-expansion-panel-content>\r\n                            <div slot=\"header\">Advanced settings</div>\r\n                            <v-card>\r\n                                <v-card-text>\r\n                                    <template v-if=\"type == 'gallery'\">\r\n                                        <v-text-field\r\n                                            :label=\"galleryTitle ? 'Gallery title' : ''\"\r\n                                            placeholder=\"Gallery title\"\r\n                                            v-model=\"galleryTitle\"\r\n                                        ></v-text-field>\r\n                                        <v-textarea\r\n                                            :label=\"galleryDescription ? 'Gallery description' : ''\"\r\n                                            placeholder=\"Gallery description\"\r\n                                            v-model=\"galleryDescription\"\r\n                                        ></v-textarea>\r\n                                        <v-text-field\r\n                                            :label=\"galleryPadding ? 'Padding' : ''\"\r\n                                            placeholder=\"Padding\"\r\n                                            v-model=\"galleryPadding\"\r\n                                            :rules=\"[() => validPadding || 'Must be a whole number']\"\r\n                                        ></v-text-field>\r\n                                        <v-switch\r\n                                            label=\"Carousel\"\r\n                                            v-model=\"galleryCarousel\"\r\n                                        ></v-switch>\r\n                                    </template>\r\n\r\n                                    <template v-if=\"type == 'comparsion'\">\r\n                                        <v-text-field\r\n                                            :label=\"galleryTitle ? 'Comparsion title' : ''\"\r\n                                            placeholder=\"Comparsion title\"\r\n                                            v-model=\"galleryTitle\"\r\n                                        ></v-text-field>\r\n                                        <v-textarea\r\n                                            :label=\"galleryDescription ? 'Comparsion description' : ''\"\r\n                                            placeholder=\"Comparsion description\"\r\n                                            v-model=\"galleryDescription\"\r\n                                        ></v-textarea>\r\n                                    </template>\r\n\r\n                                    <template v-if=\"(type == 'gallery') || (type == 'picture')\">\r\n                                        <v-switch\r\n                                            label=\"LightBox\"\r\n                                            v-model=\"lightbox\"\r\n                                        ></v-switch>\r\n                                    </template>\r\n                                </v-card-text>\r\n                            </v-card>\r\n                        </v-expansion-panel-content>\r\n                    </v-expansion-panel>\r\n                </v-card-text>\r\n\r\n                <v-alert\r\n                    :value=\"true\"\r\n                    type=\"error\"\r\n                    v-if=\"!validImageList\"\r\n                    class=\"alert\"\r\n                >\r\n                    At least one image is required\r\n                </v-alert>\r\n\r\n                <v-card-actions>\r\n                    <v-btn flat @click=\"closeDialog\">Cancel</v-btn>\r\n                    <v-btn color=\"blue darken-1\" flat @click=\"done\" v-if=\"validPadding && validImageList\">{{ newitem ? 'Add' : 'Save' }}</v-btn>\r\n                    <v-btn color=\"blue darken-1\" flat v-else disabled>{{ newitem ? 'Add' : 'Save' }}</v-btn>\r\n                </v-card-actions>\r\n            </v-card>\r\n        </v-dialog>\r\n        <ImageUploaderDialog\r\n            v-show=\"imageUploaderDialogVisible\"\r\n            :visible=\"imageUploaderDialogVisible\"\r\n            :images=\"pickedImages\"\r\n            :imagesListResource=\"imagesListResource\"\r\n            :uploadUrl=\"uploadUrl\"\r\n            :type=\"type\"\r\n            @close=\"onImageUploaderDialogClosed\"\r\n        />\r\n        <ImagePropertiesDialog\r\n            v-show=\"imagePropertiesDialogVisible\"\r\n            :visible=\"imagePropertiesDialogVisible\"\r\n            :url=\"imageParams.url\"\r\n            :title=\"imageParams.title\"\r\n            :description=\"imageParams.description\"\r\n            :alt=\"imageParams.alt\"\r\n            :code=\"imageParams.code\"\r\n            @close=\"onImagePropertiesDialogClosed\"\r\n        />\r\n    </div>\r\n</template>\r\n<script>\r\n    import ImageUploaderDialog from './imageUploaderDialog';\r\n    import ImagePropertiesDialog from './imagePropertiesDialog';\r\n\r\n    // Slicksort Plugins\r\n    import {ContainerMixin, ElementMixin} from 'vue-slicksort';\r\n    const SortableList = {\r\n        mixins  : [ContainerMixin],\r\n        template: `\r\n            <ul class=\"list\">\r\n            <slot />\r\n            </ul>\r\n        `,\r\n    };\r\n    const SortableItem = {\r\n        mixins  : [ElementMixin],\r\n        template: `\r\n            <li class=\"list-item\">\r\n                <slot />\r\n            </li>\r\n        `,\r\n    };\r\n\r\n    export default {\r\n        name        : 'ImageBrowserDialog',\r\n        components  : {\r\n            SortableItem,\r\n            SortableList,\r\n            ImageUploaderDialog,\r\n            ImagePropertiesDialog\r\n        },\r\n        props       : {\r\n            imagesListResource  : {\r\n                type    : Object,\r\n                default : () => {\r\n                    null\r\n                }\r\n            },\r\n            uploadUrl           : {\r\n                type    : String\r\n            },\r\n            imagesBasePath      : {\r\n                type    : String\r\n            },\r\n            visible             : {\r\n                type    : Boolean,\r\n                default : false\r\n            },\r\n            newitem : {\r\n                type   : Boolean,\r\n                default: false\r\n            },\r\n            type                : {\r\n                type    : String,\r\n                default : 'picture'\r\n            },\r\n            images              : {\r\n                type    : Array,\r\n                default : () => {\r\n                    return [];\r\n                }\r\n            },\r\n\r\n            carousel            : {\r\n                type    : Boolean,\r\n                default : false\r\n            },\r\n            title               : {\r\n                type    : String,\r\n                default : ''\r\n            },\r\n            description         : {\r\n                type    : String,\r\n                default : ''\r\n            },\r\n            padding             : {\r\n                type    : String,\r\n                default : '0'\r\n            }\r\n        },\r\n        data() {\r\n            return {\r\n                dialogVisible                   : this.visible,\r\n                galleryTitle                    : this.title,\r\n                galleryDescription              : this.description,\r\n                galleryPadding                  : this.padding,\r\n                galleryCarousel                 : this.carousel,\r\n                lightbox                        : false,\r\n                imagePropertiesDialogVisible    : false,\r\n                imageUploaderDialogVisible      : false,\r\n\r\n                imageParams: {\r\n                    url         : null,\r\n                    title       : null,\r\n                    description : null,\r\n                    alt         : null,\r\n                    code        : null\r\n                },\r\n\r\n                pickedImages    : []\r\n            }\r\n        },\r\n        watch: {\r\n            visible() {\r\n                this.dialogVisible = this.visible;\r\n            },\r\n            dialogVisible() {\r\n                if (this.dialogVisible) {\r\n                    this.resetImages(this.images);\r\n                    this.galleryTitle       = this.title;\r\n                    this.galleryDescription = this.description;\r\n                    this.galleryPadding     = this.padding;\r\n                    this.galleryCarousel    = this.carousel;\r\n                    this.lightbox           = this.images && (this.images.length > 0) && (this.images[0].lightbox == 'true');\r\n                } else {\r\n                    this.closeDialog();\r\n                }\r\n            },\r\n            lightbox() {\r\n                this.setLightbox(this.lightbox);\r\n            }\r\n        },\r\n        methods : {\r\n            // ImageUploaderDialog\r\n            onImageUploaderDialogClosed(images) {\r\n                this.imageUploaderDialogVisible = false;\r\n                this.$emit('image-uploader-dialog-closed', images);\r\n            },\r\n            onShowUploaderDialogRequested() {\r\n                this.imageUploaderDialogVisible = true;\r\n\r\n                let self = this;\r\n                return new Promise((resolve) => {\r\n                    this.$once('image-uploader-dialog-closed', (images) => {\r\n                        resolve(images);\r\n                        self.resetImages(images);\r\n                    });\r\n                })\r\n            },\r\n\r\n            // ImagePropertiesDialog\r\n            onImagePropertiesDialogClosed(image) {\r\n                this.imagePropertiesDialogVisible = false;\r\n                this.$emit('image-properties-dialog-closed', image);\r\n            },\r\n            onShowPropertiesDialogRequested(dialogData, url) {\r\n                for(var propertyName in this.imageParams) {\r\n                    this.imageParams[propertyName] = dialogData[propertyName];\r\n                }\r\n                this.imageParams.url = url;\r\n                this.imagePropertiesDialogVisible = true;\r\n\r\n                let self = this;\r\n                return new Promise((resolve) => {\r\n                    this.$once('image-properties-dialog-closed', (image) => {\r\n                        resolve(image);\r\n                        self.updateProperties(image);\r\n                    });\r\n                })\r\n            },\r\n\r\n            // ImageBrowserDialog\r\n            closeDialog() {\r\n                this.$emit('close', null);\r\n            },\r\n            done() {\r\n                this.$emit('close', {\r\n                    title       : this.galleryTitle,\r\n                    description : this.galleryDescription,\r\n                    padding     : this.galleryPadding,\r\n                    carousel    : this.galleryCarousel,\r\n                    images      : this.pickedImages\r\n                });\r\n            },\r\n\r\n            removeImage(image) {\r\n                if (this.type != 'picture') {\r\n                    for (let i = 0; i < this.pickedImages.length; i++) {\r\n                        if (image.code === this.pickedImages[i].code) {\r\n                            this.pickedImages.splice(i, 1);\r\n                        }\r\n                    }\r\n                } else {\r\n                    this.pickedImages.pop();\r\n                }\r\n            },\r\n            updateProperties(image) {\r\n                if (image != null) {\r\n                    this.pickedImages.forEach(element => {\r\n                        if (element.code == image.code) {\r\n                            element.title       = image.title;\r\n                            element.description = image.description;\r\n                            element.alt         = image.alt;\r\n                        }\r\n                    });\r\n                }\r\n            },\r\n            resetImages(images) {\r\n                this.pickedImages = [];\r\n                if (images && images.length > 0) {\r\n                    images.forEach(element => {\r\n                        this.pickedImages.push(element);\r\n                    });\r\n                }\r\n            },\r\n            setLightbox(lightbox) {\r\n                this.pickedImages.forEach(element => {\r\n                    element.lightbox = lightbox;\r\n                });\r\n            },\r\n\r\n            getThumbUrl(code, sizes, formats) {\r\n                return this.$store.getters['settings/settings'].imageBasePath.replace(/\\\\$/, '') + '/' +\r\n                    code + '_' + sizes[0] + '.' + formats[0];\r\n            }\r\n        },\r\n        computed: {\r\n            validPadding() {\r\n                return !(this.galleryPadding && (this.galleryPadding.length > 0)) || Number.isInteger(Number(this.galleryPadding));\r\n            },\r\n            validImageList() {\r\n                return (this.pickedImages.length > 0);\r\n            },\r\n            color() {\r\n                switch(this.type) {\r\n                    case 'comparsion':\r\n                        return '#4DD0E1';\r\n                    case 'gallery':\r\n                        return '#FFB74D';\r\n                    case 'image': default:\r\n                        return '#4DB6AC';\r\n                }   \r\n            }\r\n        }\r\n    }\r\n</script>\r\n<style scoped lang=\"scss\">\r\n    .alert {\r\n        width: 100%;\r\n    }\r\n\r\n    li {\r\n        list-style-type: none;\r\n\r\n        .edit-icon, .remove-icon {\r\n            display: none;\r\n        }\r\n    }\r\n\r\n    .image-list-preview-card {\r\n        padding-left: 8px;\r\n        margin-bottom: 5px;\r\n\r\n        .image-list-preview {\r\n            //height: 350px;\r\n            margin: 15px;\r\n            overflow-x: auto;\r\n            overflow-y: hidden;\r\n            padding-bottom: 10px;\r\n\r\n            .list {\r\n                display: flex;\r\n            }\r\n\r\n            .image-preview {\r\n                //height: 300px;\r\n                display: inline-block;\r\n                margin-right: 15px;\r\n                position: relative;\r\n                cursor: pointer;\r\n                z-index: 10000;\r\n                border: 1px #3f97f6 solid;\r\n                padding: 10px;\r\n\r\n                img {\r\n                    height: 150px;\r\n                    display: inline-block;\r\n                }\r\n\r\n                .edit-icon, .remove-icon {\r\n                    display: block;\r\n                    color: #3f97f6;\r\n                    font-size: 36px;\r\n                    opacity: 1;\r\n                    position: absolute;\r\n                    top: 0;\r\n                    right: 0;\r\n                    margin: 10px;\r\n                }\r\n\r\n                .remove-icon {\r\n                    top: 45px;\r\n                }\r\n\r\n                .title {\r\n                    width: 100%;\r\n                }\r\n            }\r\n        }\r\n    }\r\n</style>"],"sourceRoot":"src/components/editor/imageBrowser"}]}