{"remainingRequest":"C:\\work\\bi-admin-vue-new\\node_modules\\thread-loader\\dist\\cjs.js!C:\\work\\bi-admin-vue-new\\node_modules\\babel-loader\\lib\\index.js!C:\\work\\bi-admin-vue-new\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\work\\bi-admin-vue-new\\src\\store\\modules\\user.js","dependencies":[{"path":"C:\\work\\bi-admin-vue-new\\src\\store\\modules\\user.js","mtime":1552754725293},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nimport _defineProperty from \"C:\\\\work\\\\bi-admin-vue-new\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\work\\\\bi-admin-vue-new\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport * as types from '../mutation-types';\nimport debug from 'debug';\nvar log = debug('bi-admin-vue:store:user');\nexport default {\n  build: function build(Vue, UserResource, AuthResource) {\n    var _mutations;\n\n    var state = {\n      data: null,\n      isLogged: false,\n      loading: false\n    };\n    var getters = {\n      user: function user(state) {\n        return state.data;\n      },\n      isLogged: function isLogged(state) {\n        return state.isLogged;\n      },\n      loading: function loading(state) {\n        return state.loading;\n      }\n    };\n    var actions = {\n      getUser: function () {\n        var _getUser = _asyncToGenerator(\n        /*#__PURE__*/\n        regeneratorRuntime.mark(function _callee(_ref) {\n          var commit, state, response;\n          return regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  commit = _ref.commit, state = _ref.state;\n                  commit(types.LOADING, true);\n\n                  if (UserResource) {\n                    _context.next = 7;\n                    break;\n                  }\n\n                  log('No UserResource provided. Using default.');\n                  _context.next = 6;\n                  return import('./../../service/user');\n\n                case 6:\n                  UserResource = _context.sent;\n\n                case 7:\n                  _context.prev = 7;\n                  _context.next = 10;\n                  return UserResource.get();\n\n                case 10:\n                  response = _context.sent;\n                  commit(types.RECEIVE_USER, response.data);\n                  commit(types.IS_LOGGED_IN, true);\n                  commit(types.LOADING, false);\n                  log('User data loaded:', response.data);\n                  _context.next = 23;\n                  break;\n\n                case 17:\n                  _context.prev = 17;\n                  _context.t0 = _context[\"catch\"](7);\n                  commit(types.RECEIVE_USER, null);\n                  commit(types.IS_LOGGED_IN, false);\n                  commit(types.LOADING, false);\n                  log('Unable to get user', _context.t0);\n\n                case 23:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, null, [[7, 17]]);\n        }));\n\n        function getUser(_x) {\n          return _getUser.apply(this, arguments);\n        }\n\n        return getUser;\n      }(),\n      logout: function () {\n        var _logout = _asyncToGenerator(\n        /*#__PURE__*/\n        regeneratorRuntime.mark(function _callee2(_ref2, data) {\n          var commit;\n          return regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  commit = _ref2.commit;\n\n                  if (AuthResource) {\n                    _context2.next = 6;\n                    break;\n                  }\n\n                  log('No AuthResource provided. Using default.');\n                  _context2.next = 5;\n                  return import('./../../service/auth');\n\n                case 5:\n                  AuthResource = _context2.sent;\n\n                case 6:\n                  _context2.prev = 6;\n                  _context2.next = 9;\n                  return AuthResource.logout(data);\n\n                case 9:\n                  commit(types.IS_LOGGED_IN, false);\n                  commit(types.RECEIVE_USER, null);\n                  log('User logged out!');\n                  _context2.next = 18;\n                  break;\n\n                case 14:\n                  _context2.prev = 14;\n                  _context2.t0 = _context2[\"catch\"](6);\n                  log('Unable to logout', _context2.t0);\n                  throw _context2.t0;\n\n                case 18:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2, null, [[6, 14]]);\n        }));\n\n        function logout(_x2, _x3) {\n          return _logout.apply(this, arguments);\n        }\n\n        return logout;\n      }(),\n      login: function () {\n        var _login = _asyncToGenerator(\n        /*#__PURE__*/\n        regeneratorRuntime.mark(function _callee3(_ref3, data) {\n          var commit;\n          return regeneratorRuntime.wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  commit = _ref3.commit;\n                  commit(types.LOADING, true);\n\n                  if (AuthResource) {\n                    _context3.next = 7;\n                    break;\n                  }\n\n                  log('No AuthResource provided. Using default.');\n                  _context3.next = 6;\n                  return import('./../../service/auth');\n\n                case 6:\n                  AuthResource = _context3.sent;\n\n                case 7:\n                  _context3.prev = 7;\n                  _context3.next = 10;\n                  return AuthResource.login(data);\n\n                case 10:\n                  commit(types.IS_LOGGED_IN, true);\n                  commit(types.LOADING, false);\n                  log('User logged in!');\n                  _context3.next = 21;\n                  break;\n\n                case 15:\n                  _context3.prev = 15;\n                  _context3.t0 = _context3[\"catch\"](7);\n                  commit(types.IS_LOGGED_IN, false);\n                  commit(types.LOADING, false);\n                  log('Unable to login', _context3.t0);\n                  throw _context3.t0;\n\n                case 21:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, _callee3, null, [[7, 15]]);\n        }));\n\n        function login(_x4, _x5) {\n          return _login.apply(this, arguments);\n        }\n\n        return login;\n      }()\n    };\n    var mutations = (_mutations = {}, _defineProperty(_mutations, types.RECEIVE_USER, function (state, val) {\n      Vue.set(state, 'data', val);\n    }), _defineProperty(_mutations, types.IS_LOGGED_IN, function (state, val) {\n      Vue.set(state, 'isLogged', val);\n    }), _defineProperty(_mutations, types.LOADING, function (state, boolean) {\n      Vue.set(state, 'loading', boolean);\n    }), _mutations);\n    return {\n      namespaced: true,\n      state: state,\n      actions: actions,\n      getters: getters,\n      mutations: mutations\n    };\n  }\n};",{"version":3,"sources":["C:\\work\\bi-admin-vue-new\\src\\store\\modules\\user.js"],"names":["types","debug","log","build","Vue","UserResource","AuthResource","state","data","isLogged","loading","getters","user","actions","getUser","commit","LOADING","get","response","RECEIVE_USER","IS_LOGGED_IN","logout","login","mutations","val","set","boolean","namespaced"],"mappings":"AAAA;;;;;AACA,OAAO,KAAKA,KAAZ,MAAuB,mBAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,IAAMC,GAAG,GAAGD,KAAK,CAAC,yBAAD,CAAjB;AAEA,eAAe;AACXE,EAAAA,KADW,iBACLC,GADK,EACAC,YADA,EACcC,YADd,EAC4B;AAAA;;AACnC,QAAIC,KAAK,GAAG;AACRC,MAAAA,IAAI,EAAE,IADE;AAERC,MAAAA,QAAQ,EAAE,KAFF;AAGRC,MAAAA,OAAO,EAAE;AAHD,KAAZ;AAMA,QAAIC,OAAO,GAAG;AACVC,MAAAA,IAAI,EAAE,cAACL,KAAD,EAAW;AACb,eAAOA,KAAK,CAACC,IAAb;AACH,OAHS;AAIVC,MAAAA,QAAQ,EAAE,kBAACF,KAAD,EAAW;AACjB,eAAOA,KAAK,CAACE,QAAb;AACH,OANS;AAOVC,MAAAA,OAAO,EAAE,iBAACH,KAAD,EAAW;AAChB,eAAOA,KAAK,CAACG,OAAb;AACH;AATS,KAAd;AAYA,QAAIG,OAAO,GAAG;AACJC,MAAAA,OADI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACKC,kBAAAA,MADL,QACKA,MADL,EACaR,KADb,QACaA,KADb;AAENQ,kBAAAA,MAAM,CAACf,KAAK,CAACgB,OAAP,EAAgB,IAAhB,CAAN;;AAFM,sBAGDX,YAHC;AAAA;AAAA;AAAA;;AAIFH,kBAAAA,GAAG,CAAC,0CAAD,CAAH;AAJE;AAAA,yBAKmB,OAAO,sBAAP,CALnB;;AAAA;AAKFG,kBAAAA,YALE;;AAAA;AAAA;AAAA;AAAA,yBAQmBA,YAAY,CAACY,GAAb,EARnB;;AAAA;AAQEC,kBAAAA,QARF;AASFH,kBAAAA,MAAM,CAACf,KAAK,CAACmB,YAAP,EAAqBD,QAAQ,CAACV,IAA9B,CAAN;AACAO,kBAAAA,MAAM,CAACf,KAAK,CAACoB,YAAP,EAAqB,IAArB,CAAN;AACAL,kBAAAA,MAAM,CAACf,KAAK,CAACgB,OAAP,EAAgB,KAAhB,CAAN;AACAd,kBAAAA,GAAG,CAAC,mBAAD,EAAsBgB,QAAQ,CAACV,IAA/B,CAAH;AAZE;AAAA;;AAAA;AAAA;AAAA;AAcFO,kBAAAA,MAAM,CAACf,KAAK,CAACmB,YAAP,EAAqB,IAArB,CAAN;AACAJ,kBAAAA,MAAM,CAACf,KAAK,CAACoB,YAAP,EAAqB,KAArB,CAAN;AACAL,kBAAAA,MAAM,CAACf,KAAK,CAACgB,OAAP,EAAgB,KAAhB,CAAN;AACAd,kBAAAA,GAAG,CAAC,oBAAD,cAAH;;AAjBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAoBJmB,MAAAA,MApBI;AAAA;AAAA;AAAA,yDAoBab,IApBb;AAAA;AAAA;AAAA;AAAA;AAAA;AAoBIO,kBAAAA,MApBJ,SAoBIA,MApBJ;;AAAA,sBAqBDT,YArBC;AAAA;AAAA;AAAA;;AAsBFJ,kBAAAA,GAAG,CAAC,0CAAD,CAAH;AAtBE;AAAA,yBAuBmB,OAAO,sBAAP,CAvBnB;;AAAA;AAuBFI,kBAAAA,YAvBE;;AAAA;AAAA;AAAA;AAAA,yBA0BIA,YAAY,CAACe,MAAb,CAAoBb,IAApB,CA1BJ;;AAAA;AA2BFO,kBAAAA,MAAM,CAACf,KAAK,CAACoB,YAAP,EAAqB,KAArB,CAAN;AACAL,kBAAAA,MAAM,CAACf,KAAK,CAACmB,YAAP,EAAqB,IAArB,CAAN;AACAjB,kBAAAA,GAAG,CAAC,kBAAD,CAAH;AA7BE;AAAA;;AAAA;AAAA;AAAA;AA+BFA,kBAAAA,GAAG,CAAC,kBAAD,eAAH;AA/BE;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAmCJoB,MAAAA,KAnCI;AAAA;AAAA;AAAA,yDAmCYd,IAnCZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAmCGO,kBAAAA,MAnCH,SAmCGA,MAnCH;AAoCNA,kBAAAA,MAAM,CAACf,KAAK,CAACgB,OAAP,EAAgB,IAAhB,CAAN;;AApCM,sBAqCDV,YArCC;AAAA;AAAA;AAAA;;AAsCFJ,kBAAAA,GAAG,CAAC,0CAAD,CAAH;AAtCE;AAAA,yBAuCmB,OAAO,sBAAP,CAvCnB;;AAAA;AAuCFI,kBAAAA,YAvCE;;AAAA;AAAA;AAAA;AAAA,yBA0CIA,YAAY,CAACgB,KAAb,CAAmBd,IAAnB,CA1CJ;;AAAA;AA2CFO,kBAAAA,MAAM,CAACf,KAAK,CAACoB,YAAP,EAAqB,IAArB,CAAN;AACAL,kBAAAA,MAAM,CAACf,KAAK,CAACgB,OAAP,EAAgB,KAAhB,CAAN;AACAd,kBAAAA,GAAG,CAAC,iBAAD,CAAH;AA7CE;AAAA;;AAAA;AAAA;AAAA;AA+CFa,kBAAAA,MAAM,CAACf,KAAK,CAACoB,YAAP,EAAqB,KAArB,CAAN;AACAL,kBAAAA,MAAM,CAACf,KAAK,CAACgB,OAAP,EAAgB,KAAhB,CAAN;AACAd,kBAAAA,GAAG,CAAC,iBAAD,eAAH;AAjDE;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,KAAd;AAuDA,QAAIqB,SAAS,iDACRvB,KAAK,CAACmB,YADE,YACYZ,KADZ,EACmBiB,GADnB,EACwB;AAC7BpB,MAAAA,GAAG,CAACqB,GAAJ,CAAQlB,KAAR,EAAe,MAAf,EAAuBiB,GAAvB;AACH,KAHQ,+BAIRxB,KAAK,CAACoB,YAJE,YAIYb,KAJZ,EAImBiB,GAJnB,EAIwB;AAC7BpB,MAAAA,GAAG,CAACqB,GAAJ,CAAQlB,KAAR,EAAe,UAAf,EAA2BiB,GAA3B;AACH,KANQ,+BAORxB,KAAK,CAACgB,OAPE,YAOOT,KAPP,EAOcmB,OAPd,EAOuB;AAC5BtB,MAAAA,GAAG,CAACqB,GAAJ,CAAQlB,KAAR,EAAe,SAAf,EAA0BmB,OAA1B;AACH,KATQ,cAAb;AAYA,WAAO;AACHC,MAAAA,UAAU,EAAE,IADT;AAEHpB,MAAAA,KAAK,EAALA,KAFG;AAGHM,MAAAA,OAAO,EAAPA,OAHG;AAIHF,MAAAA,OAAO,EAAPA,OAJG;AAKHY,MAAAA,SAAS,EAATA;AALG,KAAP;AAOH;AA9FU,CAAf","sourcesContent":["\"use strict\";\r\nimport * as types from '../mutation-types';\r\nimport debug from 'debug';\r\n\r\nconst log = debug('bi-admin-vue:store:user');\r\n\r\nexport default {\r\n    build(Vue, UserResource, AuthResource) {\r\n        let state = {\r\n            data: null,\r\n            isLogged: false,\r\n            loading: false,\r\n        };\r\n\r\n        let getters = {\r\n            user: (state) => {\r\n                return state.data;\r\n            },\r\n            isLogged: (state) => {\r\n                return state.isLogged;\r\n            },\r\n            loading: (state) => {\r\n                return state.loading;\r\n            },\r\n        };\r\n\r\n        let actions = {\r\n            async getUser({commit, state}) {\r\n                commit(types.LOADING, true);\r\n                if (!UserResource) {\r\n                    log('No UserResource provided. Using default.');\r\n                    UserResource = await import('./../../service/user');\r\n                }\r\n                try {\r\n                    let response = await UserResource.get();\r\n                    commit(types.RECEIVE_USER, response.data);\r\n                    commit(types.IS_LOGGED_IN, true);\r\n                    commit(types.LOADING, false);\r\n                    log('User data loaded:', response.data);\r\n                } catch (e) {\r\n                    commit(types.RECEIVE_USER, null);\r\n                    commit(types.IS_LOGGED_IN, false);\r\n                    commit(types.LOADING, false);\r\n                    log('Unable to get user', e);\r\n                }\r\n            },\r\n            async logout({commit}, data) {\r\n                if (!AuthResource) {\r\n                    log('No AuthResource provided. Using default.');\r\n                    AuthResource = await import('./../../service/auth');\r\n                }\r\n                try {\r\n                    await AuthResource.logout(data);\r\n                    commit(types.IS_LOGGED_IN, false);\r\n                    commit(types.RECEIVE_USER, null);\r\n                    log('User logged out!');\r\n                } catch(e) {\r\n                    log('Unable to logout', e);\r\n                    throw e;\r\n                }\r\n            },\r\n            async login({commit}, data) {\r\n                commit(types.LOADING, true);\r\n                if (!AuthResource) {\r\n                    log('No AuthResource provided. Using default.');\r\n                    AuthResource = await import('./../../service/auth');\r\n                }\r\n                try {\r\n                    await AuthResource.login(data)\r\n                    commit(types.IS_LOGGED_IN, true);\r\n                    commit(types.LOADING, false);\r\n                    log('User logged in!');\r\n                } catch(e) {\r\n                    commit(types.IS_LOGGED_IN, false);\r\n                    commit(types.LOADING, false);\r\n                    log('Unable to login', e);\r\n                    throw e;\r\n                }\r\n            }\r\n        };\r\n\r\n        let mutations = {\r\n            [types.RECEIVE_USER](state, val) {\r\n                Vue.set(state, 'data', val);\r\n            },\r\n            [types.IS_LOGGED_IN](state, val) {\r\n                Vue.set(state, 'isLogged', val);\r\n            },\r\n            [types.LOADING](state, boolean) {\r\n                Vue.set(state, 'loading', boolean);\r\n            }\r\n        };\r\n\r\n        return {\r\n            namespaced: true,\r\n            state,\r\n            actions,\r\n            getters,\r\n            mutations\r\n        };\r\n    }\r\n}\r\n"]}]}