{"remainingRequest":"C:\\work\\bi-admin-vue-new\\node_modules\\babel-loader\\lib\\index.js!C:\\work\\bi-admin-vue-new\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\work\\bi-admin-vue-new\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\work\\bi-admin-vue-new\\src\\demo\\page\\TableDemo.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\work\\bi-admin-vue-new\\src\\demo\\page\\TableDemo.vue","mtime":1552754725276},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\bi-admin-vue-new\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _Promise from \"C:\\\\work\\\\bi-admin-vue-new\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/promise\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\work\\\\bi-admin-vue-new\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport SimpleTableFilterDropdownFilter from './../../components/table/filter/SimpleTableFilterDropdownFilter';\nimport SimpleTableFilterTextFilter from './../../components/table/filter/SimpleTableFilterTextFilter';\nimport TableController from './../../table/controller';\nimport SimpleTableSortOrder from './../../table/sortOrder';\nexport default {\n  components: {\n    SimpleTableFilterTextFilter: SimpleTableFilterTextFilter\n  },\n  computed: {\n    fakeData: function fakeData() {\n      var rows = [];\n\n      for (var i = 1; i < 150; i++) {\n        rows.push({\n          id: i,\n          name: 'john' + i,\n          published: false,\n          type: Math.round(Math.random() * 2 + 1),\n          published_at: '2017-01-02 11:12:11'\n        });\n      }\n\n      return rows;\n    },\n    tableController: function tableController() {\n      var self = this;\n      return new TableController({\n        identifier: 'tableDemo1',\n        rowsPerPage: 10,\n        sortBy: 'name',\n        sortOrder: SimpleTableSortOrder.DESCENDING,\n        columns: [{\n          name: 'id',\n          title: 'ID',\n          align: 'left',\n          sortable: false\n        }, {\n          name: 'name',\n          title: 'Name',\n          sortable: true,\n          optional: true,\n          align: 'left'\n        }, {\n          name: 'type',\n          title: 'Type',\n          sortable: true,\n          optional: true\n        }, {\n          name: 'published',\n          title: 'Published',\n          align: 'left',\n          optional: true,\n          sortable: true\n        }, {\n          name: 'published_at',\n          title: 'Published at',\n          align: 'left',\n          optional: true,\n          sortable: true\n        }],\n        filter: {\n          //AND\n          text: {\n            widget: SimpleTableFilterTextFilter,\n            fields: {\n              //OR\n              name: {\n                operator: '$like'\n              }\n            },\n            hintText: this.$t('Start typing a name'),\n            label: this.$t('Search'),\n            visible: true,\n            defaultValue: ''\n          },\n          type: {\n            widget: SimpleTableFilterDropdownFilter,\n            fields: {\n              //OR\n              type: {\n                operator: '$eq'\n              }\n            },\n            items: function () {\n              var _items = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee() {\n                return regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        return _context.abrupt(\"return\", [{\n                          text: 'type 1',\n                          value: 1\n                        }, {\n                          text: 'type 2',\n                          value: 2\n                        }]);\n\n                      case 1:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee);\n              }));\n\n              function items() {\n                return _items.apply(this, arguments);\n              }\n\n              return items;\n            }(),\n            // items            : [\n            //     {text: 'type 1', value: 1},\n            //     {text: 'type 2', value: 2}\n            // ],\n            hintText: this.$t('Select a type'),\n            label: this.$t('Type'),\n            visible: true,\n            defaultValue: ''\n          }\n        }\n      }, {\n        /*\n        fake resource\n         */\n        get: function get(params) {\n          var filteredRows = self.fakeData;\n          filteredRows = filteredRows.filter(function (row) {\n            if (params.filter && params.filter.type && params.filter.type.value) {\n              return row.type === params.filter.type.value;\n            }\n\n            return true;\n          });\n          var limitedRows = filteredRows.slice((params.page - 1) * params.rowsPerPage, (params.page - 1) * params.rowsPerPage + params.rowsPerPage);\n          return _Promise.resolve({\n            data: {\n              rows: limitedRows,\n              count: filteredRows.length,\n              pages: Math.ceil(filteredRows.length / params.rowsPerPage),\n              page: params.page\n            }\n          });\n        }\n      });\n    }\n  },\n  methods: {\n    confirmDelete: function confirmDelete() {\n      return this.confirm('Are you sure to delete this item?');\n    }\n  }\n};",{"version":3,"sources":["TableDemo.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAkBA,OAAA,+BAAA,MAAA,iEAAA;AACA,OAAA,2BAAA,MAAA,6DAAA;AACA,OAAA,eAAA,MAAA,0BAAA;AACA,OAAA,oBAAA,MAAA,yBAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,2BAAA,EAAA;AADA,GADA;AAIA,EAAA,QAAA,EAAA;AACA,IAAA,QADA,sBACA;AACA,UAAA,IAAA,GAAA,EAAA;;AACA,WAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,GAAA,EAAA,CAAA,EAAA,EAAA;AACA,QAAA,IAAA,CAAA,IAAA,CAAA;AACA,UAAA,EAAA,EAAA,CADA;AAEA,UAAA,IAAA,EAAA,SAAA,CAFA;AAGA,UAAA,SAAA,EAAA,KAHA;AAIA,UAAA,IAAA,EAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,MAAA,KAAA,CAAA,GAAA,CAAA,CAJA;AAKA,UAAA,YAAA,EAAA;AALA,SAAA;AAOA;;AACA,aAAA,IAAA;AACA,KAbA;AAcA,IAAA,eAdA,6BAcA;AACA,UAAA,IAAA,GAAA,IAAA;AACA,aAAA,IAAA,eAAA,CAAA;AACA,QAAA,UAAA,EAAA,YADA;AAEA,QAAA,WAAA,EAAA,EAFA;AAGA,QAAA,MAAA,EAAA,MAHA;AAIA,QAAA,SAAA,EAAA,oBAAA,CAAA,UAJA;AAKA,QAAA,OAAA,EAAA,CACA;AACA,UAAA,IAAA,EAAA,IADA;AAEA,UAAA,KAAA,EAAA,IAFA;AAGA,UAAA,KAAA,EAAA,MAHA;AAIA,UAAA,QAAA,EAAA;AAJA,SADA,EAOA;AACA,UAAA,IAAA,EAAA,MADA;AAEA,UAAA,KAAA,EAAA,MAFA;AAGA,UAAA,QAAA,EAAA,IAHA;AAIA,UAAA,QAAA,EAAA,IAJA;AAKA,UAAA,KAAA,EAAA;AALA,SAPA,EAcA;AACA,UAAA,IAAA,EAAA,MADA;AAEA,UAAA,KAAA,EAAA,MAFA;AAGA,UAAA,QAAA,EAAA,IAHA;AAIA,UAAA,QAAA,EAAA;AAJA,SAdA,EAoBA;AACA,UAAA,IAAA,EAAA,WADA;AAEA,UAAA,KAAA,EAAA,WAFA;AAGA,UAAA,KAAA,EAAA,MAHA;AAIA,UAAA,QAAA,EAAA,IAJA;AAKA,UAAA,QAAA,EAAA;AALA,SApBA,EA2BA;AACA,UAAA,IAAA,EAAA,cADA;AAEA,UAAA,KAAA,EAAA,cAFA;AAGA,UAAA,KAAA,EAAA,MAHA;AAIA,UAAA,QAAA,EAAA,IAJA;AAKA,UAAA,QAAA,EAAA;AALA,SA3BA,CALA;AAwCA,QAAA,MAAA,EAAA;AAAA;AACA,UAAA,IAAA,EAAA;AACA,YAAA,MAAA,EAAA,2BADA;AAEA,YAAA,MAAA,EAAA;AAAA;AACA,cAAA,IAAA,EAAA;AACA,gBAAA,QAAA,EAAA;AADA;AADA,aAFA;AAOA,YAAA,QAAA,EAAA,KAAA,EAAA,CAAA,qBAAA,CAPA;AAQA,YAAA,KAAA,EAAA,KAAA,EAAA,CAAA,QAAA,CARA;AASA,YAAA,OAAA,EAAA,IATA;AAUA,YAAA,YAAA,EAAA;AAVA,WADA;AAaA,UAAA,IAAA,EAAA;AACA,YAAA,MAAA,EAAA,+BADA;AAEA,YAAA,MAAA,EAAA;AAAA;AACA,cAAA,IAAA,EAAA;AACA,gBAAA,QAAA,EAAA;AADA;AADA,aAFA;AAOA,YAAA,KAAA;AAAA;AAAA;AAAA,sCAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yDACA,CACA;AAAA,0BAAA,IAAA,EAAA,QAAA;AAAA,0BAAA,KAAA,EAAA;AAAA,yBADA,EAEA;AAAA,0BAAA,IAAA,EAAA,QAAA;AAAA,0BAAA,KAAA,EAAA;AAAA,yBAFA,CADA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,eAPA;AAaA;AACA;AACA;AACA;AACA,YAAA,QAAA,EAAA,KAAA,EAAA,CAAA,eAAA,CAjBA;AAkBA,YAAA,KAAA,EAAA,KAAA,EAAA,CAAA,MAAA,CAlBA;AAmBA,YAAA,OAAA,EAAA,IAnBA;AAoBA,YAAA,YAAA,EAAA;AApBA;AAbA;AAxCA,OAAA,EA4EA;AACA;;;AAGA,QAAA,GAJA,eAIA,MAJA,EAIA;AAEA,cAAA,YAAA,GAAA,IAAA,CAAA,QAAA;AACA,UAAA,YAAA,GAAA,YAAA,CAAA,MAAA,CAAA,UAAA,GAAA,EAAA;AACA,gBAAA,MAAA,CAAA,MAAA,IAAA,MAAA,CAAA,MAAA,CAAA,IAAA,IAAA,MAAA,CAAA,MAAA,CAAA,IAAA,CAAA,KAAA,EAAA;AACA,qBAAA,GAAA,CAAA,IAAA,KAAA,MAAA,CAAA,MAAA,CAAA,IAAA,CAAA,KAAA;AACA;;AACA,mBAAA,IAAA;AACA,WALA,CAAA;AAMA,cAAA,WAAA,GAAA,YAAA,CAAA,KAAA,CAAA,CAAA,MAAA,CAAA,IAAA,GAAA,CAAA,IAAA,MAAA,CAAA,WAAA,EAAA,CAAA,MAAA,CAAA,IAAA,GAAA,CAAA,IAAA,MAAA,CAAA,WAAA,GAAA,MAAA,CAAA,WAAA,CAAA;AAEA,iBAAA,SAAA,OAAA,CACA;AACA,YAAA,IAAA,EAAA;AACA,cAAA,IAAA,EAAA,WADA;AAEA,cAAA,KAAA,EAAA,YAAA,CAAA,MAFA;AAGA,cAAA,KAAA,EAAA,IAAA,CAAA,IAAA,CAAA,YAAA,CAAA,MAAA,GAAA,MAAA,CAAA,WAAA,CAHA;AAIA,cAAA,IAAA,EAAA,MAAA,CAAA;AAJA;AADA,WADA,CAAA;AAUA;AAzBA,OA5EA,CAAA;AAuGA;AAvHA,GAJA;AA6HA,EAAA,OAAA,EAAA;AACA,IAAA,aADA,2BACA;AACA,aAAA,KAAA,OAAA,CAAA,mCAAA,CAAA;AACA;AAHA;AA7HA,CAAA","sourcesContent":["<template>\r\n    <SimplePage>\r\n        <div slot=\"content\">\r\n            <SimpleTableFilter :controller=\"tableController\"></SimpleTableFilter>\r\n            <SimpleTable :controller=\"tableController\">\r\n                <template slot=\"actions\" slot-scope=\"props\">\r\n                    <v-btn title=\"Details\" icon>\r\n                        <v-icon>info_outline</v-icon>\r\n                    </v-btn>\r\n                    <v-btn title=\"Delete\" icon>\r\n                        <v-icon>delete</v-icon>\r\n                    </v-btn>\r\n                </template>\r\n            </SimpleTable>\r\n        </div>\r\n    </SimplePage>\r\n</template>\r\n<script>\r\n    import SimpleTableFilterDropdownFilter from './../../components/table/filter/SimpleTableFilterDropdownFilter';\r\n    import SimpleTableFilterTextFilter from './../../components/table/filter/SimpleTableFilterTextFilter';\r\n    import TableController from './../../table/controller';\r\n    import SimpleTableSortOrder from './../../table/sortOrder';\r\n\r\n    export default {\r\n        components: {\r\n            SimpleTableFilterTextFilter\r\n        },\r\n        computed  : {\r\n            fakeData() {\r\n                let rows = [];\r\n                for (let i = 1; i < 150; i++) {\r\n                    rows.push({\r\n                        id          : i,\r\n                        name        : 'john' + i,\r\n                        published   : false,\r\n                        type        : Math.round(Math.random() * 2 + 1),\r\n                        published_at: '2017-01-02 11:12:11'\r\n                    });\r\n                }\r\n                return rows;\r\n            },\r\n            tableController() {\r\n                let self = this;\r\n                return new TableController({\r\n                    identifier : 'tableDemo1',\r\n                    rowsPerPage: 10,\r\n                    sortBy     : 'name',\r\n                    sortOrder  : SimpleTableSortOrder.DESCENDING,\r\n                    columns    : [\r\n                        {\r\n                            name    : 'id',\r\n                            title   : 'ID',\r\n                            align   : 'left',\r\n                            sortable: false\r\n                        },\r\n                        {\r\n                            name    : 'name',\r\n                            title   : 'Name',\r\n                            sortable: true,\r\n                            optional: true,\r\n                            align   : 'left'\r\n                        },\r\n                        {\r\n                            name    : 'type',\r\n                            title   : 'Type',\r\n                            sortable: true,\r\n                            optional: true,\r\n                        },\r\n                        {\r\n                            name    : 'published',\r\n                            title   : 'Published',\r\n                            align   : 'left',\r\n                            optional: true,\r\n                            sortable: true,\r\n                        },\r\n                        {\r\n                            name    : 'published_at',\r\n                            title   : 'Published at',\r\n                            align   : 'left',\r\n                            optional: true,\r\n                            sortable: true,\r\n                        }\r\n                    ],\r\n                    filter     : { //AND\r\n                        text: {\r\n                            widget      : SimpleTableFilterTextFilter,\r\n                            fields      : { //OR\r\n                                name: {\r\n                                    operator: '$like'\r\n                                },\r\n                            },\r\n                            hintText    : this.$t('Start typing a name'),\r\n                            label       : this.$t('Search'),\r\n                            visible     : true,\r\n                            defaultValue: ''\r\n                        },\r\n                        type: {\r\n                            widget           : SimpleTableFilterDropdownFilter,\r\n                            fields           : { //OR\r\n                                type: {\r\n                                    operator: '$eq'\r\n                                },\r\n                            },\r\n                            items: async () => {\r\n                                return [\r\n                                    {text: 'type 1', value: 1},\r\n                                    {text: 'type 2', value: 2}\r\n                                ]\r\n                            },\r\n                            // items            : [\r\n                            //     {text: 'type 1', value: 1},\r\n                            //     {text: 'type 2', value: 2}\r\n                            // ],\r\n                            hintText         : this.$t('Select a type'),\r\n                            label            : this.$t('Type'),\r\n                            visible          : true,\r\n                            defaultValue     : ''\r\n                        }\r\n                    },\r\n                }, {\r\n                    /*\r\n                    fake resource\r\n                     */\r\n                    get(params) {\r\n\r\n                        let filteredRows = self.fakeData;\r\n                        filteredRows = filteredRows.filter((row) => {\r\n                            if (params.filter && params.filter.type && params.filter.type.value) {\r\n                                return row.type === params.filter.type.value;\r\n                            }\r\n                            return true;\r\n                        });\r\n                        let limitedRows = filteredRows.slice((params.page - 1) * params.rowsPerPage, (params.page - 1) * params.rowsPerPage + params.rowsPerPage);\r\n\r\n                        return Promise.resolve(\r\n                            {\r\n                                data: {\r\n                                    rows : limitedRows,\r\n                                    count: filteredRows.length,\r\n                                    pages: Math.ceil(filteredRows.length / params.rowsPerPage),\r\n                                    page : params.page\r\n                                }\r\n                            }\r\n                        )\r\n                    }\r\n                })\r\n            }\r\n        },\r\n        methods   : {\r\n            confirmDelete() {\r\n                return this.confirm('Are you sure to delete this item?');\r\n            }\r\n        }\r\n    }\r\n</script>"],"sourceRoot":"src/demo/page"}]}