{"remainingRequest":"C:\\work\\chat-client\\node_modules\\babel-loader\\lib\\index.js!C:\\work\\chat-client\\src\\store\\user.js","dependencies":[{"path":"C:\\work\\chat-client\\src\\store\\user.js","mtime":1555012088945},{"path":"C:\\work\\chat-client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\chat-client\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\work\\\\chat-client\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport axios from \"axios\";\nimport config from \"../config\";\nexport default {\n  namespaced: true,\n  state: {\n    users: {}\n  },\n  mutations: {\n    updateUser: function updateUser(state, userInfo) {\n      state.users[userInfo.id] = userInfo;\n    }\n  },\n  actions: {\n    getInfo: function () {\n      var _getInfo = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(_ref, _ref2) {\n        var commit, state, accessToken, userId, response, profile;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                commit = _ref.commit, state = _ref.state;\n                accessToken = _ref2.accessToken, userId = _ref2.userId;\n                console.log('getInfo', accessToken, userId);\n\n                if (!state.users[userId]) {\n                  _context.next = 5;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", state.users[userId]);\n\n              case 5:\n                _context.next = 7;\n                return axios({\n                  method: 'get',\n                  url: config.publicUserProfileUrl,\n                  params: {\n                    client_id: config.client.id,\n                    user_id: userId\n                  }\n                });\n\n              case 7:\n                response = _context.sent;\n                //console.log(`User ${userId} - ${response.data.username}`)\n                profile = response.data;\n                commit('updateUser', profile);\n                return _context.abrupt(\"return\", response.data);\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInfo(_x, _x2) {\n        return _getInfo.apply(this, arguments);\n      }\n\n      return getInfo;\n    }()\n  },\n  getters: {\n    users: function users(state) {\n      return state.users;\n    }\n  }\n};",{"version":3,"sources":["C:\\work\\chat-client\\src\\store\\user.js"],"names":["axios","config","namespaced","state","users","mutations","updateUser","userInfo","id","actions","getInfo","commit","accessToken","userId","console","log","method","url","publicUserProfileUrl","params","client_id","client","user_id","response","profile","data","getters"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AAEA,eAAe;AACXC,EAAAA,UAAU,EAAE,IADD;AAEXC,EAAAA,KAAK,EAAO;AACRC,IAAAA,KAAK,EAAE;AADC,GAFD;AAKXC,EAAAA,SAAS,EAAG;AACRC,IAAAA,UADQ,sBACGH,KADH,EACUI,QADV,EACoB;AACxBJ,MAAAA,KAAK,CAACC,KAAN,CAAYG,QAAQ,CAACC,EAArB,IAA2BD,QAA3B;AACH;AAHO,GALD;AAUXE,EAAAA,OAAO,EAAK;AACFC,IAAAA,OADE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACOC,gBAAAA,MADP,QACOA,MADP,EACeR,KADf,QACeA,KADf;AACwBS,gBAAAA,WADxB,SACwBA,WADxB,EACqCC,MADrC,SACqCA,MADrC;AAEJC,gBAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBH,WAAvB,EAAoCC,MAApC;;AAFI,qBAGAV,KAAK,CAACC,KAAN,CAAYS,MAAZ,CAHA;AAAA;AAAA;AAAA;;AAAA,iDAIOV,KAAK,CAACC,KAAN,CAAYS,MAAZ,CAJP;;AAAA;AAAA;AAAA,uBAMiBb,KAAK,CAAC;AACvBgB,kBAAAA,MAAM,EAAE,KADe;AAEvBC,kBAAAA,GAAG,EAAKhB,MAAM,CAACiB,oBAFQ;AAGvBC,kBAAAA,MAAM,EAAE;AACJC,oBAAAA,SAAS,EAAEnB,MAAM,CAACoB,MAAP,CAAcb,EADrB;AAEJc,oBAAAA,OAAO,EAAIT;AAFP;AAHe,iBAAD,CANtB;;AAAA;AAMAU,gBAAAA,QANA;AAcJ;AACIC,gBAAAA,OAfA,GAeUD,QAAQ,CAACE,IAfnB;AAgBJd,gBAAAA,MAAM,CAAC,YAAD,EAAea,OAAf,CAAN;AAhBI,iDAiBGD,QAAQ,CAACE,IAjBZ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,GAVD;AA8BXC,EAAAA,OAAO,EAAK;AACRtB,IAAAA,KADQ,iBACFD,KADE,EACK;AACT,aAAOA,KAAK,CAACC,KAAb;AACH;AAHO;AA9BD,CAAf","sourcesContent":["import axios from \"axios\";\r\nimport config from \"../config\";\r\n\r\nexport default {\r\n    namespaced: true,\r\n    state     : {\r\n        users: {},\r\n    },\r\n    mutations : {\r\n        updateUser(state, userInfo) {\r\n            state.users[userInfo.id] = userInfo;\r\n        },\r\n    },\r\n    actions   : {\r\n        async getInfo({commit, state}, {accessToken, userId}) {\r\n            console.log('getInfo', accessToken, userId);\r\n            if (state.users[userId]) {\r\n                return state.users[userId];\r\n            }\r\n            let response = await axios({\r\n                method: 'get',\r\n                url   : config.publicUserProfileUrl,\r\n                params: {\r\n                    client_id: config.client.id,\r\n                    user_id  : userId,\r\n                }\r\n            });\r\n            //console.log(`User ${userId} - ${response.data.username}`)\r\n            let profile = response.data;\r\n            commit('updateUser', profile);\r\n            return response.data;\r\n        },\r\n    },\r\n    getters   : {\r\n        users(state) {\r\n            return state.users;\r\n        },\r\n    },\r\n};"]}]}