{"remainingRequest":"C:\\work\\chat-client\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\work\\chat-client\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\work\\chat-client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\work\\chat-client\\src\\views\\channel.vue?vue&type=template&id=3aecf259&scoped=true&","dependencies":[{"path":"C:\\work\\chat-client\\src\\views\\channel.vue","mtime":1557593021355},{"path":"C:\\work\\chat-client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\chat-client\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\work\\chat-client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\chat-client\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"v-layout\",\n    { staticClass: \"screen\", attrs: { column: \"\" } },\n    [\n      _c(\n        \"v-flex\",\n        [\n          _c(\n            \"v-toolbar\",\n            { attrs: { dense: \"\", flat: \"\", relative: \"\" } },\n            [\n              _vm.profile &&\n              _vm.profile.ownerOf &&\n              _vm.profile.ownerOf.includes(_vm.channelId)\n                ? _c(\n                    \"v-chip\",\n                    { attrs: { label: \"\", color: \"red\" } },\n                    [\n                      _c(\"v-icon\", { attrs: { left: \"\" } }, [_vm._v(\"face\")]),\n                      _vm._v(\"\\n                owner\\n            \")\n                    ],\n                    1\n                  )\n                : _vm._e(),\n              _vm.channelInfo &&\n              _vm.channelInfo.type === _vm.Channel.TYPE_PUBLIC_GROUP_CHANNEL\n                ? _c(\n                    \"v-chip\",\n                    { attrs: { label: \"\", color: \"light-blue\" } },\n                    [\n                      _c(\"v-icon\", { attrs: { left: \"\" } }, [_vm._v(\"public\")]),\n                      _vm._v(\"\\n                public\\n            \")\n                    ],\n                    1\n                  )\n                : _vm._e(),\n              _vm.channelInfo &&\n              _vm.channelInfo.type === _vm.Channel.TYPE_PRIVATE_GROUP_CHANNEL\n                ? _c(\n                    \"v-chip\",\n                    { attrs: { label: \"\", color: \"light-blue\" } },\n                    [\n                      _c(\"v-icon\", { attrs: { left: \"\" } }, [\n                        _vm._v(\"group_work\")\n                      ]),\n                      _vm._v(\"\\n                private\\n            \")\n                    ],\n                    1\n                  )\n                : _vm._e(),\n              _c(\"span\", [\n                _vm._v(\n                  \"Channel \" +\n                    _vm._s(\n                      _vm.channelInfo\n                        ? _vm.channelInfo.meta.name\n                        : _vm.channelId\n                    )\n                )\n              ]),\n              _c(\"v-spacer\"),\n              _c(\n                \"v-btn\",\n                { attrs: { icon: \"\" } },\n                [_c(\"v-icon\", [_vm._v(\"group\")])],\n                1\n              ),\n              _c(\n                \"v-btn\",\n                { attrs: { icon: \"\" }, on: { click: _vm.leave } },\n                [_c(\"v-icon\", [_vm._v(\"exit_to_app\")])],\n                1\n              )\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _c(\n        \"v-flex\",\n        { attrs: { \"fill-height\": \"\" } },\n        [\n          _c(\n            \"v-layout\",\n            {\n              staticClass: \"main-content\",\n              attrs: { row: \"\", \"fill-height\": \"\" }\n            },\n            [\n              _c(\n                \"v-flex\",\n                {\n                  staticClass: \"messages-list\",\n                  attrs: { \"fill-height\": \"\", id: \"messages-list\" }\n                },\n                _vm._l(_vm.messagesBuffer, function(message) {\n                  return _c(\n                    \"v-layout\",\n                    { key: message.id, attrs: { column: \"\" } },\n                    [\n                      _c(\n                        \"div\",\n                        {\n                          class:\n                            (message.fromUserId === _vm.profile.id\n                              ? \"own-message\"\n                              : \"\") +\n                            \" \" +\n                            (!message.fromUserId ? \"system-message\" : \"\")\n                        },\n                        [\n                          _c(\"date-widget\", {\n                            model: {\n                              value: message.createdAt,\n                              callback: function($$v) {\n                                _vm.$set(message, \"createdAt\", $$v)\n                              },\n                              expression: \"message.createdAt\"\n                            }\n                          }),\n                          _c(\"b\", [\n                            _vm._v(\n                              _vm._s(\n                                message.fromUserId === _vm.profile.id\n                                  ? \"You\"\n                                  : message.fromUserId\n                              )\n                            )\n                          ]),\n                          _vm._v(\n                            \" \" +\n                              _vm._s(message.text) +\n                              \"\\n                    \"\n                          )\n                        ],\n                        1\n                      )\n                    ]\n                  )\n                }),\n                1\n              ),\n              _c(\n                \"v-navigation-drawer\",\n                {\n                  attrs: { right: \"\" },\n                  model: {\n                    value: _vm.membersVisible,\n                    callback: function($$v) {\n                      _vm.membersVisible = $$v\n                    },\n                    expression: \"membersVisible\"\n                  }\n                },\n                [\n                  _c(\n                    \"v-list\",\n                    { attrs: { dense: \"\" } },\n                    [\n                      _c(\n                        \"v-list-tile\",\n                        [\n                          _c(\n                            \"v-list-tile-action\",\n                            [\n                              _c(\n                                \"v-btn\",\n                                {\n                                  attrs: { icon: \"\" },\n                                  on: { click: _vm.showInviteUserDialog }\n                                },\n                                [_c(\"v-icon\", [_vm._v(\"person_add\")])],\n                                1\n                              )\n                            ],\n                            1\n                          )\n                        ],\n                        1\n                      ),\n                      _c(\"v-divider\"),\n                      _vm._l(_vm.members, function(member, idx) {\n                        return _c(\n                          \"v-list-tile\",\n                          { key: idx },\n                          [\n                            _c(\n                              \"v-list-tile-content\",\n                              [\n                                _c(\"v-list-tile-title\", [\n                                  _vm._v(\n                                    _vm._s(member.username || member.userId) +\n                                      \" \" +\n                                      _vm._s(\n                                        member.userId === _vm.profile.id\n                                          ? \"(you)\"\n                                          : \"\"\n                                      ) +\n                                      \"\\n                            \"\n                                  )\n                                ])\n                              ],\n                              1\n                            )\n                          ],\n                          1\n                        )\n                      })\n                    ],\n                    2\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _c(\n        \"v-flex\",\n        [\n          _c(\n            \"v-layout\",\n            { attrs: { row: \"\" } },\n            [\n              _c(\n                \"v-flex\",\n                { attrs: { grow: \"\" } },\n                [\n                  _c(\"v-textarea\", {\n                    staticClass: \"message-textarea\",\n                    attrs: { clearable: \"\", box: \"\", light: \"\", rows: \"3\" },\n                    on: {\n                      keypress: [\n                        function($event) {\n                          if (\n                            !$event.type.indexOf(\"key\") &&\n                            _vm._k($event.keyCode, \"esc\", 27, $event.key, [\n                              \"Esc\",\n                              \"Escape\"\n                            ])\n                          ) {\n                            return null\n                          }\n                          return _vm.clearMessage($event)\n                        },\n                        function($event) {\n                          if (\n                            !$event.type.indexOf(\"key\") &&\n                            _vm._k(\n                              $event.keyCode,\n                              \"enter\",\n                              13,\n                              $event.key,\n                              \"Enter\"\n                            )\n                          ) {\n                            return null\n                          }\n                          return _vm.onTextAreaKeypress($event)\n                        }\n                      ]\n                    },\n                    model: {\n                      value: _vm.message,\n                      callback: function($$v) {\n                        _vm.message = $$v\n                      },\n                      expression: \"message\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _c(\n                \"v-flex\",\n                { attrs: { shrink: \"\" } },\n                [\n                  _c(\n                    \"v-btn\",\n                    {\n                      attrs: { icon: \"\" },\n                      on: { click: _vm.tryToSendMessage }\n                    },\n                    [_c(\"v-icon\", [_vm._v(\"done\")])],\n                    1\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _c(\"invite-user-dialog\", {\n        attrs: { visible: _vm.userInviteDialogVisible },\n        on: { invite: _vm.inviteUser, cancel: _vm.hideInviteUserDialog }\n      })\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}