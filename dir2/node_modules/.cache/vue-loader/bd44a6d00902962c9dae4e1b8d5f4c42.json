{"remainingRequest":"C:\\work\\chat-client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\work\\chat-client\\src\\component\\dialog\\public-channel-picker.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\work\\chat-client\\src\\component\\dialog\\public-channel-picker.vue","mtime":1552754654738},{"path":"C:\\work\\chat-client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\chat-client\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\work\\chat-client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\chat-client\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {mapActions, mapGetters} from 'vuex';\n\nexport default {\n    data() {\n        return {\n            channelId      : null,\n            pubChannelsList: null\n        }\n    },\n    props  : {\n        visible: {\n            type   : Boolean,\n            default: false\n        }\n    },\n    methods: {\n        ...mapActions({\n            getPublicChannelsList: 'Socket/getPublicChannelsList'\n        }),\n        pick() {\n            this.$emit('select', this.channelId);\n        },\n        cancel() {\n            this.$emit('cancel');\n        }\n    },\n    computed: {\n        ...mapGetters({\n            profile: 'Socket/profile'\n        })\n    },\n    watch  : {\n        async visible(newValue) {\n            if (!newValue) {\n                return;\n            }\n            this.channelId = null;\n            let data = await this.getPublicChannelsList(1, 20);\n            console.log('Got pub channels list', data);\n            this.pubChannelsList = data.rows\n                .filter((item) => {\n                    return !this.profile.memberOf.includes(item.id)\n                })\n                .map(item => {\n                    return {\n                        'text' : item.meta.name,\n                        'value': item.id,\n                    }\n                })\n        }\n    }\n}\n",{"version":3,"sources":["public-channel-picker.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"public-channel-picker.vue","sourceRoot":"src/component/dialog","sourcesContent":["<template>\r\n    <v-dialog\r\n            :value=\"visible\"\r\n            width=\"500\"\r\n            persistent\r\n    >\r\n        <v-card>\r\n            <v-card-title\r\n                    class=\"headline grey lighten-2\"\r\n                    primary-title\r\n            >\r\n                Pick a channel\r\n                <v-spacer></v-spacer>\r\n                <v-btn icon flat @click=\"cancel\">\r\n                    <v-icon>close</v-icon>\r\n                </v-btn>\r\n            </v-card-title>\r\n\r\n            <v-card-text>\r\n                <v-select :loading=\"!pubChannelsList\" v-model=\"channelId\" :items=\"pubChannelsList\"></v-select>\r\n            </v-card-text>\r\n\r\n            <v-divider></v-divider>\r\n\r\n            <v-card-actions>\r\n                <v-spacer></v-spacer>\r\n                <v-btn\r\n                        color=\"primary\"\r\n                        flat\r\n                        @click=\"pick\"\r\n                >\r\n                    Connect\r\n                </v-btn>\r\n            </v-card-actions>\r\n        </v-card>\r\n    </v-dialog>\r\n</template>\r\n<script>\r\n    import {mapActions, mapGetters} from 'vuex';\r\n\r\n    export default {\r\n        data() {\r\n            return {\r\n                channelId      : null,\r\n                pubChannelsList: null\r\n            }\r\n        },\r\n        props  : {\r\n            visible: {\r\n                type   : Boolean,\r\n                default: false\r\n            }\r\n        },\r\n        methods: {\r\n            ...mapActions({\r\n                getPublicChannelsList: 'Socket/getPublicChannelsList'\r\n            }),\r\n            pick() {\r\n                this.$emit('select', this.channelId);\r\n            },\r\n            cancel() {\r\n                this.$emit('cancel');\r\n            }\r\n        },\r\n        computed: {\r\n            ...mapGetters({\r\n                profile: 'Socket/profile'\r\n            })\r\n        },\r\n        watch  : {\r\n            async visible(newValue) {\r\n                if (!newValue) {\r\n                    return;\r\n                }\r\n                this.channelId = null;\r\n                let data = await this.getPublicChannelsList(1, 20);\r\n                console.log('Got pub channels list', data);\r\n                this.pubChannelsList = data.rows\r\n                    .filter((item) => {\r\n                        return !this.profile.memberOf.includes(item.id)\r\n                    })\r\n                    .map(item => {\r\n                        return {\r\n                            'text' : item.meta.name,\r\n                            'value': item.id,\r\n                        }\r\n                    })\r\n            }\r\n        }\r\n    }\r\n</script>"]}]}